/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./dist/version.js":
/*!*************************!*\
  !*** ./dist/version.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nvar version = '2.23.1';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kaXN0L3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQU1BLE9BQU8sR0FBRyxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL2Rpc3QvdmVyc2lvbi5qcz80OWMxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuMjMuMSc7XG4iXSwibmFtZXMiOlsidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./dist/version.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/decode-codepoint.js":
/*!************************************************************!*\
  !*** ./node_modules/entities/dist/esm/decode-codepoint.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeCodePoint: () => (/* binding */ decodeCodePoint),\n/* harmony export */   fromCodePoint: () => (/* binding */ fromCodePoint),\n/* harmony export */   replaceCodePoint: () => (/* binding */ replaceCodePoint)\n/* harmony export */ });\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nconst fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 65535) {\n        codePoint -= 65536;\n        output += String.fromCharCode(((codePoint >>> 10) & 1023) | 55296);\n        codePoint = 56320 | (codePoint & 1023);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nfunction replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 55296 && codePoint <= 57343) ||\n        codePoint > 1114111) {\n        return 65533;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nfunction decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode-codepoint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vZGVjb2RlLWNvZGVwb2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2VudGl0aWVzL2Rpc3QvZXNtL2RlY29kZS1jb2RlcG9pbnQuanM/MjZlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hdGhpYXNieW5lbnMvaGUvYmxvYi8zNmFmZTE3OTM5MjIyNmNmMWI2Y2NkYjE2ZWJiYjdhNWE4NDRkOTNhL3NyYy9oZS5qcyNMMTA2LUwxMzRcbnZhciBfYTtcbmNvbnN0IGRlY29kZU1hcCA9IG5ldyBNYXAoW1xuICAgIFswLCA2NTUzM10sXG4gICAgLy8gQzEgVW5pY29kZSBjb250cm9sIGNoYXJhY3RlciByZWZlcmVuY2UgcmVwbGFjZW1lbnRzXG4gICAgWzEyOCwgODM2NF0sXG4gICAgWzEzMCwgODIxOF0sXG4gICAgWzEzMSwgNDAyXSxcbiAgICBbMTMyLCA4MjIyXSxcbiAgICBbMTMzLCA4MjMwXSxcbiAgICBbMTM0LCA4MjI0XSxcbiAgICBbMTM1LCA4MjI1XSxcbiAgICBbMTM2LCA3MTBdLFxuICAgIFsxMzcsIDgyNDBdLFxuICAgIFsxMzgsIDM1Ml0sXG4gICAgWzEzOSwgODI0OV0sXG4gICAgWzE0MCwgMzM4XSxcbiAgICBbMTQyLCAzODFdLFxuICAgIFsxNDUsIDgyMTZdLFxuICAgIFsxNDYsIDgyMTddLFxuICAgIFsxNDcsIDgyMjBdLFxuICAgIFsxNDgsIDgyMjFdLFxuICAgIFsxNDksIDgyMjZdLFxuICAgIFsxNTAsIDgyMTFdLFxuICAgIFsxNTEsIDgyMTJdLFxuICAgIFsxNTIsIDczMl0sXG4gICAgWzE1MywgODQ4Ml0sXG4gICAgWzE1NCwgMzUzXSxcbiAgICBbMTU1LCA4MjUwXSxcbiAgICBbMTU2LCAzMzldLFxuICAgIFsxNTgsIDM4Ml0sXG4gICAgWzE1OSwgMzc2XSxcbl0pO1xuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgYFN0cmluZy5mcm9tQ29kZVBvaW50YC4gSXQgaXMgdXNlZCB0byBjcmVhdGUgYSBzdHJpbmcgZnJvbSBhIFVuaWNvZGUgY29kZSBwb2ludC5cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21Db2RlUG9pbnQgPSBcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5uZWNlc3NhcnktY29uZGl0aW9uLCBuL25vLXVuc3VwcG9ydGVkLWZlYXR1cmVzL2VzLWJ1aWx0aW5zXG4oX2EgPSBTdHJpbmcuZnJvbUNvZGVQb2ludCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZnVuY3Rpb24gKGNvZGVQb2ludCkge1xuICAgIGxldCBvdXRwdXQgPSBcIlwiO1xuICAgIGlmIChjb2RlUG9pbnQgPiA2NTUzNSkge1xuICAgICAgICBjb2RlUG9pbnQgLT0gNjU1MzY7XG4gICAgICAgIG91dHB1dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKCgoY29kZVBvaW50ID4+PiAxMCkgJiAxMDIzKSB8IDU1Mjk2KTtcbiAgICAgICAgY29kZVBvaW50ID0gNTYzMjAgfCAoY29kZVBvaW50ICYgMTAyMyk7XG4gICAgfVxuICAgIG91dHB1dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGVQb2ludCk7XG4gICAgcmV0dXJuIG91dHB1dDtcbn07XG4vKipcbiAqIFJlcGxhY2UgdGhlIGdpdmVuIGNvZGUgcG9pbnQgd2l0aCBhIHJlcGxhY2VtZW50IGNoYXJhY3RlciBpZiBpdCBpcyBhXG4gKiBzdXJyb2dhdGUgb3IgaXMgb3V0c2lkZSB0aGUgdmFsaWQgcmFuZ2UuIE90aGVyd2lzZSByZXR1cm4gdGhlIGNvZGVcbiAqIHBvaW50IHVuY2hhbmdlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VDb2RlUG9pbnQoY29kZVBvaW50KSB7XG4gICAgdmFyIF9hO1xuICAgIGlmICgoY29kZVBvaW50ID49IDU1Mjk2ICYmIGNvZGVQb2ludCA8PSA1NzM0MykgfHxcbiAgICAgICAgY29kZVBvaW50ID4gMTExNDExMSkge1xuICAgICAgICByZXR1cm4gNjU1MzM7XG4gICAgfVxuICAgIHJldHVybiAoX2EgPSBkZWNvZGVNYXAuZ2V0KGNvZGVQb2ludCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNvZGVQb2ludDtcbn1cbi8qKlxuICogUmVwbGFjZSB0aGUgY29kZSBwb2ludCBpZiByZWxldmFudCwgdGhlbiBjb252ZXJ0IGl0IHRvIGEgc3RyaW5nLlxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSBgZnJvbUNvZGVQb2ludChyZXBsYWNlQ29kZVBvaW50KGNvZGVQb2ludCkpYCBpbnN0ZWFkLlxuICogQHBhcmFtIGNvZGVQb2ludCBUaGUgY29kZSBwb2ludCB0byBkZWNvZGUuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBjb2RlIHBvaW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQ29kZVBvaW50KGNvZGVQb2ludCkge1xuICAgIHJldHVybiBmcm9tQ29kZVBvaW50KHJlcGxhY2VDb2RlUG9pbnQoY29kZVBvaW50KSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUtY29kZXBvaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/decode-codepoint.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/decode.js":
/*!**************************************************!*\
  !*** ./node_modules/entities/dist/esm/decode.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinTrieFlags: () => (/* binding */ BinTrieFlags),\n/* harmony export */   DecodingMode: () => (/* binding */ DecodingMode),\n/* harmony export */   EntityDecoder: () => (/* binding */ EntityDecoder),\n/* harmony export */   decodeCodePoint: () => (/* reexport safe */ _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.decodeCodePoint),\n/* harmony export */   decodeHTML: () => (/* binding */ decodeHTML),\n/* harmony export */   decodeHTMLAttribute: () => (/* binding */ decodeHTMLAttribute),\n/* harmony export */   decodeHTMLStrict: () => (/* binding */ decodeHTMLStrict),\n/* harmony export */   decodeXML: () => (/* binding */ decodeXML),\n/* harmony export */   determineBranch: () => (/* binding */ determineBranch),\n/* harmony export */   fromCodePoint: () => (/* reexport safe */ _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.fromCodePoint),\n/* harmony export */   htmlDecodeTree: () => (/* reexport safe */ _generated_decode_data_html_js__WEBPACK_IMPORTED_MODULE_0__.htmlDecodeTree),\n/* harmony export */   replaceCodePoint: () => (/* reexport safe */ _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.replaceCodePoint),\n/* harmony export */   xmlDecodeTree: () => (/* reexport safe */ _generated_decode_data_xml_js__WEBPACK_IMPORTED_MODULE_1__.xmlDecodeTree)\n/* harmony export */ });\n/* harmony import */ var _generated_decode_data_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/decode-data-html.js */ \"./node_modules/entities/dist/esm/generated/decode-data-html.js\");\n/* harmony import */ var _generated_decode_data_xml_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/decode-data-xml.js */ \"./node_modules/entities/dist/esm/generated/decode-data-xml.js\");\n/* harmony import */ var _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decode-codepoint.js */ \"./node_modules/entities/dist/esm/decode-codepoint.js\");\n\n\n\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 32;\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nclass EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(input, offset) {\n        if (offset >= input.length) {\n            return -1;\n        }\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n    addToNumericResult(input, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint((0,_decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.replaceCodePoint)(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(input, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(decodeTree, (data) => (returnValue += (0,_decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.fromCodePoint)(data)));\n    return function decodeWithTrie(input, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = input.indexOf(\"&\", offset)) >= 0) {\n            returnValue += input.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const length = decoder.write(input, \n            // Skip the \"&\"\n            offset + 1);\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = returnValue + input.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nfunction determineBranch(decodeTree, current, nodeIndex, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n        if (midValue < char) {\n            lo = mid + 1;\n        }\n        else if (midValue > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = /* #__PURE__ */ getDecoder(_generated_decode_data_html_js__WEBPACK_IMPORTED_MODULE_0__.htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(_generated_decode_data_xml_js__WEBPACK_IMPORTED_MODULE_1__.xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nfunction decodeHTML(htmlString, mode = DecodingMode.Legacy) {\n    return htmlDecoder(htmlString, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */\nfunction decodeHTMLAttribute(htmlAttribute) {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */\nfunction decodeHTMLStrict(htmlString) {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */\nfunction decodeXML(xmlString) {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n// Re-export for use by eg. htmlparser2\n\n\n\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/decode.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/encode.js":
/*!**************************************************!*\
  !*** ./node_modules/entities/dist/esm/encode.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeHTML: () => (/* binding */ encodeHTML),\n/* harmony export */   encodeNonAsciiHTML: () => (/* binding */ encodeNonAsciiHTML)\n/* harmony export */ });\n/* harmony import */ var _generated_encode_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/encode-html.js */ \"./node_modules/entities/dist/esm/generated/encode-html.js\");\n/* harmony import */ var _escape_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./escape.js */ \"./node_modules/entities/dist/esm/escape.js\");\n\n\nconst htmlReplacer = /[\\t\\n\\f!-,./:-@[-`{-}\\u0080-\\uFFFF]/g;\n/**\n * Encodes all characters in the input using HTML entities. This includes\n * characters that are valid ASCII characters in HTML documents, such as `#`.\n *\n * To get a more compact output, consider using the `encodeNonAsciiHTML`\n * function, which will only encode characters that are not valid in HTML\n * documents, as well as non-ASCII characters.\n *\n * If a character has no equivalent entity, a numeric hexadecimal reference\n * (eg. `&#xfc;`) will be used.\n */\nfunction encodeHTML(input) {\n    return encodeHTMLTrieRe(htmlReplacer, input);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities. This function will not encode characters that\n * are valid in HTML documents, such as `#`.\n *\n * If a character has no equivalent entity, a numeric hexadecimal reference\n * (eg. `&#xfc;`) will be used.\n */\nfunction encodeNonAsciiHTML(input) {\n    return encodeHTMLTrieRe(_escape_js__WEBPACK_IMPORTED_MODULE_1__.xmlReplacer, input);\n}\nfunction encodeHTMLTrieRe(regExp, input) {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n    while ((match = regExp.exec(input)) !== null) {\n        const { index } = match;\n        returnValue += input.substring(lastIndex, index);\n        const char = input.charCodeAt(index);\n        let next = _generated_encode_html_js__WEBPACK_IMPORTED_MODULE_0__.htmlTrie.get(char);\n        if (typeof next === \"object\") {\n            // We are in a branch. Try to match the next char.\n            if (index + 1 < input.length) {\n                const nextChar = input.charCodeAt(index + 1);\n                const value = typeof next.n === \"number\"\n                    ? next.n === nextChar\n                        ? next.o\n                        : undefined\n                    : next.n.get(nextChar);\n                if (value !== undefined) {\n                    returnValue += value;\n                    lastIndex = regExp.lastIndex += 1;\n                    continue;\n                }\n            }\n            next = next.v;\n        }\n        // We might have a tree node without a value; skip and use a numeric entity.\n        if (next === undefined) {\n            const cp = (0,_escape_js__WEBPACK_IMPORTED_MODULE_1__.getCodePoint)(input, index);\n            returnValue += `&#x${cp.toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = regExp.lastIndex += Number(cp !== char);\n        }\n        else {\n            returnValue += next;\n            lastIndex = index + 1;\n        }\n    }\n    return returnValue + input.substr(lastIndex);\n}\n//# sourceMappingURL=encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vZW5jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Q7QUFDRTtBQUN4RCx5Q0FBeUMsRUFBRTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDTztBQUNQLDRCQUE0QixtREFBVztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0EsbUJBQW1CLCtEQUFRO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQ7QUFDQSx1QkFBdUIsd0RBQVk7QUFDbkMsaUNBQWlDLGlCQUFpQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9lbnRpdGllcy9kaXN0L2VzbS9lbmNvZGUuanM/YzIzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBodG1sVHJpZSB9IGZyb20gXCIuL2dlbmVyYXRlZC9lbmNvZGUtaHRtbC5qc1wiO1xuaW1wb3J0IHsgeG1sUmVwbGFjZXIsIGdldENvZGVQb2ludCB9IGZyb20gXCIuL2VzY2FwZS5qc1wiO1xuY29uc3QgaHRtbFJlcGxhY2VyID0gL1tcXHRcXG5cXGYhLSwuLzotQFstYHstfVxcdTAwODAtXFx1RkZGRl0vZztcbi8qKlxuICogRW5jb2RlcyBhbGwgY2hhcmFjdGVycyBpbiB0aGUgaW5wdXQgdXNpbmcgSFRNTCBlbnRpdGllcy4gVGhpcyBpbmNsdWRlc1xuICogY2hhcmFjdGVycyB0aGF0IGFyZSB2YWxpZCBBU0NJSSBjaGFyYWN0ZXJzIGluIEhUTUwgZG9jdW1lbnRzLCBzdWNoIGFzIGAjYC5cbiAqXG4gKiBUbyBnZXQgYSBtb3JlIGNvbXBhY3Qgb3V0cHV0LCBjb25zaWRlciB1c2luZyB0aGUgYGVuY29kZU5vbkFzY2lpSFRNTGBcbiAqIGZ1bmN0aW9uLCB3aGljaCB3aWxsIG9ubHkgZW5jb2RlIGNoYXJhY3RlcnMgdGhhdCBhcmUgbm90IHZhbGlkIGluIEhUTUxcbiAqIGRvY3VtZW50cywgYXMgd2VsbCBhcyBub24tQVNDSUkgY2hhcmFjdGVycy5cbiAqXG4gKiBJZiBhIGNoYXJhY3RlciBoYXMgbm8gZXF1aXZhbGVudCBlbnRpdHksIGEgbnVtZXJpYyBoZXhhZGVjaW1hbCByZWZlcmVuY2VcbiAqIChlZy4gYCYjeGZjO2ApIHdpbGwgYmUgdXNlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUhUTUwoaW5wdXQpIHtcbiAgICByZXR1cm4gZW5jb2RlSFRNTFRyaWVSZShodG1sUmVwbGFjZXIsIGlucHV0KTtcbn1cbi8qKlxuICogRW5jb2RlcyBhbGwgbm9uLUFTQ0lJIGNoYXJhY3RlcnMsIGFzIHdlbGwgYXMgY2hhcmFjdGVycyBub3QgdmFsaWQgaW4gSFRNTFxuICogZG9jdW1lbnRzIHVzaW5nIEhUTUwgZW50aXRpZXMuIFRoaXMgZnVuY3Rpb24gd2lsbCBub3QgZW5jb2RlIGNoYXJhY3RlcnMgdGhhdFxuICogYXJlIHZhbGlkIGluIEhUTUwgZG9jdW1lbnRzLCBzdWNoIGFzIGAjYC5cbiAqXG4gKiBJZiBhIGNoYXJhY3RlciBoYXMgbm8gZXF1aXZhbGVudCBlbnRpdHksIGEgbnVtZXJpYyBoZXhhZGVjaW1hbCByZWZlcmVuY2VcbiAqIChlZy4gYCYjeGZjO2ApIHdpbGwgYmUgdXNlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZU5vbkFzY2lpSFRNTChpbnB1dCkge1xuICAgIHJldHVybiBlbmNvZGVIVE1MVHJpZVJlKHhtbFJlcGxhY2VyLCBpbnB1dCk7XG59XG5mdW5jdGlvbiBlbmNvZGVIVE1MVHJpZVJlKHJlZ0V4cCwgaW5wdXQpIHtcbiAgICBsZXQgcmV0dXJuVmFsdWUgPSBcIlwiO1xuICAgIGxldCBsYXN0SW5kZXggPSAwO1xuICAgIGxldCBtYXRjaDtcbiAgICB3aGlsZSAoKG1hdGNoID0gcmVnRXhwLmV4ZWMoaW5wdXQpKSAhPT0gbnVsbCkge1xuICAgICAgICBjb25zdCB7IGluZGV4IH0gPSBtYXRjaDtcbiAgICAgICAgcmV0dXJuVmFsdWUgKz0gaW5wdXQuc3Vic3RyaW5nKGxhc3RJbmRleCwgaW5kZXgpO1xuICAgICAgICBjb25zdCBjaGFyID0gaW5wdXQuY2hhckNvZGVBdChpbmRleCk7XG4gICAgICAgIGxldCBuZXh0ID0gaHRtbFRyaWUuZ2V0KGNoYXIpO1xuICAgICAgICBpZiAodHlwZW9mIG5leHQgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIC8vIFdlIGFyZSBpbiBhIGJyYW5jaC4gVHJ5IHRvIG1hdGNoIHRoZSBuZXh0IGNoYXIuXG4gICAgICAgICAgICBpZiAoaW5kZXggKyAxIDwgaW5wdXQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV4dENoYXIgPSBpbnB1dC5jaGFyQ29kZUF0KGluZGV4ICsgMSk7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0eXBlb2YgbmV4dC5uID09PSBcIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgID8gbmV4dC5uID09PSBuZXh0Q2hhclxuICAgICAgICAgICAgICAgICAgICAgICAgPyBuZXh0Lm9cbiAgICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgIDogbmV4dC5uLmdldChuZXh0Q2hhcik7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuVmFsdWUgKz0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGxhc3RJbmRleCA9IHJlZ0V4cC5sYXN0SW5kZXggKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dCA9IG5leHQudjtcbiAgICAgICAgfVxuICAgICAgICAvLyBXZSBtaWdodCBoYXZlIGEgdHJlZSBub2RlIHdpdGhvdXQgYSB2YWx1ZTsgc2tpcCBhbmQgdXNlIGEgbnVtZXJpYyBlbnRpdHkuXG4gICAgICAgIGlmIChuZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGNwID0gZ2V0Q29kZVBvaW50KGlucHV0LCBpbmRleCk7XG4gICAgICAgICAgICByZXR1cm5WYWx1ZSArPSBgJiN4JHtjcC50b1N0cmluZygxNil9O2A7XG4gICAgICAgICAgICAvLyBJbmNyZWFzZSBieSAxIGlmIHdlIGhhdmUgYSBzdXJyb2dhdGUgcGFpclxuICAgICAgICAgICAgbGFzdEluZGV4ID0gcmVnRXhwLmxhc3RJbmRleCArPSBOdW1iZXIoY3AgIT09IGNoYXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuVmFsdWUgKz0gbmV4dDtcbiAgICAgICAgICAgIGxhc3RJbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmV0dXJuVmFsdWUgKyBpbnB1dC5zdWJzdHIobGFzdEluZGV4KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuY29kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/encode.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/escape.js":
/*!**************************************************!*\
  !*** ./node_modules/entities/dist/esm/escape.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeXML: () => (/* binding */ encodeXML),\n/* harmony export */   escape: () => (/* binding */ escape),\n/* harmony export */   escapeAttribute: () => (/* binding */ escapeAttribute),\n/* harmony export */   escapeText: () => (/* binding */ escapeText),\n/* harmony export */   escapeUTF8: () => (/* binding */ escapeUTF8),\n/* harmony export */   getCodePoint: () => (/* binding */ getCodePoint),\n/* harmony export */   xmlReplacer: () => (/* binding */ xmlReplacer)\n/* harmony export */ });\nconst xmlReplacer = /[\"$&'<>\\u0080-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nconst getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt == null\n    ? (c, index) => (c.charCodeAt(index) & 64512) === 55296\n        ? (c.charCodeAt(index) - 55296) * 1024 +\n            c.charCodeAt(index + 1) -\n            56320 +\n            65536\n        : c.charCodeAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (input, index) => input.codePointAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nfunction encodeXML(input) {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n    while ((match = xmlReplacer.exec(input)) !== null) {\n        const { index } = match;\n        const char = input.charCodeAt(index);\n        const next = xmlCodeMap.get(char);\n        if (next === undefined) {\n            returnValue += `${input.substring(lastIndex, index)}&#x${getCodePoint(input, index).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = xmlReplacer.lastIndex += Number((char & 64512) === 55296);\n        }\n        else {\n            returnValue += input.substring(lastIndex, index) + next;\n            lastIndex = index + 1;\n        }\n    }\n    return returnValue + input.substr(lastIndex);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nconst escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIndex = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIndex !== match.index) {\n                result += data.substring(lastIndex, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIndex = match.index + 1;\n        }\n        return result + data.substring(lastIndex);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nconst escapeUTF8 = /* #__PURE__ */ getEscaper(/[\"&'<>]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeAttribute = \n/* #__PURE__ */ getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeText = /* #__PURE__ */ getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vZXNjYXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0EsZ0JBQWdCO0FBQ2hCLGVBQWU7QUFDZixnQkFBZ0I7QUFDaEIsY0FBYztBQUNkLGNBQWM7QUFDZDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQyxLQUFLLHlDQUF5QztBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGNBQWMseUVBQXlFO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxnQkFBZ0I7QUFDaEIsZUFBZTtBQUNmLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxjQUFjLHlFQUF5RTtBQUN2RjtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWU7QUFDZixjQUFjO0FBQ2QsY0FBYztBQUNkLGlCQUFpQjtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9lbnRpdGllcy9kaXN0L2VzbS9lc2NhcGUuanM/OTJiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgeG1sUmVwbGFjZXIgPSAvW1wiJCYnPD5cXHUwMDgwLVxcdUZGRkZdL2c7XG5jb25zdCB4bWxDb2RlTWFwID0gbmV3IE1hcChbXG4gICAgWzM0LCBcIiZxdW90O1wiXSxcbiAgICBbMzgsIFwiJmFtcDtcIl0sXG4gICAgWzM5LCBcIiZhcG9zO1wiXSxcbiAgICBbNjAsIFwiJmx0O1wiXSxcbiAgICBbNjIsIFwiJmd0O1wiXSxcbl0pO1xuLy8gRm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub2RlIDwgNCwgd2Ugd3JhcCBgY29kZVBvaW50QXRgXG5leHBvcnQgY29uc3QgZ2V0Q29kZVBvaW50ID0gXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LWNvbmRpdGlvblxuU3RyaW5nLnByb3RvdHlwZS5jb2RlUG9pbnRBdCA9PSBudWxsXG4gICAgPyAoYywgaW5kZXgpID0+IChjLmNoYXJDb2RlQXQoaW5kZXgpICYgNjQ1MTIpID09PSA1NTI5NlxuICAgICAgICA/IChjLmNoYXJDb2RlQXQoaW5kZXgpIC0gNTUyOTYpICogMTAyNCArXG4gICAgICAgICAgICBjLmNoYXJDb2RlQXQoaW5kZXggKyAxKSAtXG4gICAgICAgICAgICA1NjMyMCArXG4gICAgICAgICAgICA2NTUzNlxuICAgICAgICA6IGMuY2hhckNvZGVBdChpbmRleClcbiAgICA6IC8vIGh0dHA6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmcjc3Vycm9nYXRlLWZvcm11bGFlXG4gICAgICAgIChpbnB1dCwgaW5kZXgpID0+IGlucHV0LmNvZGVQb2ludEF0KGluZGV4KTtcbi8qKlxuICogRW5jb2RlcyBhbGwgbm9uLUFTQ0lJIGNoYXJhY3RlcnMsIGFzIHdlbGwgYXMgY2hhcmFjdGVycyBub3QgdmFsaWQgaW4gWE1MXG4gKiBkb2N1bWVudHMgdXNpbmcgWE1MIGVudGl0aWVzLlxuICpcbiAqIElmIGEgY2hhcmFjdGVyIGhhcyBubyBlcXVpdmFsZW50IGVudGl0eSwgYVxuICogbnVtZXJpYyBoZXhhZGVjaW1hbCByZWZlcmVuY2UgKGVnLiBgJiN4ZmM7YCkgd2lsbCBiZSB1c2VkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlWE1MKGlucHV0KSB7XG4gICAgbGV0IHJldHVyblZhbHVlID0gXCJcIjtcbiAgICBsZXQgbGFzdEluZGV4ID0gMDtcbiAgICBsZXQgbWF0Y2g7XG4gICAgd2hpbGUgKChtYXRjaCA9IHhtbFJlcGxhY2VyLmV4ZWMoaW5wdXQpKSAhPT0gbnVsbCkge1xuICAgICAgICBjb25zdCB7IGluZGV4IH0gPSBtYXRjaDtcbiAgICAgICAgY29uc3QgY2hhciA9IGlucHV0LmNoYXJDb2RlQXQoaW5kZXgpO1xuICAgICAgICBjb25zdCBuZXh0ID0geG1sQ29kZU1hcC5nZXQoY2hhcik7XG4gICAgICAgIGlmIChuZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVyblZhbHVlICs9IGAke2lucHV0LnN1YnN0cmluZyhsYXN0SW5kZXgsIGluZGV4KX0mI3gke2dldENvZGVQb2ludChpbnB1dCwgaW5kZXgpLnRvU3RyaW5nKDE2KX07YDtcbiAgICAgICAgICAgIC8vIEluY3JlYXNlIGJ5IDEgaWYgd2UgaGF2ZSBhIHN1cnJvZ2F0ZSBwYWlyXG4gICAgICAgICAgICBsYXN0SW5kZXggPSB4bWxSZXBsYWNlci5sYXN0SW5kZXggKz0gTnVtYmVyKChjaGFyICYgNjQ1MTIpID09PSA1NTI5Nik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm5WYWx1ZSArPSBpbnB1dC5zdWJzdHJpbmcobGFzdEluZGV4LCBpbmRleCkgKyBuZXh0O1xuICAgICAgICAgICAgbGFzdEluZGV4ID0gaW5kZXggKyAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXR1cm5WYWx1ZSArIGlucHV0LnN1YnN0cihsYXN0SW5kZXgpO1xufVxuLyoqXG4gKiBFbmNvZGVzIGFsbCBub24tQVNDSUkgY2hhcmFjdGVycywgYXMgd2VsbCBhcyBjaGFyYWN0ZXJzIG5vdCB2YWxpZCBpbiBYTUxcbiAqIGRvY3VtZW50cyB1c2luZyBudW1lcmljIGhleGFkZWNpbWFsIHJlZmVyZW5jZSAoZWcuIGAmI3hmYztgKS5cbiAqXG4gKiBIYXZlIGEgbG9vayBhdCBgZXNjYXBlVVRGOGAgaWYgeW91IHdhbnQgYSBtb3JlIGNvbmNpc2Ugb3V0cHV0IGF0IHRoZSBleHBlbnNlXG4gKiBvZiByZWR1Y2VkIHRyYW5zcG9ydGFiaWxpdHkuXG4gKlxuICogQHBhcmFtIGRhdGEgU3RyaW5nIHRvIGVzY2FwZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGVzY2FwZSA9IGVuY29kZVhNTDtcbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgZXNjYXBlcyBhbGwgY2hhcmFjdGVycyBtYXRjaGVkIGJ5IHRoZSBnaXZlbiByZWd1bGFyXG4gKiBleHByZXNzaW9uIHVzaW5nIHRoZSBnaXZlbiBtYXAgb2YgY2hhcmFjdGVycyB0byBlc2NhcGUgdG8gdGhlaXIgZW50aXRpZXMuXG4gKlxuICogQHBhcmFtIHJlZ2V4IFJlZ3VsYXIgZXhwcmVzc2lvbiB0byBtYXRjaCBjaGFyYWN0ZXJzIHRvIGVzY2FwZS5cbiAqIEBwYXJhbSBtYXAgTWFwIG9mIGNoYXJhY3RlcnMgdG8gZXNjYXBlIHRvIHRoZWlyIGVudGl0aWVzLlxuICpcbiAqIEByZXR1cm5zIEZ1bmN0aW9uIHRoYXQgZXNjYXBlcyBhbGwgY2hhcmFjdGVycyBtYXRjaGVkIGJ5IHRoZSBnaXZlbiByZWd1bGFyXG4gKiBleHByZXNzaW9uIHVzaW5nIHRoZSBnaXZlbiBtYXAgb2YgY2hhcmFjdGVycyB0byBlc2NhcGUgdG8gdGhlaXIgZW50aXRpZXMuXG4gKi9cbmZ1bmN0aW9uIGdldEVzY2FwZXIocmVnZXgsIG1hcCkge1xuICAgIHJldHVybiBmdW5jdGlvbiBlc2NhcGUoZGF0YSkge1xuICAgICAgICBsZXQgbWF0Y2g7XG4gICAgICAgIGxldCBsYXN0SW5kZXggPSAwO1xuICAgICAgICBsZXQgcmVzdWx0ID0gXCJcIjtcbiAgICAgICAgd2hpbGUgKChtYXRjaCA9IHJlZ2V4LmV4ZWMoZGF0YSkpKSB7XG4gICAgICAgICAgICBpZiAobGFzdEluZGV4ICE9PSBtYXRjaC5pbmRleCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBkYXRhLnN1YnN0cmluZyhsYXN0SW5kZXgsIG1hdGNoLmluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFdlIGtub3cgdGhhdCB0aGlzIGNoYXJhY3RlciB3aWxsIGJlIGluIHRoZSBtYXAuXG4gICAgICAgICAgICByZXN1bHQgKz0gbWFwLmdldChtYXRjaFswXS5jaGFyQ29kZUF0KDApKTtcbiAgICAgICAgICAgIC8vIEV2ZXJ5IG1hdGNoIHdpbGwgYmUgb2YgbGVuZ3RoIDFcbiAgICAgICAgICAgIGxhc3RJbmRleCA9IG1hdGNoLmluZGV4ICsgMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0ICsgZGF0YS5zdWJzdHJpbmcobGFzdEluZGV4KTtcbiAgICB9O1xufVxuLyoqXG4gKiBFbmNvZGVzIGFsbCBjaGFyYWN0ZXJzIG5vdCB2YWxpZCBpbiBYTUwgZG9jdW1lbnRzIHVzaW5nIFhNTCBlbnRpdGllcy5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIG91dHB1dCB3aWxsIGJlIGNoYXJhY3Rlci1zZXQgZGVwZW5kZW50LlxuICpcbiAqIEBwYXJhbSBkYXRhIFN0cmluZyB0byBlc2NhcGUuXG4gKi9cbmV4cG9ydCBjb25zdCBlc2NhcGVVVEY4ID0gLyogI19fUFVSRV9fICovIGdldEVzY2FwZXIoL1tcIiYnPD5dL2csIHhtbENvZGVNYXApO1xuLyoqXG4gKiBFbmNvZGVzIGFsbCBjaGFyYWN0ZXJzIHRoYXQgaGF2ZSB0byBiZSBlc2NhcGVkIGluIEhUTUwgYXR0cmlidXRlcyxcbiAqIGZvbGxvd2luZyB7QGxpbmsgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvcGFyc2luZy5odG1sI2VzY2FwaW5nU3RyaW5nfS5cbiAqXG4gKiBAcGFyYW0gZGF0YSBTdHJpbmcgdG8gZXNjYXBlLlxuICovXG5leHBvcnQgY29uc3QgZXNjYXBlQXR0cmlidXRlID0gXG4vKiAjX19QVVJFX18gKi8gZ2V0RXNjYXBlcigvW1wiJlxcdTAwQTBdL2csIG5ldyBNYXAoW1xuICAgIFszNCwgXCImcXVvdDtcIl0sXG4gICAgWzM4LCBcIiZhbXA7XCJdLFxuICAgIFsxNjAsIFwiJm5ic3A7XCJdLFxuXSkpO1xuLyoqXG4gKiBFbmNvZGVzIGFsbCBjaGFyYWN0ZXJzIHRoYXQgaGF2ZSB0byBiZSBlc2NhcGVkIGluIEhUTUwgdGV4dCxcbiAqIGZvbGxvd2luZyB7QGxpbmsgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvcGFyc2luZy5odG1sI2VzY2FwaW5nU3RyaW5nfS5cbiAqXG4gKiBAcGFyYW0gZGF0YSBTdHJpbmcgdG8gZXNjYXBlLlxuICovXG5leHBvcnQgY29uc3QgZXNjYXBlVGV4dCA9IC8qICNfX1BVUkVfXyAqLyBnZXRFc2NhcGVyKC9bJjw+XFx1MDBBMF0vZywgbmV3IE1hcChbXG4gICAgWzM4LCBcIiZhbXA7XCJdLFxuICAgIFs2MCwgXCImbHQ7XCJdLFxuICAgIFs2MiwgXCImZ3Q7XCJdLFxuICAgIFsxNjAsIFwiJm5ic3A7XCJdLFxuXSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXNjYXBlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/escape.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/generated/decode-data-html.js":
/*!**********************************************************************!*\
  !*** ./node_modules/entities/dist/esm/generated/decode-data-html.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   htmlDecodeTree: () => (/* binding */ htmlDecodeTree)\n/* harmony export */ });\n// Generated using scripts/write-decode-map.ts\nconst htmlDecodeTree = /* #__PURE__ */ new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/generated/decode-data-html.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/generated/decode-data-xml.js":
/*!*********************************************************************!*\
  !*** ./node_modules/entities/dist/esm/generated/decode-data-xml.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xmlDecodeTree: () => (/* binding */ xmlDecodeTree)\n/* harmony export */ });\n// Generated using scripts/write-decode-map.ts\nconst xmlDecodeTree = /* #__PURE__ */ new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */ \"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vZ2VuZXJhdGVkL2RlY29kZS1kYXRhLXhtbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDTztBQUNQO0FBQ0EsNkRBQTZELFNBQVMsUUFBUSxRQUFRLFVBQVU7QUFDaEc7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9lbnRpdGllcy9kaXN0L2VzbS9nZW5lcmF0ZWQvZGVjb2RlLWRhdGEteG1sLmpzP2JjZDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIHVzaW5nIHNjcmlwdHMvd3JpdGUtZGVjb2RlLW1hcC50c1xuZXhwb3J0IGNvbnN0IHhtbERlY29kZVRyZWUgPSAvKiAjX19QVVJFX18gKi8gbmV3IFVpbnQxNkFycmF5KFxuLy8gcHJldHRpZXItaWdub3JlXG4vKiAjX19QVVJFX18gKi8gXCJcXHUwMjAwYWdscVxcdFxceDE1XFx4MThcXHgxYlxcdTAyNmRcXHgwZlxcMFxcMFxceDEycDtcXHU0MDI2b3M7XFx1NDAyN3Q7XFx1NDAzZXQ7XFx1NDAzY3VvdDtcXHU0MDIyXCJcbiAgICAuc3BsaXQoXCJcIilcbiAgICAubWFwKChjKSA9PiBjLmNoYXJDb2RlQXQoMCkpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29kZS1kYXRhLXhtbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/generated/decode-data-xml.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/generated/encode-html.js":
/*!*****************************************************************!*\
  !*** ./node_modules/entities/dist/esm/generated/encode-html.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   htmlTrie: () => (/* binding */ htmlTrie)\n/* harmony export */ });\n// Generated using scripts/write-encode-map.ts\nfunction restoreDiff(array) {\n    for (let index = 1; index < array.length; index++) {\n        array[index][0] += array[index - 1][0] + 1;\n    }\n    return array;\n}\n// prettier-ignore\nconst htmlTrie = /* #__PURE__ */ new Map(/* #__PURE__ */ restoreDiff([[9, \"&Tab;\"], [0, \"&NewLine;\"], [22, \"&excl;\"], [0, \"&quot;\"], [0, \"&num;\"], [0, \"&dollar;\"], [0, \"&percnt;\"], [0, \"&amp;\"], [0, \"&apos;\"], [0, \"&lpar;\"], [0, \"&rpar;\"], [0, \"&ast;\"], [0, \"&plus;\"], [0, \"&comma;\"], [1, \"&period;\"], [0, \"&sol;\"], [10, \"&colon;\"], [0, \"&semi;\"], [0, { v: \"&lt;\", n: 8402, o: \"&nvlt;\" }], [0, { v: \"&equals;\", n: 8421, o: \"&bne;\" }], [0, { v: \"&gt;\", n: 8402, o: \"&nvgt;\" }], [0, \"&quest;\"], [0, \"&commat;\"], [26, \"&lbrack;\"], [0, \"&bsol;\"], [0, \"&rbrack;\"], [0, \"&Hat;\"], [0, \"&lowbar;\"], [0, \"&DiacriticalGrave;\"], [5, { n: 106, o: \"&fjlig;\" }], [20, \"&lbrace;\"], [0, \"&verbar;\"], [0, \"&rbrace;\"], [34, \"&nbsp;\"], [0, \"&iexcl;\"], [0, \"&cent;\"], [0, \"&pound;\"], [0, \"&curren;\"], [0, \"&yen;\"], [0, \"&brvbar;\"], [0, \"&sect;\"], [0, \"&die;\"], [0, \"&copy;\"], [0, \"&ordf;\"], [0, \"&laquo;\"], [0, \"&not;\"], [0, \"&shy;\"], [0, \"&circledR;\"], [0, \"&macr;\"], [0, \"&deg;\"], [0, \"&PlusMinus;\"], [0, \"&sup2;\"], [0, \"&sup3;\"], [0, \"&acute;\"], [0, \"&micro;\"], [0, \"&para;\"], [0, \"&centerdot;\"], [0, \"&cedil;\"], [0, \"&sup1;\"], [0, \"&ordm;\"], [0, \"&raquo;\"], [0, \"&frac14;\"], [0, \"&frac12;\"], [0, \"&frac34;\"], [0, \"&iquest;\"], [0, \"&Agrave;\"], [0, \"&Aacute;\"], [0, \"&Acirc;\"], [0, \"&Atilde;\"], [0, \"&Auml;\"], [0, \"&angst;\"], [0, \"&AElig;\"], [0, \"&Ccedil;\"], [0, \"&Egrave;\"], [0, \"&Eacute;\"], [0, \"&Ecirc;\"], [0, \"&Euml;\"], [0, \"&Igrave;\"], [0, \"&Iacute;\"], [0, \"&Icirc;\"], [0, \"&Iuml;\"], [0, \"&ETH;\"], [0, \"&Ntilde;\"], [0, \"&Ograve;\"], [0, \"&Oacute;\"], [0, \"&Ocirc;\"], [0, \"&Otilde;\"], [0, \"&Ouml;\"], [0, \"&times;\"], [0, \"&Oslash;\"], [0, \"&Ugrave;\"], [0, \"&Uacute;\"], [0, \"&Ucirc;\"], [0, \"&Uuml;\"], [0, \"&Yacute;\"], [0, \"&THORN;\"], [0, \"&szlig;\"], [0, \"&agrave;\"], [0, \"&aacute;\"], [0, \"&acirc;\"], [0, \"&atilde;\"], [0, \"&auml;\"], [0, \"&aring;\"], [0, \"&aelig;\"], [0, \"&ccedil;\"], [0, \"&egrave;\"], [0, \"&eacute;\"], [0, \"&ecirc;\"], [0, \"&euml;\"], [0, \"&igrave;\"], [0, \"&iacute;\"], [0, \"&icirc;\"], [0, \"&iuml;\"], [0, \"&eth;\"], [0, \"&ntilde;\"], [0, \"&ograve;\"], [0, \"&oacute;\"], [0, \"&ocirc;\"], [0, \"&otilde;\"], [0, \"&ouml;\"], [0, \"&div;\"], [0, \"&oslash;\"], [0, \"&ugrave;\"], [0, \"&uacute;\"], [0, \"&ucirc;\"], [0, \"&uuml;\"], [0, \"&yacute;\"], [0, \"&thorn;\"], [0, \"&yuml;\"], [0, \"&Amacr;\"], [0, \"&amacr;\"], [0, \"&Abreve;\"], [0, \"&abreve;\"], [0, \"&Aogon;\"], [0, \"&aogon;\"], [0, \"&Cacute;\"], [0, \"&cacute;\"], [0, \"&Ccirc;\"], [0, \"&ccirc;\"], [0, \"&Cdot;\"], [0, \"&cdot;\"], [0, \"&Ccaron;\"], [0, \"&ccaron;\"], [0, \"&Dcaron;\"], [0, \"&dcaron;\"], [0, \"&Dstrok;\"], [0, \"&dstrok;\"], [0, \"&Emacr;\"], [0, \"&emacr;\"], [2, \"&Edot;\"], [0, \"&edot;\"], [0, \"&Eogon;\"], [0, \"&eogon;\"], [0, \"&Ecaron;\"], [0, \"&ecaron;\"], [0, \"&Gcirc;\"], [0, \"&gcirc;\"], [0, \"&Gbreve;\"], [0, \"&gbreve;\"], [0, \"&Gdot;\"], [0, \"&gdot;\"], [0, \"&Gcedil;\"], [1, \"&Hcirc;\"], [0, \"&hcirc;\"], [0, \"&Hstrok;\"], [0, \"&hstrok;\"], [0, \"&Itilde;\"], [0, \"&itilde;\"], [0, \"&Imacr;\"], [0, \"&imacr;\"], [2, \"&Iogon;\"], [0, \"&iogon;\"], [0, \"&Idot;\"], [0, \"&imath;\"], [0, \"&IJlig;\"], [0, \"&ijlig;\"], [0, \"&Jcirc;\"], [0, \"&jcirc;\"], [0, \"&Kcedil;\"], [0, \"&kcedil;\"], [0, \"&kgreen;\"], [0, \"&Lacute;\"], [0, \"&lacute;\"], [0, \"&Lcedil;\"], [0, \"&lcedil;\"], [0, \"&Lcaron;\"], [0, \"&lcaron;\"], [0, \"&Lmidot;\"], [0, \"&lmidot;\"], [0, \"&Lstrok;\"], [0, \"&lstrok;\"], [0, \"&Nacute;\"], [0, \"&nacute;\"], [0, \"&Ncedil;\"], [0, \"&ncedil;\"], [0, \"&Ncaron;\"], [0, \"&ncaron;\"], [0, \"&napos;\"], [0, \"&ENG;\"], [0, \"&eng;\"], [0, \"&Omacr;\"], [0, \"&omacr;\"], [2, \"&Odblac;\"], [0, \"&odblac;\"], [0, \"&OElig;\"], [0, \"&oelig;\"], [0, \"&Racute;\"], [0, \"&racute;\"], [0, \"&Rcedil;\"], [0, \"&rcedil;\"], [0, \"&Rcaron;\"], [0, \"&rcaron;\"], [0, \"&Sacute;\"], [0, \"&sacute;\"], [0, \"&Scirc;\"], [0, \"&scirc;\"], [0, \"&Scedil;\"], [0, \"&scedil;\"], [0, \"&Scaron;\"], [0, \"&scaron;\"], [0, \"&Tcedil;\"], [0, \"&tcedil;\"], [0, \"&Tcaron;\"], [0, \"&tcaron;\"], [0, \"&Tstrok;\"], [0, \"&tstrok;\"], [0, \"&Utilde;\"], [0, \"&utilde;\"], [0, \"&Umacr;\"], [0, \"&umacr;\"], [0, \"&Ubreve;\"], [0, \"&ubreve;\"], [0, \"&Uring;\"], [0, \"&uring;\"], [0, \"&Udblac;\"], [0, \"&udblac;\"], [0, \"&Uogon;\"], [0, \"&uogon;\"], [0, \"&Wcirc;\"], [0, \"&wcirc;\"], [0, \"&Ycirc;\"], [0, \"&ycirc;\"], [0, \"&Yuml;\"], [0, \"&Zacute;\"], [0, \"&zacute;\"], [0, \"&Zdot;\"], [0, \"&zdot;\"], [0, \"&Zcaron;\"], [0, \"&zcaron;\"], [19, \"&fnof;\"], [34, \"&imped;\"], [63, \"&gacute;\"], [65, \"&jmath;\"], [142, \"&circ;\"], [0, \"&caron;\"], [16, \"&breve;\"], [0, \"&DiacriticalDot;\"], [0, \"&ring;\"], [0, \"&ogon;\"], [0, \"&DiacriticalTilde;\"], [0, \"&dblac;\"], [51, \"&DownBreve;\"], [127, \"&Alpha;\"], [0, \"&Beta;\"], [0, \"&Gamma;\"], [0, \"&Delta;\"], [0, \"&Epsilon;\"], [0, \"&Zeta;\"], [0, \"&Eta;\"], [0, \"&Theta;\"], [0, \"&Iota;\"], [0, \"&Kappa;\"], [0, \"&Lambda;\"], [0, \"&Mu;\"], [0, \"&Nu;\"], [0, \"&Xi;\"], [0, \"&Omicron;\"], [0, \"&Pi;\"], [0, \"&Rho;\"], [1, \"&Sigma;\"], [0, \"&Tau;\"], [0, \"&Upsilon;\"], [0, \"&Phi;\"], [0, \"&Chi;\"], [0, \"&Psi;\"], [0, \"&ohm;\"], [7, \"&alpha;\"], [0, \"&beta;\"], [0, \"&gamma;\"], [0, \"&delta;\"], [0, \"&epsi;\"], [0, \"&zeta;\"], [0, \"&eta;\"], [0, \"&theta;\"], [0, \"&iota;\"], [0, \"&kappa;\"], [0, \"&lambda;\"], [0, \"&mu;\"], [0, \"&nu;\"], [0, \"&xi;\"], [0, \"&omicron;\"], [0, \"&pi;\"], [0, \"&rho;\"], [0, \"&sigmaf;\"], [0, \"&sigma;\"], [0, \"&tau;\"], [0, \"&upsi;\"], [0, \"&phi;\"], [0, \"&chi;\"], [0, \"&psi;\"], [0, \"&omega;\"], [7, \"&thetasym;\"], [0, \"&Upsi;\"], [2, \"&phiv;\"], [0, \"&piv;\"], [5, \"&Gammad;\"], [0, \"&digamma;\"], [18, \"&kappav;\"], [0, \"&rhov;\"], [3, \"&epsiv;\"], [0, \"&backepsilon;\"], [10, \"&IOcy;\"], [0, \"&DJcy;\"], [0, \"&GJcy;\"], [0, \"&Jukcy;\"], [0, \"&DScy;\"], [0, \"&Iukcy;\"], [0, \"&YIcy;\"], [0, \"&Jsercy;\"], [0, \"&LJcy;\"], [0, \"&NJcy;\"], [0, \"&TSHcy;\"], [0, \"&KJcy;\"], [1, \"&Ubrcy;\"], [0, \"&DZcy;\"], [0, \"&Acy;\"], [0, \"&Bcy;\"], [0, \"&Vcy;\"], [0, \"&Gcy;\"], [0, \"&Dcy;\"], [0, \"&IEcy;\"], [0, \"&ZHcy;\"], [0, \"&Zcy;\"], [0, \"&Icy;\"], [0, \"&Jcy;\"], [0, \"&Kcy;\"], [0, \"&Lcy;\"], [0, \"&Mcy;\"], [0, \"&Ncy;\"], [0, \"&Ocy;\"], [0, \"&Pcy;\"], [0, \"&Rcy;\"], [0, \"&Scy;\"], [0, \"&Tcy;\"], [0, \"&Ucy;\"], [0, \"&Fcy;\"], [0, \"&KHcy;\"], [0, \"&TScy;\"], [0, \"&CHcy;\"], [0, \"&SHcy;\"], [0, \"&SHCHcy;\"], [0, \"&HARDcy;\"], [0, \"&Ycy;\"], [0, \"&SOFTcy;\"], [0, \"&Ecy;\"], [0, \"&YUcy;\"], [0, \"&YAcy;\"], [0, \"&acy;\"], [0, \"&bcy;\"], [0, \"&vcy;\"], [0, \"&gcy;\"], [0, \"&dcy;\"], [0, \"&iecy;\"], [0, \"&zhcy;\"], [0, \"&zcy;\"], [0, \"&icy;\"], [0, \"&jcy;\"], [0, \"&kcy;\"], [0, \"&lcy;\"], [0, \"&mcy;\"], [0, \"&ncy;\"], [0, \"&ocy;\"], [0, \"&pcy;\"], [0, \"&rcy;\"], [0, \"&scy;\"], [0, \"&tcy;\"], [0, \"&ucy;\"], [0, \"&fcy;\"], [0, \"&khcy;\"], [0, \"&tscy;\"], [0, \"&chcy;\"], [0, \"&shcy;\"], [0, \"&shchcy;\"], [0, \"&hardcy;\"], [0, \"&ycy;\"], [0, \"&softcy;\"], [0, \"&ecy;\"], [0, \"&yucy;\"], [0, \"&yacy;\"], [1, \"&iocy;\"], [0, \"&djcy;\"], [0, \"&gjcy;\"], [0, \"&jukcy;\"], [0, \"&dscy;\"], [0, \"&iukcy;\"], [0, \"&yicy;\"], [0, \"&jsercy;\"], [0, \"&ljcy;\"], [0, \"&njcy;\"], [0, \"&tshcy;\"], [0, \"&kjcy;\"], [1, \"&ubrcy;\"], [0, \"&dzcy;\"], [7074, \"&ensp;\"], [0, \"&emsp;\"], [0, \"&emsp13;\"], [0, \"&emsp14;\"], [1, \"&numsp;\"], [0, \"&puncsp;\"], [0, \"&ThinSpace;\"], [0, \"&hairsp;\"], [0, \"&NegativeMediumSpace;\"], [0, \"&zwnj;\"], [0, \"&zwj;\"], [0, \"&lrm;\"], [0, \"&rlm;\"], [0, \"&dash;\"], [2, \"&ndash;\"], [0, \"&mdash;\"], [0, \"&horbar;\"], [0, \"&Verbar;\"], [1, \"&lsquo;\"], [0, \"&CloseCurlyQuote;\"], [0, \"&lsquor;\"], [1, \"&ldquo;\"], [0, \"&CloseCurlyDoubleQuote;\"], [0, \"&bdquo;\"], [1, \"&dagger;\"], [0, \"&Dagger;\"], [0, \"&bull;\"], [2, \"&nldr;\"], [0, \"&hellip;\"], [9, \"&permil;\"], [0, \"&pertenk;\"], [0, \"&prime;\"], [0, \"&Prime;\"], [0, \"&tprime;\"], [0, \"&backprime;\"], [3, \"&lsaquo;\"], [0, \"&rsaquo;\"], [3, \"&oline;\"], [2, \"&caret;\"], [1, \"&hybull;\"], [0, \"&frasl;\"], [10, \"&bsemi;\"], [7, \"&qprime;\"], [7, { v: \"&MediumSpace;\", n: 8202, o: \"&ThickSpace;\" }], [0, \"&NoBreak;\"], [0, \"&af;\"], [0, \"&InvisibleTimes;\"], [0, \"&ic;\"], [72, \"&euro;\"], [46, \"&tdot;\"], [0, \"&DotDot;\"], [37, \"&complexes;\"], [2, \"&incare;\"], [4, \"&gscr;\"], [0, \"&hamilt;\"], [0, \"&Hfr;\"], [0, \"&Hopf;\"], [0, \"&planckh;\"], [0, \"&hbar;\"], [0, \"&imagline;\"], [0, \"&Ifr;\"], [0, \"&lagran;\"], [0, \"&ell;\"], [1, \"&naturals;\"], [0, \"&numero;\"], [0, \"&copysr;\"], [0, \"&weierp;\"], [0, \"&Popf;\"], [0, \"&Qopf;\"], [0, \"&realine;\"], [0, \"&real;\"], [0, \"&reals;\"], [0, \"&rx;\"], [3, \"&trade;\"], [1, \"&integers;\"], [2, \"&mho;\"], [0, \"&zeetrf;\"], [0, \"&iiota;\"], [2, \"&bernou;\"], [0, \"&Cayleys;\"], [1, \"&escr;\"], [0, \"&Escr;\"], [0, \"&Fouriertrf;\"], [1, \"&Mellintrf;\"], [0, \"&order;\"], [0, \"&alefsym;\"], [0, \"&beth;\"], [0, \"&gimel;\"], [0, \"&daleth;\"], [12, \"&CapitalDifferentialD;\"], [0, \"&dd;\"], [0, \"&ee;\"], [0, \"&ii;\"], [10, \"&frac13;\"], [0, \"&frac23;\"], [0, \"&frac15;\"], [0, \"&frac25;\"], [0, \"&frac35;\"], [0, \"&frac45;\"], [0, \"&frac16;\"], [0, \"&frac56;\"], [0, \"&frac18;\"], [0, \"&frac38;\"], [0, \"&frac58;\"], [0, \"&frac78;\"], [49, \"&larr;\"], [0, \"&ShortUpArrow;\"], [0, \"&rarr;\"], [0, \"&darr;\"], [0, \"&harr;\"], [0, \"&updownarrow;\"], [0, \"&nwarr;\"], [0, \"&nearr;\"], [0, \"&LowerRightArrow;\"], [0, \"&LowerLeftArrow;\"], [0, \"&nlarr;\"], [0, \"&nrarr;\"], [1, { v: \"&rarrw;\", n: 824, o: \"&nrarrw;\" }], [0, \"&Larr;\"], [0, \"&Uarr;\"], [0, \"&Rarr;\"], [0, \"&Darr;\"], [0, \"&larrtl;\"], [0, \"&rarrtl;\"], [0, \"&LeftTeeArrow;\"], [0, \"&mapstoup;\"], [0, \"&map;\"], [0, \"&DownTeeArrow;\"], [1, \"&hookleftarrow;\"], [0, \"&hookrightarrow;\"], [0, \"&larrlp;\"], [0, \"&looparrowright;\"], [0, \"&harrw;\"], [0, \"&nharr;\"], [1, \"&lsh;\"], [0, \"&rsh;\"], [0, \"&ldsh;\"], [0, \"&rdsh;\"], [1, \"&crarr;\"], [0, \"&cularr;\"], [0, \"&curarr;\"], [2, \"&circlearrowleft;\"], [0, \"&circlearrowright;\"], [0, \"&leftharpoonup;\"], [0, \"&DownLeftVector;\"], [0, \"&RightUpVector;\"], [0, \"&LeftUpVector;\"], [0, \"&rharu;\"], [0, \"&DownRightVector;\"], [0, \"&dharr;\"], [0, \"&dharl;\"], [0, \"&RightArrowLeftArrow;\"], [0, \"&udarr;\"], [0, \"&LeftArrowRightArrow;\"], [0, \"&leftleftarrows;\"], [0, \"&upuparrows;\"], [0, \"&rightrightarrows;\"], [0, \"&ddarr;\"], [0, \"&leftrightharpoons;\"], [0, \"&Equilibrium;\"], [0, \"&nlArr;\"], [0, \"&nhArr;\"], [0, \"&nrArr;\"], [0, \"&DoubleLeftArrow;\"], [0, \"&DoubleUpArrow;\"], [0, \"&DoubleRightArrow;\"], [0, \"&dArr;\"], [0, \"&DoubleLeftRightArrow;\"], [0, \"&DoubleUpDownArrow;\"], [0, \"&nwArr;\"], [0, \"&neArr;\"], [0, \"&seArr;\"], [0, \"&swArr;\"], [0, \"&lAarr;\"], [0, \"&rAarr;\"], [1, \"&zigrarr;\"], [6, \"&larrb;\"], [0, \"&rarrb;\"], [15, \"&DownArrowUpArrow;\"], [7, \"&loarr;\"], [0, \"&roarr;\"], [0, \"&hoarr;\"], [0, \"&forall;\"], [0, \"&comp;\"], [0, { v: \"&part;\", n: 824, o: \"&npart;\" }], [0, \"&exist;\"], [0, \"&nexist;\"], [0, \"&empty;\"], [1, \"&Del;\"], [0, \"&Element;\"], [0, \"&NotElement;\"], [1, \"&ni;\"], [0, \"&notni;\"], [2, \"&prod;\"], [0, \"&coprod;\"], [0, \"&sum;\"], [0, \"&minus;\"], [0, \"&MinusPlus;\"], [0, \"&dotplus;\"], [1, \"&Backslash;\"], [0, \"&lowast;\"], [0, \"&compfn;\"], [1, \"&radic;\"], [2, \"&prop;\"], [0, \"&infin;\"], [0, \"&angrt;\"], [0, { v: \"&ang;\", n: 8402, o: \"&nang;\" }], [0, \"&angmsd;\"], [0, \"&angsph;\"], [0, \"&mid;\"], [0, \"&nmid;\"], [0, \"&DoubleVerticalBar;\"], [0, \"&NotDoubleVerticalBar;\"], [0, \"&and;\"], [0, \"&or;\"], [0, { v: \"&cap;\", n: 65024, o: \"&caps;\" }], [0, { v: \"&cup;\", n: 65024, o: \"&cups;\" }], [0, \"&int;\"], [0, \"&Int;\"], [0, \"&iiint;\"], [0, \"&conint;\"], [0, \"&Conint;\"], [0, \"&Cconint;\"], [0, \"&cwint;\"], [0, \"&ClockwiseContourIntegral;\"], [0, \"&awconint;\"], [0, \"&there4;\"], [0, \"&becaus;\"], [0, \"&ratio;\"], [0, \"&Colon;\"], [0, \"&dotminus;\"], [1, \"&mDDot;\"], [0, \"&homtht;\"], [0, { v: \"&sim;\", n: 8402, o: \"&nvsim;\" }], [0, { v: \"&backsim;\", n: 817, o: \"&race;\" }], [0, { v: \"&ac;\", n: 819, o: \"&acE;\" }], [0, \"&acd;\"], [0, \"&VerticalTilde;\"], [0, \"&NotTilde;\"], [0, { v: \"&eqsim;\", n: 824, o: \"&nesim;\" }], [0, \"&sime;\"], [0, \"&NotTildeEqual;\"], [0, \"&cong;\"], [0, \"&simne;\"], [0, \"&ncong;\"], [0, \"&ap;\"], [0, \"&nap;\"], [0, \"&ape;\"], [0, { v: \"&apid;\", n: 824, o: \"&napid;\" }], [0, \"&backcong;\"], [0, { v: \"&asympeq;\", n: 8402, o: \"&nvap;\" }], [0, { v: \"&bump;\", n: 824, o: \"&nbump;\" }], [0, { v: \"&bumpe;\", n: 824, o: \"&nbumpe;\" }], [0, { v: \"&doteq;\", n: 824, o: \"&nedot;\" }], [0, \"&doteqdot;\"], [0, \"&efDot;\"], [0, \"&erDot;\"], [0, \"&Assign;\"], [0, \"&ecolon;\"], [0, \"&ecir;\"], [0, \"&circeq;\"], [1, \"&wedgeq;\"], [0, \"&veeeq;\"], [1, \"&triangleq;\"], [2, \"&equest;\"], [0, \"&ne;\"], [0, { v: \"&Congruent;\", n: 8421, o: \"&bnequiv;\" }], [0, \"&nequiv;\"], [1, { v: \"&le;\", n: 8402, o: \"&nvle;\" }], [0, { v: \"&ge;\", n: 8402, o: \"&nvge;\" }], [0, { v: \"&lE;\", n: 824, o: \"&nlE;\" }], [0, { v: \"&gE;\", n: 824, o: \"&ngE;\" }], [0, { v: \"&lnE;\", n: 65024, o: \"&lvertneqq;\" }], [0, { v: \"&gnE;\", n: 65024, o: \"&gvertneqq;\" }], [0, { v: \"&ll;\", n: /* #__PURE__ */ new Map(/* #__PURE__ */ restoreDiff([[824, \"&nLtv;\"], [7577, \"&nLt;\"]])) }], [0, { v: \"&gg;\", n: /* #__PURE__ */ new Map(/* #__PURE__ */ restoreDiff([[824, \"&nGtv;\"], [7577, \"&nGt;\"]])) }], [0, \"&between;\"], [0, \"&NotCupCap;\"], [0, \"&nless;\"], [0, \"&ngt;\"], [0, \"&nle;\"], [0, \"&nge;\"], [0, \"&lesssim;\"], [0, \"&GreaterTilde;\"], [0, \"&nlsim;\"], [0, \"&ngsim;\"], [0, \"&LessGreater;\"], [0, \"&gl;\"], [0, \"&NotLessGreater;\"], [0, \"&NotGreaterLess;\"], [0, \"&pr;\"], [0, \"&sc;\"], [0, \"&prcue;\"], [0, \"&sccue;\"], [0, \"&PrecedesTilde;\"], [0, { v: \"&scsim;\", n: 824, o: \"&NotSucceedsTilde;\" }], [0, \"&NotPrecedes;\"], [0, \"&NotSucceeds;\"], [0, { v: \"&sub;\", n: 8402, o: \"&NotSubset;\" }], [0, { v: \"&sup;\", n: 8402, o: \"&NotSuperset;\" }], [0, \"&nsub;\"], [0, \"&nsup;\"], [0, \"&sube;\"], [0, \"&supe;\"], [0, \"&NotSubsetEqual;\"], [0, \"&NotSupersetEqual;\"], [0, { v: \"&subne;\", n: 65024, o: \"&varsubsetneq;\" }], [0, { v: \"&supne;\", n: 65024, o: \"&varsupsetneq;\" }], [1, \"&cupdot;\"], [0, \"&UnionPlus;\"], [0, { v: \"&sqsub;\", n: 824, o: \"&NotSquareSubset;\" }], [0, { v: \"&sqsup;\", n: 824, o: \"&NotSquareSuperset;\" }], [0, \"&sqsube;\"], [0, \"&sqsupe;\"], [0, { v: \"&sqcap;\", n: 65024, o: \"&sqcaps;\" }], [0, { v: \"&sqcup;\", n: 65024, o: \"&sqcups;\" }], [0, \"&CirclePlus;\"], [0, \"&CircleMinus;\"], [0, \"&CircleTimes;\"], [0, \"&osol;\"], [0, \"&CircleDot;\"], [0, \"&circledcirc;\"], [0, \"&circledast;\"], [1, \"&circleddash;\"], [0, \"&boxplus;\"], [0, \"&boxminus;\"], [0, \"&boxtimes;\"], [0, \"&dotsquare;\"], [0, \"&RightTee;\"], [0, \"&dashv;\"], [0, \"&DownTee;\"], [0, \"&bot;\"], [1, \"&models;\"], [0, \"&DoubleRightTee;\"], [0, \"&Vdash;\"], [0, \"&Vvdash;\"], [0, \"&VDash;\"], [0, \"&nvdash;\"], [0, \"&nvDash;\"], [0, \"&nVdash;\"], [0, \"&nVDash;\"], [0, \"&prurel;\"], [1, \"&LeftTriangle;\"], [0, \"&RightTriangle;\"], [0, { v: \"&LeftTriangleEqual;\", n: 8402, o: \"&nvltrie;\" }], [0, { v: \"&RightTriangleEqual;\", n: 8402, o: \"&nvrtrie;\" }], [0, \"&origof;\"], [0, \"&imof;\"], [0, \"&multimap;\"], [0, \"&hercon;\"], [0, \"&intcal;\"], [0, \"&veebar;\"], [1, \"&barvee;\"], [0, \"&angrtvb;\"], [0, \"&lrtri;\"], [0, \"&bigwedge;\"], [0, \"&bigvee;\"], [0, \"&bigcap;\"], [0, \"&bigcup;\"], [0, \"&diam;\"], [0, \"&sdot;\"], [0, \"&sstarf;\"], [0, \"&divideontimes;\"], [0, \"&bowtie;\"], [0, \"&ltimes;\"], [0, \"&rtimes;\"], [0, \"&leftthreetimes;\"], [0, \"&rightthreetimes;\"], [0, \"&backsimeq;\"], [0, \"&curlyvee;\"], [0, \"&curlywedge;\"], [0, \"&Sub;\"], [0, \"&Sup;\"], [0, \"&Cap;\"], [0, \"&Cup;\"], [0, \"&fork;\"], [0, \"&epar;\"], [0, \"&lessdot;\"], [0, \"&gtdot;\"], [0, { v: \"&Ll;\", n: 824, o: \"&nLl;\" }], [0, { v: \"&Gg;\", n: 824, o: \"&nGg;\" }], [0, { v: \"&leg;\", n: 65024, o: \"&lesg;\" }], [0, { v: \"&gel;\", n: 65024, o: \"&gesl;\" }], [2, \"&cuepr;\"], [0, \"&cuesc;\"], [0, \"&NotPrecedesSlantEqual;\"], [0, \"&NotSucceedsSlantEqual;\"], [0, \"&NotSquareSubsetEqual;\"], [0, \"&NotSquareSupersetEqual;\"], [2, \"&lnsim;\"], [0, \"&gnsim;\"], [0, \"&precnsim;\"], [0, \"&scnsim;\"], [0, \"&nltri;\"], [0, \"&NotRightTriangle;\"], [0, \"&nltrie;\"], [0, \"&NotRightTriangleEqual;\"], [0, \"&vellip;\"], [0, \"&ctdot;\"], [0, \"&utdot;\"], [0, \"&dtdot;\"], [0, \"&disin;\"], [0, \"&isinsv;\"], [0, \"&isins;\"], [0, { v: \"&isindot;\", n: 824, o: \"&notindot;\" }], [0, \"&notinvc;\"], [0, \"&notinvb;\"], [1, { v: \"&isinE;\", n: 824, o: \"&notinE;\" }], [0, \"&nisd;\"], [0, \"&xnis;\"], [0, \"&nis;\"], [0, \"&notnivc;\"], [0, \"&notnivb;\"], [6, \"&barwed;\"], [0, \"&Barwed;\"], [1, \"&lceil;\"], [0, \"&rceil;\"], [0, \"&LeftFloor;\"], [0, \"&rfloor;\"], [0, \"&drcrop;\"], [0, \"&dlcrop;\"], [0, \"&urcrop;\"], [0, \"&ulcrop;\"], [0, \"&bnot;\"], [1, \"&profline;\"], [0, \"&profsurf;\"], [1, \"&telrec;\"], [0, \"&target;\"], [5, \"&ulcorn;\"], [0, \"&urcorn;\"], [0, \"&dlcorn;\"], [0, \"&drcorn;\"], [2, \"&frown;\"], [0, \"&smile;\"], [9, \"&cylcty;\"], [0, \"&profalar;\"], [7, \"&topbot;\"], [6, \"&ovbar;\"], [1, \"&solbar;\"], [60, \"&angzarr;\"], [51, \"&lmoustache;\"], [0, \"&rmoustache;\"], [2, \"&OverBracket;\"], [0, \"&bbrk;\"], [0, \"&bbrktbrk;\"], [37, \"&OverParenthesis;\"], [0, \"&UnderParenthesis;\"], [0, \"&OverBrace;\"], [0, \"&UnderBrace;\"], [2, \"&trpezium;\"], [4, \"&elinters;\"], [59, \"&blank;\"], [164, \"&circledS;\"], [55, \"&boxh;\"], [1, \"&boxv;\"], [9, \"&boxdr;\"], [3, \"&boxdl;\"], [3, \"&boxur;\"], [3, \"&boxul;\"], [3, \"&boxvr;\"], [7, \"&boxvl;\"], [7, \"&boxhd;\"], [7, \"&boxhu;\"], [7, \"&boxvh;\"], [19, \"&boxH;\"], [0, \"&boxV;\"], [0, \"&boxdR;\"], [0, \"&boxDr;\"], [0, \"&boxDR;\"], [0, \"&boxdL;\"], [0, \"&boxDl;\"], [0, \"&boxDL;\"], [0, \"&boxuR;\"], [0, \"&boxUr;\"], [0, \"&boxUR;\"], [0, \"&boxuL;\"], [0, \"&boxUl;\"], [0, \"&boxUL;\"], [0, \"&boxvR;\"], [0, \"&boxVr;\"], [0, \"&boxVR;\"], [0, \"&boxvL;\"], [0, \"&boxVl;\"], [0, \"&boxVL;\"], [0, \"&boxHd;\"], [0, \"&boxhD;\"], [0, \"&boxHD;\"], [0, \"&boxHu;\"], [0, \"&boxhU;\"], [0, \"&boxHU;\"], [0, \"&boxvH;\"], [0, \"&boxVh;\"], [0, \"&boxVH;\"], [19, \"&uhblk;\"], [3, \"&lhblk;\"], [3, \"&block;\"], [8, \"&blk14;\"], [0, \"&blk12;\"], [0, \"&blk34;\"], [13, \"&square;\"], [8, \"&blacksquare;\"], [0, \"&EmptyVerySmallSquare;\"], [1, \"&rect;\"], [0, \"&marker;\"], [2, \"&fltns;\"], [1, \"&bigtriangleup;\"], [0, \"&blacktriangle;\"], [0, \"&triangle;\"], [2, \"&blacktriangleright;\"], [0, \"&rtri;\"], [3, \"&bigtriangledown;\"], [0, \"&blacktriangledown;\"], [0, \"&dtri;\"], [2, \"&blacktriangleleft;\"], [0, \"&ltri;\"], [6, \"&loz;\"], [0, \"&cir;\"], [32, \"&tridot;\"], [2, \"&bigcirc;\"], [8, \"&ultri;\"], [0, \"&urtri;\"], [0, \"&lltri;\"], [0, \"&EmptySmallSquare;\"], [0, \"&FilledSmallSquare;\"], [8, \"&bigstar;\"], [0, \"&star;\"], [7, \"&phone;\"], [49, \"&female;\"], [1, \"&male;\"], [29, \"&spades;\"], [2, \"&clubs;\"], [1, \"&hearts;\"], [0, \"&diamondsuit;\"], [3, \"&sung;\"], [2, \"&flat;\"], [0, \"&natural;\"], [0, \"&sharp;\"], [163, \"&check;\"], [3, \"&cross;\"], [8, \"&malt;\"], [21, \"&sext;\"], [33, \"&VerticalSeparator;\"], [25, \"&lbbrk;\"], [0, \"&rbbrk;\"], [84, \"&bsolhsub;\"], [0, \"&suphsol;\"], [28, \"&LeftDoubleBracket;\"], [0, \"&RightDoubleBracket;\"], [0, \"&lang;\"], [0, \"&rang;\"], [0, \"&Lang;\"], [0, \"&Rang;\"], [0, \"&loang;\"], [0, \"&roang;\"], [7, \"&longleftarrow;\"], [0, \"&longrightarrow;\"], [0, \"&longleftrightarrow;\"], [0, \"&DoubleLongLeftArrow;\"], [0, \"&DoubleLongRightArrow;\"], [0, \"&DoubleLongLeftRightArrow;\"], [1, \"&longmapsto;\"], [2, \"&dzigrarr;\"], [258, \"&nvlArr;\"], [0, \"&nvrArr;\"], [0, \"&nvHarr;\"], [0, \"&Map;\"], [6, \"&lbarr;\"], [0, \"&bkarow;\"], [0, \"&lBarr;\"], [0, \"&dbkarow;\"], [0, \"&drbkarow;\"], [0, \"&DDotrahd;\"], [0, \"&UpArrowBar;\"], [0, \"&DownArrowBar;\"], [2, \"&Rarrtl;\"], [2, \"&latail;\"], [0, \"&ratail;\"], [0, \"&lAtail;\"], [0, \"&rAtail;\"], [0, \"&larrfs;\"], [0, \"&rarrfs;\"], [0, \"&larrbfs;\"], [0, \"&rarrbfs;\"], [2, \"&nwarhk;\"], [0, \"&nearhk;\"], [0, \"&hksearow;\"], [0, \"&hkswarow;\"], [0, \"&nwnear;\"], [0, \"&nesear;\"], [0, \"&seswar;\"], [0, \"&swnwar;\"], [8, { v: \"&rarrc;\", n: 824, o: \"&nrarrc;\" }], [1, \"&cudarrr;\"], [0, \"&ldca;\"], [0, \"&rdca;\"], [0, \"&cudarrl;\"], [0, \"&larrpl;\"], [2, \"&curarrm;\"], [0, \"&cularrp;\"], [7, \"&rarrpl;\"], [2, \"&harrcir;\"], [0, \"&Uarrocir;\"], [0, \"&lurdshar;\"], [0, \"&ldrushar;\"], [2, \"&LeftRightVector;\"], [0, \"&RightUpDownVector;\"], [0, \"&DownLeftRightVector;\"], [0, \"&LeftUpDownVector;\"], [0, \"&LeftVectorBar;\"], [0, \"&RightVectorBar;\"], [0, \"&RightUpVectorBar;\"], [0, \"&RightDownVectorBar;\"], [0, \"&DownLeftVectorBar;\"], [0, \"&DownRightVectorBar;\"], [0, \"&LeftUpVectorBar;\"], [0, \"&LeftDownVectorBar;\"], [0, \"&LeftTeeVector;\"], [0, \"&RightTeeVector;\"], [0, \"&RightUpTeeVector;\"], [0, \"&RightDownTeeVector;\"], [0, \"&DownLeftTeeVector;\"], [0, \"&DownRightTeeVector;\"], [0, \"&LeftUpTeeVector;\"], [0, \"&LeftDownTeeVector;\"], [0, \"&lHar;\"], [0, \"&uHar;\"], [0, \"&rHar;\"], [0, \"&dHar;\"], [0, \"&luruhar;\"], [0, \"&ldrdhar;\"], [0, \"&ruluhar;\"], [0, \"&rdldhar;\"], [0, \"&lharul;\"], [0, \"&llhard;\"], [0, \"&rharul;\"], [0, \"&lrhard;\"], [0, \"&udhar;\"], [0, \"&duhar;\"], [0, \"&RoundImplies;\"], [0, \"&erarr;\"], [0, \"&simrarr;\"], [0, \"&larrsim;\"], [0, \"&rarrsim;\"], [0, \"&rarrap;\"], [0, \"&ltlarr;\"], [1, \"&gtrarr;\"], [0, \"&subrarr;\"], [1, \"&suplarr;\"], [0, \"&lfisht;\"], [0, \"&rfisht;\"], [0, \"&ufisht;\"], [0, \"&dfisht;\"], [5, \"&lopar;\"], [0, \"&ropar;\"], [4, \"&lbrke;\"], [0, \"&rbrke;\"], [0, \"&lbrkslu;\"], [0, \"&rbrksld;\"], [0, \"&lbrksld;\"], [0, \"&rbrkslu;\"], [0, \"&langd;\"], [0, \"&rangd;\"], [0, \"&lparlt;\"], [0, \"&rpargt;\"], [0, \"&gtlPar;\"], [0, \"&ltrPar;\"], [3, \"&vzigzag;\"], [1, \"&vangrt;\"], [0, \"&angrtvbd;\"], [6, \"&ange;\"], [0, \"&range;\"], [0, \"&dwangle;\"], [0, \"&uwangle;\"], [0, \"&angmsdaa;\"], [0, \"&angmsdab;\"], [0, \"&angmsdac;\"], [0, \"&angmsdad;\"], [0, \"&angmsdae;\"], [0, \"&angmsdaf;\"], [0, \"&angmsdag;\"], [0, \"&angmsdah;\"], [0, \"&bemptyv;\"], [0, \"&demptyv;\"], [0, \"&cemptyv;\"], [0, \"&raemptyv;\"], [0, \"&laemptyv;\"], [0, \"&ohbar;\"], [0, \"&omid;\"], [0, \"&opar;\"], [1, \"&operp;\"], [1, \"&olcross;\"], [0, \"&odsold;\"], [1, \"&olcir;\"], [0, \"&ofcir;\"], [0, \"&olt;\"], [0, \"&ogt;\"], [0, \"&cirscir;\"], [0, \"&cirE;\"], [0, \"&solb;\"], [0, \"&bsolb;\"], [3, \"&boxbox;\"], [3, \"&trisb;\"], [0, \"&rtriltri;\"], [0, { v: \"&LeftTriangleBar;\", n: 824, o: \"&NotLeftTriangleBar;\" }], [0, { v: \"&RightTriangleBar;\", n: 824, o: \"&NotRightTriangleBar;\" }], [11, \"&iinfin;\"], [0, \"&infintie;\"], [0, \"&nvinfin;\"], [4, \"&eparsl;\"], [0, \"&smeparsl;\"], [0, \"&eqvparsl;\"], [5, \"&blacklozenge;\"], [8, \"&RuleDelayed;\"], [1, \"&dsol;\"], [9, \"&bigodot;\"], [0, \"&bigoplus;\"], [0, \"&bigotimes;\"], [1, \"&biguplus;\"], [1, \"&bigsqcup;\"], [5, \"&iiiint;\"], [0, \"&fpartint;\"], [2, \"&cirfnint;\"], [0, \"&awint;\"], [0, \"&rppolint;\"], [0, \"&scpolint;\"], [0, \"&npolint;\"], [0, \"&pointint;\"], [0, \"&quatint;\"], [0, \"&intlarhk;\"], [10, \"&pluscir;\"], [0, \"&plusacir;\"], [0, \"&simplus;\"], [0, \"&plusdu;\"], [0, \"&plussim;\"], [0, \"&plustwo;\"], [1, \"&mcomma;\"], [0, \"&minusdu;\"], [2, \"&loplus;\"], [0, \"&roplus;\"], [0, \"&Cross;\"], [0, \"&timesd;\"], [0, \"&timesbar;\"], [1, \"&smashp;\"], [0, \"&lotimes;\"], [0, \"&rotimes;\"], [0, \"&otimesas;\"], [0, \"&Otimes;\"], [0, \"&odiv;\"], [0, \"&triplus;\"], [0, \"&triminus;\"], [0, \"&tritime;\"], [0, \"&intprod;\"], [2, \"&amalg;\"], [0, \"&capdot;\"], [1, \"&ncup;\"], [0, \"&ncap;\"], [0, \"&capand;\"], [0, \"&cupor;\"], [0, \"&cupcap;\"], [0, \"&capcup;\"], [0, \"&cupbrcap;\"], [0, \"&capbrcup;\"], [0, \"&cupcup;\"], [0, \"&capcap;\"], [0, \"&ccups;\"], [0, \"&ccaps;\"], [2, \"&ccupssm;\"], [2, \"&And;\"], [0, \"&Or;\"], [0, \"&andand;\"], [0, \"&oror;\"], [0, \"&orslope;\"], [0, \"&andslope;\"], [1, \"&andv;\"], [0, \"&orv;\"], [0, \"&andd;\"], [0, \"&ord;\"], [1, \"&wedbar;\"], [6, \"&sdote;\"], [3, \"&simdot;\"], [2, { v: \"&congdot;\", n: 824, o: \"&ncongdot;\" }], [0, \"&easter;\"], [0, \"&apacir;\"], [0, { v: \"&apE;\", n: 824, o: \"&napE;\" }], [0, \"&eplus;\"], [0, \"&pluse;\"], [0, \"&Esim;\"], [0, \"&Colone;\"], [0, \"&Equal;\"], [1, \"&ddotseq;\"], [0, \"&equivDD;\"], [0, \"&ltcir;\"], [0, \"&gtcir;\"], [0, \"&ltquest;\"], [0, \"&gtquest;\"], [0, { v: \"&leqslant;\", n: 824, o: \"&nleqslant;\" }], [0, { v: \"&geqslant;\", n: 824, o: \"&ngeqslant;\" }], [0, \"&lesdot;\"], [0, \"&gesdot;\"], [0, \"&lesdoto;\"], [0, \"&gesdoto;\"], [0, \"&lesdotor;\"], [0, \"&gesdotol;\"], [0, \"&lap;\"], [0, \"&gap;\"], [0, \"&lne;\"], [0, \"&gne;\"], [0, \"&lnap;\"], [0, \"&gnap;\"], [0, \"&lEg;\"], [0, \"&gEl;\"], [0, \"&lsime;\"], [0, \"&gsime;\"], [0, \"&lsimg;\"], [0, \"&gsiml;\"], [0, \"&lgE;\"], [0, \"&glE;\"], [0, \"&lesges;\"], [0, \"&gesles;\"], [0, \"&els;\"], [0, \"&egs;\"], [0, \"&elsdot;\"], [0, \"&egsdot;\"], [0, \"&el;\"], [0, \"&eg;\"], [2, \"&siml;\"], [0, \"&simg;\"], [0, \"&simlE;\"], [0, \"&simgE;\"], [0, { v: \"&LessLess;\", n: 824, o: \"&NotNestedLessLess;\" }], [0, { v: \"&GreaterGreater;\", n: 824, o: \"&NotNestedGreaterGreater;\" }], [1, \"&glj;\"], [0, \"&gla;\"], [0, \"&ltcc;\"], [0, \"&gtcc;\"], [0, \"&lescc;\"], [0, \"&gescc;\"], [0, \"&smt;\"], [0, \"&lat;\"], [0, { v: \"&smte;\", n: 65024, o: \"&smtes;\" }], [0, { v: \"&late;\", n: 65024, o: \"&lates;\" }], [0, \"&bumpE;\"], [0, { v: \"&PrecedesEqual;\", n: 824, o: \"&NotPrecedesEqual;\" }], [0, { v: \"&sce;\", n: 824, o: \"&NotSucceedsEqual;\" }], [2, \"&prE;\"], [0, \"&scE;\"], [0, \"&precneqq;\"], [0, \"&scnE;\"], [0, \"&prap;\"], [0, \"&scap;\"], [0, \"&precnapprox;\"], [0, \"&scnap;\"], [0, \"&Pr;\"], [0, \"&Sc;\"], [0, \"&subdot;\"], [0, \"&supdot;\"], [0, \"&subplus;\"], [0, \"&supplus;\"], [0, \"&submult;\"], [0, \"&supmult;\"], [0, \"&subedot;\"], [0, \"&supedot;\"], [0, { v: \"&subE;\", n: 824, o: \"&nsubE;\" }], [0, { v: \"&supE;\", n: 824, o: \"&nsupE;\" }], [0, \"&subsim;\"], [0, \"&supsim;\"], [2, { v: \"&subnE;\", n: 65024, o: \"&varsubsetneqq;\" }], [0, { v: \"&supnE;\", n: 65024, o: \"&varsupsetneqq;\" }], [2, \"&csub;\"], [0, \"&csup;\"], [0, \"&csube;\"], [0, \"&csupe;\"], [0, \"&subsup;\"], [0, \"&supsub;\"], [0, \"&subsub;\"], [0, \"&supsup;\"], [0, \"&suphsub;\"], [0, \"&supdsub;\"], [0, \"&forkv;\"], [0, \"&topfork;\"], [0, \"&mlcp;\"], [8, \"&Dashv;\"], [1, \"&Vdashl;\"], [0, \"&Barv;\"], [0, \"&vBar;\"], [0, \"&vBarv;\"], [1, \"&Vbar;\"], [0, \"&Not;\"], [0, \"&bNot;\"], [0, \"&rnmid;\"], [0, \"&cirmid;\"], [0, \"&midcir;\"], [0, \"&topcir;\"], [0, \"&nhpar;\"], [0, \"&parsim;\"], [9, { v: \"&parsl;\", n: 8421, o: \"&nparsl;\" }], [44343, { n: /* #__PURE__ */ new Map(/* #__PURE__ */ restoreDiff([[56476, \"&Ascr;\"], [1, \"&Cscr;\"], [0, \"&Dscr;\"], [2, \"&Gscr;\"], [2, \"&Jscr;\"], [0, \"&Kscr;\"], [2, \"&Nscr;\"], [0, \"&Oscr;\"], [0, \"&Pscr;\"], [0, \"&Qscr;\"], [1, \"&Sscr;\"], [0, \"&Tscr;\"], [0, \"&Uscr;\"], [0, \"&Vscr;\"], [0, \"&Wscr;\"], [0, \"&Xscr;\"], [0, \"&Yscr;\"], [0, \"&Zscr;\"], [0, \"&ascr;\"], [0, \"&bscr;\"], [0, \"&cscr;\"], [0, \"&dscr;\"], [1, \"&fscr;\"], [1, \"&hscr;\"], [0, \"&iscr;\"], [0, \"&jscr;\"], [0, \"&kscr;\"], [0, \"&lscr;\"], [0, \"&mscr;\"], [0, \"&nscr;\"], [1, \"&pscr;\"], [0, \"&qscr;\"], [0, \"&rscr;\"], [0, \"&sscr;\"], [0, \"&tscr;\"], [0, \"&uscr;\"], [0, \"&vscr;\"], [0, \"&wscr;\"], [0, \"&xscr;\"], [0, \"&yscr;\"], [0, \"&zscr;\"], [52, \"&Afr;\"], [0, \"&Bfr;\"], [1, \"&Dfr;\"], [0, \"&Efr;\"], [0, \"&Ffr;\"], [0, \"&Gfr;\"], [2, \"&Jfr;\"], [0, \"&Kfr;\"], [0, \"&Lfr;\"], [0, \"&Mfr;\"], [0, \"&Nfr;\"], [0, \"&Ofr;\"], [0, \"&Pfr;\"], [0, \"&Qfr;\"], [1, \"&Sfr;\"], [0, \"&Tfr;\"], [0, \"&Ufr;\"], [0, \"&Vfr;\"], [0, \"&Wfr;\"], [0, \"&Xfr;\"], [0, \"&Yfr;\"], [1, \"&afr;\"], [0, \"&bfr;\"], [0, \"&cfr;\"], [0, \"&dfr;\"], [0, \"&efr;\"], [0, \"&ffr;\"], [0, \"&gfr;\"], [0, \"&hfr;\"], [0, \"&ifr;\"], [0, \"&jfr;\"], [0, \"&kfr;\"], [0, \"&lfr;\"], [0, \"&mfr;\"], [0, \"&nfr;\"], [0, \"&ofr;\"], [0, \"&pfr;\"], [0, \"&qfr;\"], [0, \"&rfr;\"], [0, \"&sfr;\"], [0, \"&tfr;\"], [0, \"&ufr;\"], [0, \"&vfr;\"], [0, \"&wfr;\"], [0, \"&xfr;\"], [0, \"&yfr;\"], [0, \"&zfr;\"], [0, \"&Aopf;\"], [0, \"&Bopf;\"], [1, \"&Dopf;\"], [0, \"&Eopf;\"], [0, \"&Fopf;\"], [0, \"&Gopf;\"], [1, \"&Iopf;\"], [0, \"&Jopf;\"], [0, \"&Kopf;\"], [0, \"&Lopf;\"], [0, \"&Mopf;\"], [1, \"&Oopf;\"], [3, \"&Sopf;\"], [0, \"&Topf;\"], [0, \"&Uopf;\"], [0, \"&Vopf;\"], [0, \"&Wopf;\"], [0, \"&Xopf;\"], [0, \"&Yopf;\"], [1, \"&aopf;\"], [0, \"&bopf;\"], [0, \"&copf;\"], [0, \"&dopf;\"], [0, \"&eopf;\"], [0, \"&fopf;\"], [0, \"&gopf;\"], [0, \"&hopf;\"], [0, \"&iopf;\"], [0, \"&jopf;\"], [0, \"&kopf;\"], [0, \"&lopf;\"], [0, \"&mopf;\"], [0, \"&nopf;\"], [0, \"&oopf;\"], [0, \"&popf;\"], [0, \"&qopf;\"], [0, \"&ropf;\"], [0, \"&sopf;\"], [0, \"&topf;\"], [0, \"&uopf;\"], [0, \"&vopf;\"], [0, \"&wopf;\"], [0, \"&xopf;\"], [0, \"&yopf;\"], [0, \"&zopf;\"]])) }], [8906, \"&fflig;\"], [0, \"&filig;\"], [0, \"&fllig;\"], [0, \"&ffilig;\"], [0, \"&ffllig;\"]]));\n//# sourceMappingURL=encode-html.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vZ2VuZXJhdGVkL2VuY29kZS1odG1sLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0Esd0JBQXdCLHNCQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0ZBQWdGLGtCQUFrQixnQkFBZ0IsZUFBZSxjQUFjLGlCQUFpQixpQkFBaUIsY0FBYyxlQUFlLGVBQWUsZUFBZSxjQUFjLGVBQWUsZ0JBQWdCLGlCQUFpQixjQUFjLGlCQUFpQixlQUFlLFVBQVUsUUFBUSxzQkFBc0IsR0FBRyxTQUFTLFlBQVkscUJBQXFCLEdBQUcsU0FBUyxRQUFRLHNCQUFzQixHQUFHLGVBQWUsaUJBQWlCLGtCQUFrQixlQUFlLGlCQUFpQixjQUFjLGlCQUFpQiwyQkFBMkIsVUFBVSxtQkFBbUIsR0FBRyxpQkFBaUIsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLGVBQWUsZ0JBQWdCLGlCQUFpQixjQUFjLGlCQUFpQixlQUFlLGNBQWMsZUFBZSxlQUFlLGdCQUFnQixjQUFjLGNBQWMsbUJBQW1CLGVBQWUsY0FBYyxvQkFBb0IsZUFBZSxlQUFlLGdCQUFnQixnQkFBZ0IsZUFBZSxvQkFBb0IsZ0JBQWdCLGVBQWUsZUFBZSxnQkFBZ0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGlCQUFpQixlQUFlLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGVBQWUsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZUFBZSxjQUFjLGlCQUFpQixpQkFBaUIsaUJBQWlCLGdCQUFnQixpQkFBaUIsZUFBZSxnQkFBZ0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGVBQWUsaUJBQWlCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixnQkFBZ0IsaUJBQWlCLGVBQWUsZ0JBQWdCLGdCQUFnQixpQkFBaUIsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZUFBZSxpQkFBaUIsaUJBQWlCLGdCQUFnQixlQUFlLGNBQWMsaUJBQWlCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGlCQUFpQixlQUFlLGNBQWMsaUJBQWlCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGVBQWUsaUJBQWlCLGdCQUFnQixlQUFlLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGdCQUFnQixlQUFlLGVBQWUsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGdCQUFnQixlQUFlLGVBQWUsZ0JBQWdCLGdCQUFnQixpQkFBaUIsaUJBQWlCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixlQUFlLGVBQWUsaUJBQWlCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixlQUFlLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGdCQUFnQixjQUFjLGNBQWMsZ0JBQWdCLGdCQUFnQixpQkFBaUIsaUJBQWlCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZUFBZSxpQkFBaUIsaUJBQWlCLGVBQWUsZUFBZSxpQkFBaUIsaUJBQWlCLGdCQUFnQixpQkFBaUIsa0JBQWtCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGlCQUFpQix5QkFBeUIsZUFBZSxlQUFlLDJCQUEyQixnQkFBZ0IscUJBQXFCLGtCQUFrQixlQUFlLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGVBQWUsY0FBYyxnQkFBZ0IsZUFBZSxnQkFBZ0IsaUJBQWlCLGFBQWEsYUFBYSxhQUFhLGtCQUFrQixhQUFhLGNBQWMsZ0JBQWdCLGNBQWMsa0JBQWtCLGNBQWMsY0FBYyxjQUFjLGNBQWMsZ0JBQWdCLGVBQWUsZ0JBQWdCLGdCQUFnQixlQUFlLGVBQWUsY0FBYyxnQkFBZ0IsZUFBZSxnQkFBZ0IsaUJBQWlCLGFBQWEsYUFBYSxhQUFhLGtCQUFrQixhQUFhLGNBQWMsaUJBQWlCLGdCQUFnQixjQUFjLGVBQWUsY0FBYyxjQUFjLGNBQWMsZ0JBQWdCLG1CQUFtQixlQUFlLGVBQWUsY0FBYyxpQkFBaUIsa0JBQWtCLGtCQUFrQixlQUFlLGdCQUFnQixzQkFBc0IsZ0JBQWdCLGVBQWUsZUFBZSxnQkFBZ0IsZUFBZSxnQkFBZ0IsZUFBZSxpQkFBaUIsZUFBZSxlQUFlLGdCQUFnQixlQUFlLGdCQUFnQixlQUFlLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxlQUFlLGVBQWUsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGVBQWUsZUFBZSxlQUFlLGVBQWUsaUJBQWlCLGlCQUFpQixjQUFjLGlCQUFpQixjQUFjLGVBQWUsZUFBZSxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsZUFBZSxlQUFlLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxlQUFlLGVBQWUsZUFBZSxlQUFlLGlCQUFpQixpQkFBaUIsY0FBYyxpQkFBaUIsY0FBYyxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZ0JBQWdCLGVBQWUsZ0JBQWdCLGVBQWUsaUJBQWlCLGVBQWUsZUFBZSxnQkFBZ0IsZUFBZSxnQkFBZ0IsZUFBZSxrQkFBa0IsZUFBZSxpQkFBaUIsaUJBQWlCLGdCQUFnQixpQkFBaUIsb0JBQW9CLGlCQUFpQiw4QkFBOEIsZUFBZSxjQUFjLGNBQWMsY0FBYyxlQUFlLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixnQkFBZ0IsMEJBQTBCLGlCQUFpQixnQkFBZ0IsZ0NBQWdDLGdCQUFnQixpQkFBaUIsaUJBQWlCLGVBQWUsZUFBZSxpQkFBaUIsaUJBQWlCLGtCQUFrQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixvQkFBb0IsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixnQkFBZ0IsaUJBQWlCLGlCQUFpQixVQUFVLGlCQUFpQiw0QkFBNEIsR0FBRyxpQkFBaUIsYUFBYSx5QkFBeUIsYUFBYSxnQkFBZ0IsZ0JBQWdCLGlCQUFpQixxQkFBcUIsaUJBQWlCLGVBQWUsaUJBQWlCLGNBQWMsZUFBZSxrQkFBa0IsZUFBZSxtQkFBbUIsY0FBYyxpQkFBaUIsY0FBYyxtQkFBbUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsZUFBZSxlQUFlLGtCQUFrQixlQUFlLGdCQUFnQixhQUFhLGdCQUFnQixtQkFBbUIsY0FBYyxpQkFBaUIsZ0JBQWdCLGlCQUFpQixrQkFBa0IsZUFBZSxlQUFlLHFCQUFxQixvQkFBb0IsZ0JBQWdCLGtCQUFrQixlQUFlLGdCQUFnQixpQkFBaUIsZ0NBQWdDLGFBQWEsYUFBYSxhQUFhLGtCQUFrQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGdCQUFnQix1QkFBdUIsZUFBZSxlQUFlLGVBQWUsc0JBQXNCLGdCQUFnQixnQkFBZ0IsMEJBQTBCLHlCQUF5QixnQkFBZ0IsZ0JBQWdCLFVBQVUsV0FBVyx1QkFBdUIsR0FBRyxjQUFjLGVBQWUsZUFBZSxlQUFlLGlCQUFpQixpQkFBaUIsdUJBQXVCLG1CQUFtQixjQUFjLHVCQUF1Qix3QkFBd0IseUJBQXlCLGlCQUFpQix5QkFBeUIsZ0JBQWdCLGdCQUFnQixjQUFjLGNBQWMsZUFBZSxlQUFlLGdCQUFnQixpQkFBaUIsaUJBQWlCLDBCQUEwQiwyQkFBMkIsd0JBQXdCLHlCQUF5Qix3QkFBd0IsdUJBQXVCLGdCQUFnQiwwQkFBMEIsZ0JBQWdCLGdCQUFnQiw4QkFBOEIsZ0JBQWdCLDhCQUE4Qix5QkFBeUIscUJBQXFCLDJCQUEyQixnQkFBZ0IsNEJBQTRCLHNCQUFzQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQiwwQkFBMEIsd0JBQXdCLDJCQUEyQixlQUFlLCtCQUErQiw0QkFBNEIsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGdCQUFnQixnQkFBZ0IsNEJBQTRCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixlQUFlLFVBQVUsVUFBVSxzQkFBc0IsR0FBRyxlQUFlLGlCQUFpQixnQkFBZ0IsY0FBYyxrQkFBa0IscUJBQXFCLGFBQWEsZ0JBQWdCLGVBQWUsaUJBQWlCLGNBQWMsZ0JBQWdCLG9CQUFvQixrQkFBa0Isb0JBQW9CLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGVBQWUsZ0JBQWdCLGdCQUFnQixVQUFVLFNBQVMsc0JBQXNCLEdBQUcsZ0JBQWdCLGlCQUFpQixjQUFjLGVBQWUsNEJBQTRCLCtCQUErQixjQUFjLGFBQWEsVUFBVSxTQUFTLHVCQUF1QixHQUFHLFNBQVMsU0FBUyx1QkFBdUIsR0FBRyxhQUFhLGNBQWMsZ0JBQWdCLGlCQUFpQixpQkFBaUIsa0JBQWtCLGdCQUFnQixtQ0FBbUMsbUJBQW1CLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGdCQUFnQixtQkFBbUIsZ0JBQWdCLGlCQUFpQixVQUFVLFNBQVMsdUJBQXVCLEdBQUcsU0FBUyxhQUFhLHFCQUFxQixHQUFHLFNBQVMsUUFBUSxvQkFBb0IsR0FBRyxhQUFhLHdCQUF3QixtQkFBbUIsVUFBVSxXQUFXLHNCQUFzQixHQUFHLGNBQWMsd0JBQXdCLGVBQWUsZ0JBQWdCLGdCQUFnQixhQUFhLGNBQWMsY0FBYyxVQUFVLFVBQVUsc0JBQXNCLEdBQUcsa0JBQWtCLFVBQVUsYUFBYSxzQkFBc0IsR0FBRyxTQUFTLFVBQVUsc0JBQXNCLEdBQUcsU0FBUyxXQUFXLHVCQUF1QixHQUFHLFNBQVMsV0FBVyxzQkFBc0IsR0FBRyxrQkFBa0IsZ0JBQWdCLGdCQUFnQixpQkFBaUIsaUJBQWlCLGVBQWUsaUJBQWlCLGlCQUFpQixnQkFBZ0Isb0JBQW9CLGlCQUFpQixhQUFhLFVBQVUsZUFBZSx5QkFBeUIsR0FBRyxnQkFBZ0IsVUFBVSxRQUFRLHNCQUFzQixHQUFHLFNBQVMsUUFBUSxzQkFBc0IsR0FBRyxTQUFTLFFBQVEsb0JBQW9CLEdBQUcsU0FBUyxRQUFRLG9CQUFvQixHQUFHLFNBQVMsU0FBUyw0QkFBNEIsR0FBRyxTQUFTLFNBQVMsNEJBQTRCLEdBQUcsU0FBUyxRQUFRLHdFQUF3RSxpQkFBaUIsT0FBTyxTQUFTLFFBQVEsd0VBQXdFLGlCQUFpQixPQUFPLGlCQUFpQixvQkFBb0IsZ0JBQWdCLGNBQWMsY0FBYyxjQUFjLGtCQUFrQix1QkFBdUIsZ0JBQWdCLGdCQUFnQixzQkFBc0IsYUFBYSx5QkFBeUIseUJBQXlCLGFBQWEsYUFBYSxnQkFBZ0IsZ0JBQWdCLHdCQUF3QixVQUFVLFdBQVcsaUNBQWlDLEdBQUcscUJBQXFCLHNCQUFzQixVQUFVLFNBQVMsMkJBQTJCLEdBQUcsU0FBUyxTQUFTLDZCQUE2QixHQUFHLGNBQWMsZUFBZSxlQUFlLGVBQWUseUJBQXlCLDJCQUEyQixVQUFVLFdBQVcsK0JBQStCLEdBQUcsU0FBUyxXQUFXLCtCQUErQixHQUFHLGdCQUFnQixvQkFBb0IsVUFBVSxXQUFXLGdDQUFnQyxHQUFHLFNBQVMsV0FBVyxrQ0FBa0MsR0FBRyxnQkFBZ0IsaUJBQWlCLFVBQVUsV0FBVyx5QkFBeUIsR0FBRyxTQUFTLFdBQVcseUJBQXlCLEdBQUcsb0JBQW9CLHNCQUFzQixzQkFBc0IsZUFBZSxvQkFBb0Isc0JBQXNCLHFCQUFxQixzQkFBc0Isa0JBQWtCLG1CQUFtQixtQkFBbUIsb0JBQW9CLG1CQUFtQixnQkFBZ0Isa0JBQWtCLGNBQWMsaUJBQWlCLHlCQUF5QixnQkFBZ0IsaUJBQWlCLGdCQUFnQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLHVCQUF1Qix3QkFBd0IsVUFBVSx1QkFBdUIseUJBQXlCLEdBQUcsU0FBUyx3QkFBd0IseUJBQXlCLEdBQUcsZ0JBQWdCLGVBQWUsbUJBQW1CLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixrQkFBa0IsZ0JBQWdCLG1CQUFtQixpQkFBaUIsaUJBQWlCLGlCQUFpQixlQUFlLGVBQWUsaUJBQWlCLHdCQUF3QixpQkFBaUIsaUJBQWlCLGlCQUFpQix5QkFBeUIsMEJBQTBCLG9CQUFvQixtQkFBbUIscUJBQXFCLGNBQWMsY0FBYyxjQUFjLGNBQWMsZUFBZSxlQUFlLGtCQUFrQixnQkFBZ0IsVUFBVSxRQUFRLG9CQUFvQixHQUFHLFNBQVMsUUFBUSxvQkFBb0IsR0FBRyxTQUFTLFNBQVMsdUJBQXVCLEdBQUcsU0FBUyxTQUFTLHVCQUF1QixHQUFHLGVBQWUsZ0JBQWdCLGdDQUFnQyxnQ0FBZ0MsK0JBQStCLGlDQUFpQyxnQkFBZ0IsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0JBQWdCLDJCQUEyQixpQkFBaUIsZ0NBQWdDLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGdCQUFnQixVQUFVLGFBQWEseUJBQXlCLEdBQUcsaUJBQWlCLGtCQUFrQixVQUFVLFdBQVcsdUJBQXVCLEdBQUcsY0FBYyxlQUFlLGNBQWMsa0JBQWtCLGtCQUFrQixpQkFBaUIsaUJBQWlCLGdCQUFnQixnQkFBZ0Isb0JBQW9CLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsZUFBZSxtQkFBbUIsbUJBQW1CLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLG1CQUFtQixpQkFBaUIsZ0JBQWdCLGlCQUFpQixtQkFBbUIsc0JBQXNCLHFCQUFxQixzQkFBc0IsZUFBZSxtQkFBbUIsMkJBQTJCLDJCQUEyQixvQkFBb0IscUJBQXFCLG1CQUFtQixtQkFBbUIsaUJBQWlCLHFCQUFxQixnQkFBZ0IsZUFBZSxnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZUFBZSxnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixpQkFBaUIsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixrQkFBa0Isc0JBQXNCLCtCQUErQixlQUFlLGlCQUFpQixnQkFBZ0Isd0JBQXdCLHdCQUF3QixtQkFBbUIsNkJBQTZCLGVBQWUsMEJBQTBCLDRCQUE0QixlQUFlLDRCQUE0QixlQUFlLGNBQWMsY0FBYyxrQkFBa0Isa0JBQWtCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLDJCQUEyQiw0QkFBNEIsa0JBQWtCLGVBQWUsZ0JBQWdCLGtCQUFrQixlQUFlLGtCQUFrQixnQkFBZ0IsaUJBQWlCLHNCQUFzQixlQUFlLGVBQWUsa0JBQWtCLGdCQUFnQixrQkFBa0IsZ0JBQWdCLGVBQWUsZ0JBQWdCLDZCQUE2QixpQkFBaUIsZ0JBQWdCLG9CQUFvQixrQkFBa0IsNkJBQTZCLDZCQUE2QixlQUFlLGVBQWUsZUFBZSxlQUFlLGdCQUFnQixnQkFBZ0Isd0JBQXdCLHlCQUF5Qiw2QkFBNkIsOEJBQThCLCtCQUErQixtQ0FBbUMscUJBQXFCLG1CQUFtQixtQkFBbUIsaUJBQWlCLGlCQUFpQixjQUFjLGdCQUFnQixpQkFBaUIsZ0JBQWdCLGtCQUFrQixtQkFBbUIsbUJBQW1CLHFCQUFxQix1QkFBdUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGtCQUFrQixrQkFBa0IsaUJBQWlCLGlCQUFpQixtQkFBbUIsbUJBQW1CLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixVQUFVLFdBQVcsdUJBQXVCLEdBQUcsaUJBQWlCLGVBQWUsZUFBZSxrQkFBa0IsaUJBQWlCLGtCQUFrQixrQkFBa0IsaUJBQWlCLGtCQUFrQixtQkFBbUIsbUJBQW1CLG1CQUFtQiwwQkFBMEIsNEJBQTRCLDhCQUE4QiwyQkFBMkIsd0JBQXdCLHlCQUF5QiwyQkFBMkIsNkJBQTZCLDRCQUE0Qiw2QkFBNkIsMEJBQTBCLDRCQUE0Qix3QkFBd0IseUJBQXlCLDJCQUEyQiw2QkFBNkIsNEJBQTRCLDZCQUE2QiwwQkFBMEIsNEJBQTRCLGVBQWUsZUFBZSxlQUFlLGVBQWUsa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLHVCQUF1QixnQkFBZ0Isa0JBQWtCLGtCQUFrQixrQkFBa0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsa0JBQWtCLGtCQUFrQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixrQkFBa0IsaUJBQWlCLG1CQUFtQixlQUFlLGdCQUFnQixrQkFBa0Isa0JBQWtCLG1CQUFtQixtQkFBbUIsbUJBQW1CLG1CQUFtQixtQkFBbUIsbUJBQW1CLG1CQUFtQixtQkFBbUIsa0JBQWtCLGtCQUFrQixrQkFBa0IsbUJBQW1CLG1CQUFtQixnQkFBZ0IsZUFBZSxlQUFlLGdCQUFnQixrQkFBa0IsaUJBQWlCLGdCQUFnQixnQkFBZ0IsY0FBYyxjQUFjLGtCQUFrQixlQUFlLGVBQWUsZ0JBQWdCLGlCQUFpQixnQkFBZ0IsbUJBQW1CLFVBQVUscUJBQXFCLG1DQUFtQyxHQUFHLFNBQVMsc0JBQXNCLG9DQUFvQyxHQUFHLGlCQUFpQixtQkFBbUIsa0JBQWtCLGlCQUFpQixtQkFBbUIsbUJBQW1CLHVCQUF1QixzQkFBc0IsZUFBZSxrQkFBa0IsbUJBQW1CLG9CQUFvQixtQkFBbUIsbUJBQW1CLGlCQUFpQixtQkFBbUIsbUJBQW1CLGdCQUFnQixtQkFBbUIsbUJBQW1CLGtCQUFrQixtQkFBbUIsa0JBQWtCLG1CQUFtQixtQkFBbUIsbUJBQW1CLGtCQUFrQixpQkFBaUIsa0JBQWtCLGtCQUFrQixpQkFBaUIsa0JBQWtCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGlCQUFpQixtQkFBbUIsaUJBQWlCLGtCQUFrQixrQkFBa0IsbUJBQW1CLGlCQUFpQixlQUFlLGtCQUFrQixtQkFBbUIsa0JBQWtCLGtCQUFrQixnQkFBZ0IsaUJBQWlCLGVBQWUsZUFBZSxpQkFBaUIsZ0JBQWdCLGlCQUFpQixpQkFBaUIsbUJBQW1CLG1CQUFtQixpQkFBaUIsaUJBQWlCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGNBQWMsYUFBYSxpQkFBaUIsZUFBZSxrQkFBa0IsbUJBQW1CLGVBQWUsY0FBYyxlQUFlLGNBQWMsaUJBQWlCLGdCQUFnQixpQkFBaUIsVUFBVSxhQUFhLHlCQUF5QixHQUFHLGdCQUFnQixpQkFBaUIsVUFBVSxTQUFTLHFCQUFxQixHQUFHLGVBQWUsZ0JBQWdCLGVBQWUsaUJBQWlCLGdCQUFnQixrQkFBa0Isa0JBQWtCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGtCQUFrQixVQUFVLGNBQWMsMEJBQTBCLEdBQUcsU0FBUyxjQUFjLDBCQUEwQixHQUFHLGdCQUFnQixpQkFBaUIsa0JBQWtCLGtCQUFrQixtQkFBbUIsbUJBQW1CLGNBQWMsY0FBYyxjQUFjLGNBQWMsZUFBZSxlQUFlLGNBQWMsY0FBYyxnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsY0FBYyxjQUFjLGlCQUFpQixpQkFBaUIsY0FBYyxjQUFjLGlCQUFpQixpQkFBaUIsYUFBYSxhQUFhLGVBQWUsZUFBZSxnQkFBZ0IsZ0JBQWdCLFVBQVUsY0FBYyxrQ0FBa0MsR0FBRyxTQUFTLG9CQUFvQix3Q0FBd0MsR0FBRyxhQUFhLGNBQWMsZUFBZSxlQUFlLGdCQUFnQixnQkFBZ0IsY0FBYyxjQUFjLFVBQVUsVUFBVSx3QkFBd0IsR0FBRyxTQUFTLFVBQVUsd0JBQXdCLEdBQUcsZUFBZSxVQUFVLG1CQUFtQixpQ0FBaUMsR0FBRyxTQUFTLFNBQVMsaUNBQWlDLEdBQUcsYUFBYSxjQUFjLG1CQUFtQixlQUFlLGVBQWUsZUFBZSxzQkFBc0IsZ0JBQWdCLGFBQWEsYUFBYSxpQkFBaUIsaUJBQWlCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLFVBQVUsVUFBVSxzQkFBc0IsR0FBRyxTQUFTLFVBQVUsc0JBQXNCLEdBQUcsZ0JBQWdCLGlCQUFpQixVQUFVLFdBQVcsZ0NBQWdDLEdBQUcsU0FBUyxXQUFXLGdDQUFnQyxHQUFHLGNBQWMsZUFBZSxnQkFBZ0IsZ0JBQWdCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixrQkFBa0Isa0JBQWtCLGdCQUFnQixrQkFBa0IsZUFBZSxnQkFBZ0IsaUJBQWlCLGVBQWUsZUFBZSxnQkFBZ0IsZUFBZSxjQUFjLGVBQWUsZ0JBQWdCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGdCQUFnQixpQkFBaUIsVUFBVSxXQUFXLHdCQUF3QixHQUFHLGFBQWEsdUVBQXVFLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLGVBQWUsZUFBZSxlQUFlLE9BQU8sa0JBQWtCLGdCQUFnQixnQkFBZ0IsaUJBQWlCLGlCQUFpQjtBQUNqdjBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9lbnRpdGllcy9kaXN0L2VzbS9nZW5lcmF0ZWQvZW5jb2RlLWh0bWwuanM/MzJhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgdXNpbmcgc2NyaXB0cy93cml0ZS1lbmNvZGUtbWFwLnRzXG5mdW5jdGlvbiByZXN0b3JlRGlmZihhcnJheSkge1xuICAgIGZvciAobGV0IGluZGV4ID0gMTsgaW5kZXggPCBhcnJheS5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgYXJyYXlbaW5kZXhdWzBdICs9IGFycmF5W2luZGV4IC0gMV1bMF0gKyAxO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXk7XG59XG4vLyBwcmV0dGllci1pZ25vcmVcbmV4cG9ydCBjb25zdCBodG1sVHJpZSA9IC8qICNfX1BVUkVfXyAqLyBuZXcgTWFwKC8qICNfX1BVUkVfXyAqLyByZXN0b3JlRGlmZihbWzksIFwiJlRhYjtcIl0sIFswLCBcIiZOZXdMaW5lO1wiXSwgWzIyLCBcIiZleGNsO1wiXSwgWzAsIFwiJnF1b3Q7XCJdLCBbMCwgXCImbnVtO1wiXSwgWzAsIFwiJmRvbGxhcjtcIl0sIFswLCBcIiZwZXJjbnQ7XCJdLCBbMCwgXCImYW1wO1wiXSwgWzAsIFwiJmFwb3M7XCJdLCBbMCwgXCImbHBhcjtcIl0sIFswLCBcIiZycGFyO1wiXSwgWzAsIFwiJmFzdDtcIl0sIFswLCBcIiZwbHVzO1wiXSwgWzAsIFwiJmNvbW1hO1wiXSwgWzEsIFwiJnBlcmlvZDtcIl0sIFswLCBcIiZzb2w7XCJdLCBbMTAsIFwiJmNvbG9uO1wiXSwgWzAsIFwiJnNlbWk7XCJdLCBbMCwgeyB2OiBcIiZsdDtcIiwgbjogODQwMiwgbzogXCImbnZsdDtcIiB9XSwgWzAsIHsgdjogXCImZXF1YWxzO1wiLCBuOiA4NDIxLCBvOiBcIiZibmU7XCIgfV0sIFswLCB7IHY6IFwiJmd0O1wiLCBuOiA4NDAyLCBvOiBcIiZudmd0O1wiIH1dLCBbMCwgXCImcXVlc3Q7XCJdLCBbMCwgXCImY29tbWF0O1wiXSwgWzI2LCBcIiZsYnJhY2s7XCJdLCBbMCwgXCImYnNvbDtcIl0sIFswLCBcIiZyYnJhY2s7XCJdLCBbMCwgXCImSGF0O1wiXSwgWzAsIFwiJmxvd2JhcjtcIl0sIFswLCBcIiZEaWFjcml0aWNhbEdyYXZlO1wiXSwgWzUsIHsgbjogMTA2LCBvOiBcIiZmamxpZztcIiB9XSwgWzIwLCBcIiZsYnJhY2U7XCJdLCBbMCwgXCImdmVyYmFyO1wiXSwgWzAsIFwiJnJicmFjZTtcIl0sIFszNCwgXCImbmJzcDtcIl0sIFswLCBcIiZpZXhjbDtcIl0sIFswLCBcIiZjZW50O1wiXSwgWzAsIFwiJnBvdW5kO1wiXSwgWzAsIFwiJmN1cnJlbjtcIl0sIFswLCBcIiZ5ZW47XCJdLCBbMCwgXCImYnJ2YmFyO1wiXSwgWzAsIFwiJnNlY3Q7XCJdLCBbMCwgXCImZGllO1wiXSwgWzAsIFwiJmNvcHk7XCJdLCBbMCwgXCImb3JkZjtcIl0sIFswLCBcIiZsYXF1bztcIl0sIFswLCBcIiZub3Q7XCJdLCBbMCwgXCImc2h5O1wiXSwgWzAsIFwiJmNpcmNsZWRSO1wiXSwgWzAsIFwiJm1hY3I7XCJdLCBbMCwgXCImZGVnO1wiXSwgWzAsIFwiJlBsdXNNaW51cztcIl0sIFswLCBcIiZzdXAyO1wiXSwgWzAsIFwiJnN1cDM7XCJdLCBbMCwgXCImYWN1dGU7XCJdLCBbMCwgXCImbWljcm87XCJdLCBbMCwgXCImcGFyYTtcIl0sIFswLCBcIiZjZW50ZXJkb3Q7XCJdLCBbMCwgXCImY2VkaWw7XCJdLCBbMCwgXCImc3VwMTtcIl0sIFswLCBcIiZvcmRtO1wiXSwgWzAsIFwiJnJhcXVvO1wiXSwgWzAsIFwiJmZyYWMxNDtcIl0sIFswLCBcIiZmcmFjMTI7XCJdLCBbMCwgXCImZnJhYzM0O1wiXSwgWzAsIFwiJmlxdWVzdDtcIl0sIFswLCBcIiZBZ3JhdmU7XCJdLCBbMCwgXCImQWFjdXRlO1wiXSwgWzAsIFwiJkFjaXJjO1wiXSwgWzAsIFwiJkF0aWxkZTtcIl0sIFswLCBcIiZBdW1sO1wiXSwgWzAsIFwiJmFuZ3N0O1wiXSwgWzAsIFwiJkFFbGlnO1wiXSwgWzAsIFwiJkNjZWRpbDtcIl0sIFswLCBcIiZFZ3JhdmU7XCJdLCBbMCwgXCImRWFjdXRlO1wiXSwgWzAsIFwiJkVjaXJjO1wiXSwgWzAsIFwiJkV1bWw7XCJdLCBbMCwgXCImSWdyYXZlO1wiXSwgWzAsIFwiJklhY3V0ZTtcIl0sIFswLCBcIiZJY2lyYztcIl0sIFswLCBcIiZJdW1sO1wiXSwgWzAsIFwiJkVUSDtcIl0sIFswLCBcIiZOdGlsZGU7XCJdLCBbMCwgXCImT2dyYXZlO1wiXSwgWzAsIFwiJk9hY3V0ZTtcIl0sIFswLCBcIiZPY2lyYztcIl0sIFswLCBcIiZPdGlsZGU7XCJdLCBbMCwgXCImT3VtbDtcIl0sIFswLCBcIiZ0aW1lcztcIl0sIFswLCBcIiZPc2xhc2g7XCJdLCBbMCwgXCImVWdyYXZlO1wiXSwgWzAsIFwiJlVhY3V0ZTtcIl0sIFswLCBcIiZVY2lyYztcIl0sIFswLCBcIiZVdW1sO1wiXSwgWzAsIFwiJllhY3V0ZTtcIl0sIFswLCBcIiZUSE9STjtcIl0sIFswLCBcIiZzemxpZztcIl0sIFswLCBcIiZhZ3JhdmU7XCJdLCBbMCwgXCImYWFjdXRlO1wiXSwgWzAsIFwiJmFjaXJjO1wiXSwgWzAsIFwiJmF0aWxkZTtcIl0sIFswLCBcIiZhdW1sO1wiXSwgWzAsIFwiJmFyaW5nO1wiXSwgWzAsIFwiJmFlbGlnO1wiXSwgWzAsIFwiJmNjZWRpbDtcIl0sIFswLCBcIiZlZ3JhdmU7XCJdLCBbMCwgXCImZWFjdXRlO1wiXSwgWzAsIFwiJmVjaXJjO1wiXSwgWzAsIFwiJmV1bWw7XCJdLCBbMCwgXCImaWdyYXZlO1wiXSwgWzAsIFwiJmlhY3V0ZTtcIl0sIFswLCBcIiZpY2lyYztcIl0sIFswLCBcIiZpdW1sO1wiXSwgWzAsIFwiJmV0aDtcIl0sIFswLCBcIiZudGlsZGU7XCJdLCBbMCwgXCImb2dyYXZlO1wiXSwgWzAsIFwiJm9hY3V0ZTtcIl0sIFswLCBcIiZvY2lyYztcIl0sIFswLCBcIiZvdGlsZGU7XCJdLCBbMCwgXCImb3VtbDtcIl0sIFswLCBcIiZkaXY7XCJdLCBbMCwgXCImb3NsYXNoO1wiXSwgWzAsIFwiJnVncmF2ZTtcIl0sIFswLCBcIiZ1YWN1dGU7XCJdLCBbMCwgXCImdWNpcmM7XCJdLCBbMCwgXCImdXVtbDtcIl0sIFswLCBcIiZ5YWN1dGU7XCJdLCBbMCwgXCImdGhvcm47XCJdLCBbMCwgXCImeXVtbDtcIl0sIFswLCBcIiZBbWFjcjtcIl0sIFswLCBcIiZhbWFjcjtcIl0sIFswLCBcIiZBYnJldmU7XCJdLCBbMCwgXCImYWJyZXZlO1wiXSwgWzAsIFwiJkFvZ29uO1wiXSwgWzAsIFwiJmFvZ29uO1wiXSwgWzAsIFwiJkNhY3V0ZTtcIl0sIFswLCBcIiZjYWN1dGU7XCJdLCBbMCwgXCImQ2NpcmM7XCJdLCBbMCwgXCImY2NpcmM7XCJdLCBbMCwgXCImQ2RvdDtcIl0sIFswLCBcIiZjZG90O1wiXSwgWzAsIFwiJkNjYXJvbjtcIl0sIFswLCBcIiZjY2Fyb247XCJdLCBbMCwgXCImRGNhcm9uO1wiXSwgWzAsIFwiJmRjYXJvbjtcIl0sIFswLCBcIiZEc3Ryb2s7XCJdLCBbMCwgXCImZHN0cm9rO1wiXSwgWzAsIFwiJkVtYWNyO1wiXSwgWzAsIFwiJmVtYWNyO1wiXSwgWzIsIFwiJkVkb3Q7XCJdLCBbMCwgXCImZWRvdDtcIl0sIFswLCBcIiZFb2dvbjtcIl0sIFswLCBcIiZlb2dvbjtcIl0sIFswLCBcIiZFY2Fyb247XCJdLCBbMCwgXCImZWNhcm9uO1wiXSwgWzAsIFwiJkdjaXJjO1wiXSwgWzAsIFwiJmdjaXJjO1wiXSwgWzAsIFwiJkdicmV2ZTtcIl0sIFswLCBcIiZnYnJldmU7XCJdLCBbMCwgXCImR2RvdDtcIl0sIFswLCBcIiZnZG90O1wiXSwgWzAsIFwiJkdjZWRpbDtcIl0sIFsxLCBcIiZIY2lyYztcIl0sIFswLCBcIiZoY2lyYztcIl0sIFswLCBcIiZIc3Ryb2s7XCJdLCBbMCwgXCImaHN0cm9rO1wiXSwgWzAsIFwiJkl0aWxkZTtcIl0sIFswLCBcIiZpdGlsZGU7XCJdLCBbMCwgXCImSW1hY3I7XCJdLCBbMCwgXCImaW1hY3I7XCJdLCBbMiwgXCImSW9nb247XCJdLCBbMCwgXCImaW9nb247XCJdLCBbMCwgXCImSWRvdDtcIl0sIFswLCBcIiZpbWF0aDtcIl0sIFswLCBcIiZJSmxpZztcIl0sIFswLCBcIiZpamxpZztcIl0sIFswLCBcIiZKY2lyYztcIl0sIFswLCBcIiZqY2lyYztcIl0sIFswLCBcIiZLY2VkaWw7XCJdLCBbMCwgXCIma2NlZGlsO1wiXSwgWzAsIFwiJmtncmVlbjtcIl0sIFswLCBcIiZMYWN1dGU7XCJdLCBbMCwgXCImbGFjdXRlO1wiXSwgWzAsIFwiJkxjZWRpbDtcIl0sIFswLCBcIiZsY2VkaWw7XCJdLCBbMCwgXCImTGNhcm9uO1wiXSwgWzAsIFwiJmxjYXJvbjtcIl0sIFswLCBcIiZMbWlkb3Q7XCJdLCBbMCwgXCImbG1pZG90O1wiXSwgWzAsIFwiJkxzdHJvaztcIl0sIFswLCBcIiZsc3Ryb2s7XCJdLCBbMCwgXCImTmFjdXRlO1wiXSwgWzAsIFwiJm5hY3V0ZTtcIl0sIFswLCBcIiZOY2VkaWw7XCJdLCBbMCwgXCImbmNlZGlsO1wiXSwgWzAsIFwiJk5jYXJvbjtcIl0sIFswLCBcIiZuY2Fyb247XCJdLCBbMCwgXCImbmFwb3M7XCJdLCBbMCwgXCImRU5HO1wiXSwgWzAsIFwiJmVuZztcIl0sIFswLCBcIiZPbWFjcjtcIl0sIFswLCBcIiZvbWFjcjtcIl0sIFsyLCBcIiZPZGJsYWM7XCJdLCBbMCwgXCImb2RibGFjO1wiXSwgWzAsIFwiJk9FbGlnO1wiXSwgWzAsIFwiJm9lbGlnO1wiXSwgWzAsIFwiJlJhY3V0ZTtcIl0sIFswLCBcIiZyYWN1dGU7XCJdLCBbMCwgXCImUmNlZGlsO1wiXSwgWzAsIFwiJnJjZWRpbDtcIl0sIFswLCBcIiZSY2Fyb247XCJdLCBbMCwgXCImcmNhcm9uO1wiXSwgWzAsIFwiJlNhY3V0ZTtcIl0sIFswLCBcIiZzYWN1dGU7XCJdLCBbMCwgXCImU2NpcmM7XCJdLCBbMCwgXCImc2NpcmM7XCJdLCBbMCwgXCImU2NlZGlsO1wiXSwgWzAsIFwiJnNjZWRpbDtcIl0sIFswLCBcIiZTY2Fyb247XCJdLCBbMCwgXCImc2Nhcm9uO1wiXSwgWzAsIFwiJlRjZWRpbDtcIl0sIFswLCBcIiZ0Y2VkaWw7XCJdLCBbMCwgXCImVGNhcm9uO1wiXSwgWzAsIFwiJnRjYXJvbjtcIl0sIFswLCBcIiZUc3Ryb2s7XCJdLCBbMCwgXCImdHN0cm9rO1wiXSwgWzAsIFwiJlV0aWxkZTtcIl0sIFswLCBcIiZ1dGlsZGU7XCJdLCBbMCwgXCImVW1hY3I7XCJdLCBbMCwgXCImdW1hY3I7XCJdLCBbMCwgXCImVWJyZXZlO1wiXSwgWzAsIFwiJnVicmV2ZTtcIl0sIFswLCBcIiZVcmluZztcIl0sIFswLCBcIiZ1cmluZztcIl0sIFswLCBcIiZVZGJsYWM7XCJdLCBbMCwgXCImdWRibGFjO1wiXSwgWzAsIFwiJlVvZ29uO1wiXSwgWzAsIFwiJnVvZ29uO1wiXSwgWzAsIFwiJldjaXJjO1wiXSwgWzAsIFwiJndjaXJjO1wiXSwgWzAsIFwiJlljaXJjO1wiXSwgWzAsIFwiJnljaXJjO1wiXSwgWzAsIFwiJll1bWw7XCJdLCBbMCwgXCImWmFjdXRlO1wiXSwgWzAsIFwiJnphY3V0ZTtcIl0sIFswLCBcIiZaZG90O1wiXSwgWzAsIFwiJnpkb3Q7XCJdLCBbMCwgXCImWmNhcm9uO1wiXSwgWzAsIFwiJnpjYXJvbjtcIl0sIFsxOSwgXCImZm5vZjtcIl0sIFszNCwgXCImaW1wZWQ7XCJdLCBbNjMsIFwiJmdhY3V0ZTtcIl0sIFs2NSwgXCImam1hdGg7XCJdLCBbMTQyLCBcIiZjaXJjO1wiXSwgWzAsIFwiJmNhcm9uO1wiXSwgWzE2LCBcIiZicmV2ZTtcIl0sIFswLCBcIiZEaWFjcml0aWNhbERvdDtcIl0sIFswLCBcIiZyaW5nO1wiXSwgWzAsIFwiJm9nb247XCJdLCBbMCwgXCImRGlhY3JpdGljYWxUaWxkZTtcIl0sIFswLCBcIiZkYmxhYztcIl0sIFs1MSwgXCImRG93bkJyZXZlO1wiXSwgWzEyNywgXCImQWxwaGE7XCJdLCBbMCwgXCImQmV0YTtcIl0sIFswLCBcIiZHYW1tYTtcIl0sIFswLCBcIiZEZWx0YTtcIl0sIFswLCBcIiZFcHNpbG9uO1wiXSwgWzAsIFwiJlpldGE7XCJdLCBbMCwgXCImRXRhO1wiXSwgWzAsIFwiJlRoZXRhO1wiXSwgWzAsIFwiJklvdGE7XCJdLCBbMCwgXCImS2FwcGE7XCJdLCBbMCwgXCImTGFtYmRhO1wiXSwgWzAsIFwiJk11O1wiXSwgWzAsIFwiJk51O1wiXSwgWzAsIFwiJlhpO1wiXSwgWzAsIFwiJk9taWNyb247XCJdLCBbMCwgXCImUGk7XCJdLCBbMCwgXCImUmhvO1wiXSwgWzEsIFwiJlNpZ21hO1wiXSwgWzAsIFwiJlRhdTtcIl0sIFswLCBcIiZVcHNpbG9uO1wiXSwgWzAsIFwiJlBoaTtcIl0sIFswLCBcIiZDaGk7XCJdLCBbMCwgXCImUHNpO1wiXSwgWzAsIFwiJm9obTtcIl0sIFs3LCBcIiZhbHBoYTtcIl0sIFswLCBcIiZiZXRhO1wiXSwgWzAsIFwiJmdhbW1hO1wiXSwgWzAsIFwiJmRlbHRhO1wiXSwgWzAsIFwiJmVwc2k7XCJdLCBbMCwgXCImemV0YTtcIl0sIFswLCBcIiZldGE7XCJdLCBbMCwgXCImdGhldGE7XCJdLCBbMCwgXCImaW90YTtcIl0sIFswLCBcIiZrYXBwYTtcIl0sIFswLCBcIiZsYW1iZGE7XCJdLCBbMCwgXCImbXU7XCJdLCBbMCwgXCImbnU7XCJdLCBbMCwgXCImeGk7XCJdLCBbMCwgXCImb21pY3JvbjtcIl0sIFswLCBcIiZwaTtcIl0sIFswLCBcIiZyaG87XCJdLCBbMCwgXCImc2lnbWFmO1wiXSwgWzAsIFwiJnNpZ21hO1wiXSwgWzAsIFwiJnRhdTtcIl0sIFswLCBcIiZ1cHNpO1wiXSwgWzAsIFwiJnBoaTtcIl0sIFswLCBcIiZjaGk7XCJdLCBbMCwgXCImcHNpO1wiXSwgWzAsIFwiJm9tZWdhO1wiXSwgWzcsIFwiJnRoZXRhc3ltO1wiXSwgWzAsIFwiJlVwc2k7XCJdLCBbMiwgXCImcGhpdjtcIl0sIFswLCBcIiZwaXY7XCJdLCBbNSwgXCImR2FtbWFkO1wiXSwgWzAsIFwiJmRpZ2FtbWE7XCJdLCBbMTgsIFwiJmthcHBhdjtcIl0sIFswLCBcIiZyaG92O1wiXSwgWzMsIFwiJmVwc2l2O1wiXSwgWzAsIFwiJmJhY2tlcHNpbG9uO1wiXSwgWzEwLCBcIiZJT2N5O1wiXSwgWzAsIFwiJkRKY3k7XCJdLCBbMCwgXCImR0pjeTtcIl0sIFswLCBcIiZKdWtjeTtcIl0sIFswLCBcIiZEU2N5O1wiXSwgWzAsIFwiJkl1a2N5O1wiXSwgWzAsIFwiJllJY3k7XCJdLCBbMCwgXCImSnNlcmN5O1wiXSwgWzAsIFwiJkxKY3k7XCJdLCBbMCwgXCImTkpjeTtcIl0sIFswLCBcIiZUU0hjeTtcIl0sIFswLCBcIiZLSmN5O1wiXSwgWzEsIFwiJlVicmN5O1wiXSwgWzAsIFwiJkRaY3k7XCJdLCBbMCwgXCImQWN5O1wiXSwgWzAsIFwiJkJjeTtcIl0sIFswLCBcIiZWY3k7XCJdLCBbMCwgXCImR2N5O1wiXSwgWzAsIFwiJkRjeTtcIl0sIFswLCBcIiZJRWN5O1wiXSwgWzAsIFwiJlpIY3k7XCJdLCBbMCwgXCImWmN5O1wiXSwgWzAsIFwiJkljeTtcIl0sIFswLCBcIiZKY3k7XCJdLCBbMCwgXCImS2N5O1wiXSwgWzAsIFwiJkxjeTtcIl0sIFswLCBcIiZNY3k7XCJdLCBbMCwgXCImTmN5O1wiXSwgWzAsIFwiJk9jeTtcIl0sIFswLCBcIiZQY3k7XCJdLCBbMCwgXCImUmN5O1wiXSwgWzAsIFwiJlNjeTtcIl0sIFswLCBcIiZUY3k7XCJdLCBbMCwgXCImVWN5O1wiXSwgWzAsIFwiJkZjeTtcIl0sIFswLCBcIiZLSGN5O1wiXSwgWzAsIFwiJlRTY3k7XCJdLCBbMCwgXCImQ0hjeTtcIl0sIFswLCBcIiZTSGN5O1wiXSwgWzAsIFwiJlNIQ0hjeTtcIl0sIFswLCBcIiZIQVJEY3k7XCJdLCBbMCwgXCImWWN5O1wiXSwgWzAsIFwiJlNPRlRjeTtcIl0sIFswLCBcIiZFY3k7XCJdLCBbMCwgXCImWVVjeTtcIl0sIFswLCBcIiZZQWN5O1wiXSwgWzAsIFwiJmFjeTtcIl0sIFswLCBcIiZiY3k7XCJdLCBbMCwgXCImdmN5O1wiXSwgWzAsIFwiJmdjeTtcIl0sIFswLCBcIiZkY3k7XCJdLCBbMCwgXCImaWVjeTtcIl0sIFswLCBcIiZ6aGN5O1wiXSwgWzAsIFwiJnpjeTtcIl0sIFswLCBcIiZpY3k7XCJdLCBbMCwgXCImamN5O1wiXSwgWzAsIFwiJmtjeTtcIl0sIFswLCBcIiZsY3k7XCJdLCBbMCwgXCImbWN5O1wiXSwgWzAsIFwiJm5jeTtcIl0sIFswLCBcIiZvY3k7XCJdLCBbMCwgXCImcGN5O1wiXSwgWzAsIFwiJnJjeTtcIl0sIFswLCBcIiZzY3k7XCJdLCBbMCwgXCImdGN5O1wiXSwgWzAsIFwiJnVjeTtcIl0sIFswLCBcIiZmY3k7XCJdLCBbMCwgXCIma2hjeTtcIl0sIFswLCBcIiZ0c2N5O1wiXSwgWzAsIFwiJmNoY3k7XCJdLCBbMCwgXCImc2hjeTtcIl0sIFswLCBcIiZzaGNoY3k7XCJdLCBbMCwgXCImaGFyZGN5O1wiXSwgWzAsIFwiJnljeTtcIl0sIFswLCBcIiZzb2Z0Y3k7XCJdLCBbMCwgXCImZWN5O1wiXSwgWzAsIFwiJnl1Y3k7XCJdLCBbMCwgXCImeWFjeTtcIl0sIFsxLCBcIiZpb2N5O1wiXSwgWzAsIFwiJmRqY3k7XCJdLCBbMCwgXCImZ2pjeTtcIl0sIFswLCBcIiZqdWtjeTtcIl0sIFswLCBcIiZkc2N5O1wiXSwgWzAsIFwiJml1a2N5O1wiXSwgWzAsIFwiJnlpY3k7XCJdLCBbMCwgXCImanNlcmN5O1wiXSwgWzAsIFwiJmxqY3k7XCJdLCBbMCwgXCImbmpjeTtcIl0sIFswLCBcIiZ0c2hjeTtcIl0sIFswLCBcIiZramN5O1wiXSwgWzEsIFwiJnVicmN5O1wiXSwgWzAsIFwiJmR6Y3k7XCJdLCBbNzA3NCwgXCImZW5zcDtcIl0sIFswLCBcIiZlbXNwO1wiXSwgWzAsIFwiJmVtc3AxMztcIl0sIFswLCBcIiZlbXNwMTQ7XCJdLCBbMSwgXCImbnVtc3A7XCJdLCBbMCwgXCImcHVuY3NwO1wiXSwgWzAsIFwiJlRoaW5TcGFjZTtcIl0sIFswLCBcIiZoYWlyc3A7XCJdLCBbMCwgXCImTmVnYXRpdmVNZWRpdW1TcGFjZTtcIl0sIFswLCBcIiZ6d25qO1wiXSwgWzAsIFwiJnp3ajtcIl0sIFswLCBcIiZscm07XCJdLCBbMCwgXCImcmxtO1wiXSwgWzAsIFwiJmRhc2g7XCJdLCBbMiwgXCImbmRhc2g7XCJdLCBbMCwgXCImbWRhc2g7XCJdLCBbMCwgXCImaG9yYmFyO1wiXSwgWzAsIFwiJlZlcmJhcjtcIl0sIFsxLCBcIiZsc3F1bztcIl0sIFswLCBcIiZDbG9zZUN1cmx5UXVvdGU7XCJdLCBbMCwgXCImbHNxdW9yO1wiXSwgWzEsIFwiJmxkcXVvO1wiXSwgWzAsIFwiJkNsb3NlQ3VybHlEb3VibGVRdW90ZTtcIl0sIFswLCBcIiZiZHF1bztcIl0sIFsxLCBcIiZkYWdnZXI7XCJdLCBbMCwgXCImRGFnZ2VyO1wiXSwgWzAsIFwiJmJ1bGw7XCJdLCBbMiwgXCImbmxkcjtcIl0sIFswLCBcIiZoZWxsaXA7XCJdLCBbOSwgXCImcGVybWlsO1wiXSwgWzAsIFwiJnBlcnRlbms7XCJdLCBbMCwgXCImcHJpbWU7XCJdLCBbMCwgXCImUHJpbWU7XCJdLCBbMCwgXCImdHByaW1lO1wiXSwgWzAsIFwiJmJhY2twcmltZTtcIl0sIFszLCBcIiZsc2FxdW87XCJdLCBbMCwgXCImcnNhcXVvO1wiXSwgWzMsIFwiJm9saW5lO1wiXSwgWzIsIFwiJmNhcmV0O1wiXSwgWzEsIFwiJmh5YnVsbDtcIl0sIFswLCBcIiZmcmFzbDtcIl0sIFsxMCwgXCImYnNlbWk7XCJdLCBbNywgXCImcXByaW1lO1wiXSwgWzcsIHsgdjogXCImTWVkaXVtU3BhY2U7XCIsIG46IDgyMDIsIG86IFwiJlRoaWNrU3BhY2U7XCIgfV0sIFswLCBcIiZOb0JyZWFrO1wiXSwgWzAsIFwiJmFmO1wiXSwgWzAsIFwiJkludmlzaWJsZVRpbWVzO1wiXSwgWzAsIFwiJmljO1wiXSwgWzcyLCBcIiZldXJvO1wiXSwgWzQ2LCBcIiZ0ZG90O1wiXSwgWzAsIFwiJkRvdERvdDtcIl0sIFszNywgXCImY29tcGxleGVzO1wiXSwgWzIsIFwiJmluY2FyZTtcIl0sIFs0LCBcIiZnc2NyO1wiXSwgWzAsIFwiJmhhbWlsdDtcIl0sIFswLCBcIiZIZnI7XCJdLCBbMCwgXCImSG9wZjtcIl0sIFswLCBcIiZwbGFuY2toO1wiXSwgWzAsIFwiJmhiYXI7XCJdLCBbMCwgXCImaW1hZ2xpbmU7XCJdLCBbMCwgXCImSWZyO1wiXSwgWzAsIFwiJmxhZ3JhbjtcIl0sIFswLCBcIiZlbGw7XCJdLCBbMSwgXCImbmF0dXJhbHM7XCJdLCBbMCwgXCImbnVtZXJvO1wiXSwgWzAsIFwiJmNvcHlzcjtcIl0sIFswLCBcIiZ3ZWllcnA7XCJdLCBbMCwgXCImUG9wZjtcIl0sIFswLCBcIiZRb3BmO1wiXSwgWzAsIFwiJnJlYWxpbmU7XCJdLCBbMCwgXCImcmVhbDtcIl0sIFswLCBcIiZyZWFscztcIl0sIFswLCBcIiZyeDtcIl0sIFszLCBcIiZ0cmFkZTtcIl0sIFsxLCBcIiZpbnRlZ2VycztcIl0sIFsyLCBcIiZtaG87XCJdLCBbMCwgXCImemVldHJmO1wiXSwgWzAsIFwiJmlpb3RhO1wiXSwgWzIsIFwiJmJlcm5vdTtcIl0sIFswLCBcIiZDYXlsZXlzO1wiXSwgWzEsIFwiJmVzY3I7XCJdLCBbMCwgXCImRXNjcjtcIl0sIFswLCBcIiZGb3VyaWVydHJmO1wiXSwgWzEsIFwiJk1lbGxpbnRyZjtcIl0sIFswLCBcIiZvcmRlcjtcIl0sIFswLCBcIiZhbGVmc3ltO1wiXSwgWzAsIFwiJmJldGg7XCJdLCBbMCwgXCImZ2ltZWw7XCJdLCBbMCwgXCImZGFsZXRoO1wiXSwgWzEyLCBcIiZDYXBpdGFsRGlmZmVyZW50aWFsRDtcIl0sIFswLCBcIiZkZDtcIl0sIFswLCBcIiZlZTtcIl0sIFswLCBcIiZpaTtcIl0sIFsxMCwgXCImZnJhYzEzO1wiXSwgWzAsIFwiJmZyYWMyMztcIl0sIFswLCBcIiZmcmFjMTU7XCJdLCBbMCwgXCImZnJhYzI1O1wiXSwgWzAsIFwiJmZyYWMzNTtcIl0sIFswLCBcIiZmcmFjNDU7XCJdLCBbMCwgXCImZnJhYzE2O1wiXSwgWzAsIFwiJmZyYWM1NjtcIl0sIFswLCBcIiZmcmFjMTg7XCJdLCBbMCwgXCImZnJhYzM4O1wiXSwgWzAsIFwiJmZyYWM1ODtcIl0sIFswLCBcIiZmcmFjNzg7XCJdLCBbNDksIFwiJmxhcnI7XCJdLCBbMCwgXCImU2hvcnRVcEFycm93O1wiXSwgWzAsIFwiJnJhcnI7XCJdLCBbMCwgXCImZGFycjtcIl0sIFswLCBcIiZoYXJyO1wiXSwgWzAsIFwiJnVwZG93bmFycm93O1wiXSwgWzAsIFwiJm53YXJyO1wiXSwgWzAsIFwiJm5lYXJyO1wiXSwgWzAsIFwiJkxvd2VyUmlnaHRBcnJvdztcIl0sIFswLCBcIiZMb3dlckxlZnRBcnJvdztcIl0sIFswLCBcIiZubGFycjtcIl0sIFswLCBcIiZucmFycjtcIl0sIFsxLCB7IHY6IFwiJnJhcnJ3O1wiLCBuOiA4MjQsIG86IFwiJm5yYXJydztcIiB9XSwgWzAsIFwiJkxhcnI7XCJdLCBbMCwgXCImVWFycjtcIl0sIFswLCBcIiZSYXJyO1wiXSwgWzAsIFwiJkRhcnI7XCJdLCBbMCwgXCImbGFycnRsO1wiXSwgWzAsIFwiJnJhcnJ0bDtcIl0sIFswLCBcIiZMZWZ0VGVlQXJyb3c7XCJdLCBbMCwgXCImbWFwc3RvdXA7XCJdLCBbMCwgXCImbWFwO1wiXSwgWzAsIFwiJkRvd25UZWVBcnJvdztcIl0sIFsxLCBcIiZob29rbGVmdGFycm93O1wiXSwgWzAsIFwiJmhvb2tyaWdodGFycm93O1wiXSwgWzAsIFwiJmxhcnJscDtcIl0sIFswLCBcIiZsb29wYXJyb3dyaWdodDtcIl0sIFswLCBcIiZoYXJydztcIl0sIFswLCBcIiZuaGFycjtcIl0sIFsxLCBcIiZsc2g7XCJdLCBbMCwgXCImcnNoO1wiXSwgWzAsIFwiJmxkc2g7XCJdLCBbMCwgXCImcmRzaDtcIl0sIFsxLCBcIiZjcmFycjtcIl0sIFswLCBcIiZjdWxhcnI7XCJdLCBbMCwgXCImY3VyYXJyO1wiXSwgWzIsIFwiJmNpcmNsZWFycm93bGVmdDtcIl0sIFswLCBcIiZjaXJjbGVhcnJvd3JpZ2h0O1wiXSwgWzAsIFwiJmxlZnRoYXJwb29udXA7XCJdLCBbMCwgXCImRG93bkxlZnRWZWN0b3I7XCJdLCBbMCwgXCImUmlnaHRVcFZlY3RvcjtcIl0sIFswLCBcIiZMZWZ0VXBWZWN0b3I7XCJdLCBbMCwgXCImcmhhcnU7XCJdLCBbMCwgXCImRG93blJpZ2h0VmVjdG9yO1wiXSwgWzAsIFwiJmRoYXJyO1wiXSwgWzAsIFwiJmRoYXJsO1wiXSwgWzAsIFwiJlJpZ2h0QXJyb3dMZWZ0QXJyb3c7XCJdLCBbMCwgXCImdWRhcnI7XCJdLCBbMCwgXCImTGVmdEFycm93UmlnaHRBcnJvdztcIl0sIFswLCBcIiZsZWZ0bGVmdGFycm93cztcIl0sIFswLCBcIiZ1cHVwYXJyb3dzO1wiXSwgWzAsIFwiJnJpZ2h0cmlnaHRhcnJvd3M7XCJdLCBbMCwgXCImZGRhcnI7XCJdLCBbMCwgXCImbGVmdHJpZ2h0aGFycG9vbnM7XCJdLCBbMCwgXCImRXF1aWxpYnJpdW07XCJdLCBbMCwgXCImbmxBcnI7XCJdLCBbMCwgXCImbmhBcnI7XCJdLCBbMCwgXCImbnJBcnI7XCJdLCBbMCwgXCImRG91YmxlTGVmdEFycm93O1wiXSwgWzAsIFwiJkRvdWJsZVVwQXJyb3c7XCJdLCBbMCwgXCImRG91YmxlUmlnaHRBcnJvdztcIl0sIFswLCBcIiZkQXJyO1wiXSwgWzAsIFwiJkRvdWJsZUxlZnRSaWdodEFycm93O1wiXSwgWzAsIFwiJkRvdWJsZVVwRG93bkFycm93O1wiXSwgWzAsIFwiJm53QXJyO1wiXSwgWzAsIFwiJm5lQXJyO1wiXSwgWzAsIFwiJnNlQXJyO1wiXSwgWzAsIFwiJnN3QXJyO1wiXSwgWzAsIFwiJmxBYXJyO1wiXSwgWzAsIFwiJnJBYXJyO1wiXSwgWzEsIFwiJnppZ3JhcnI7XCJdLCBbNiwgXCImbGFycmI7XCJdLCBbMCwgXCImcmFycmI7XCJdLCBbMTUsIFwiJkRvd25BcnJvd1VwQXJyb3c7XCJdLCBbNywgXCImbG9hcnI7XCJdLCBbMCwgXCImcm9hcnI7XCJdLCBbMCwgXCImaG9hcnI7XCJdLCBbMCwgXCImZm9yYWxsO1wiXSwgWzAsIFwiJmNvbXA7XCJdLCBbMCwgeyB2OiBcIiZwYXJ0O1wiLCBuOiA4MjQsIG86IFwiJm5wYXJ0O1wiIH1dLCBbMCwgXCImZXhpc3Q7XCJdLCBbMCwgXCImbmV4aXN0O1wiXSwgWzAsIFwiJmVtcHR5O1wiXSwgWzEsIFwiJkRlbDtcIl0sIFswLCBcIiZFbGVtZW50O1wiXSwgWzAsIFwiJk5vdEVsZW1lbnQ7XCJdLCBbMSwgXCImbmk7XCJdLCBbMCwgXCImbm90bmk7XCJdLCBbMiwgXCImcHJvZDtcIl0sIFswLCBcIiZjb3Byb2Q7XCJdLCBbMCwgXCImc3VtO1wiXSwgWzAsIFwiJm1pbnVzO1wiXSwgWzAsIFwiJk1pbnVzUGx1cztcIl0sIFswLCBcIiZkb3RwbHVzO1wiXSwgWzEsIFwiJkJhY2tzbGFzaDtcIl0sIFswLCBcIiZsb3dhc3Q7XCJdLCBbMCwgXCImY29tcGZuO1wiXSwgWzEsIFwiJnJhZGljO1wiXSwgWzIsIFwiJnByb3A7XCJdLCBbMCwgXCImaW5maW47XCJdLCBbMCwgXCImYW5ncnQ7XCJdLCBbMCwgeyB2OiBcIiZhbmc7XCIsIG46IDg0MDIsIG86IFwiJm5hbmc7XCIgfV0sIFswLCBcIiZhbmdtc2Q7XCJdLCBbMCwgXCImYW5nc3BoO1wiXSwgWzAsIFwiJm1pZDtcIl0sIFswLCBcIiZubWlkO1wiXSwgWzAsIFwiJkRvdWJsZVZlcnRpY2FsQmFyO1wiXSwgWzAsIFwiJk5vdERvdWJsZVZlcnRpY2FsQmFyO1wiXSwgWzAsIFwiJmFuZDtcIl0sIFswLCBcIiZvcjtcIl0sIFswLCB7IHY6IFwiJmNhcDtcIiwgbjogNjUwMjQsIG86IFwiJmNhcHM7XCIgfV0sIFswLCB7IHY6IFwiJmN1cDtcIiwgbjogNjUwMjQsIG86IFwiJmN1cHM7XCIgfV0sIFswLCBcIiZpbnQ7XCJdLCBbMCwgXCImSW50O1wiXSwgWzAsIFwiJmlpaW50O1wiXSwgWzAsIFwiJmNvbmludDtcIl0sIFswLCBcIiZDb25pbnQ7XCJdLCBbMCwgXCImQ2NvbmludDtcIl0sIFswLCBcIiZjd2ludDtcIl0sIFswLCBcIiZDbG9ja3dpc2VDb250b3VySW50ZWdyYWw7XCJdLCBbMCwgXCImYXdjb25pbnQ7XCJdLCBbMCwgXCImdGhlcmU0O1wiXSwgWzAsIFwiJmJlY2F1cztcIl0sIFswLCBcIiZyYXRpbztcIl0sIFswLCBcIiZDb2xvbjtcIl0sIFswLCBcIiZkb3RtaW51cztcIl0sIFsxLCBcIiZtRERvdDtcIl0sIFswLCBcIiZob210aHQ7XCJdLCBbMCwgeyB2OiBcIiZzaW07XCIsIG46IDg0MDIsIG86IFwiJm52c2ltO1wiIH1dLCBbMCwgeyB2OiBcIiZiYWNrc2ltO1wiLCBuOiA4MTcsIG86IFwiJnJhY2U7XCIgfV0sIFswLCB7IHY6IFwiJmFjO1wiLCBuOiA4MTksIG86IFwiJmFjRTtcIiB9XSwgWzAsIFwiJmFjZDtcIl0sIFswLCBcIiZWZXJ0aWNhbFRpbGRlO1wiXSwgWzAsIFwiJk5vdFRpbGRlO1wiXSwgWzAsIHsgdjogXCImZXFzaW07XCIsIG46IDgyNCwgbzogXCImbmVzaW07XCIgfV0sIFswLCBcIiZzaW1lO1wiXSwgWzAsIFwiJk5vdFRpbGRlRXF1YWw7XCJdLCBbMCwgXCImY29uZztcIl0sIFswLCBcIiZzaW1uZTtcIl0sIFswLCBcIiZuY29uZztcIl0sIFswLCBcIiZhcDtcIl0sIFswLCBcIiZuYXA7XCJdLCBbMCwgXCImYXBlO1wiXSwgWzAsIHsgdjogXCImYXBpZDtcIiwgbjogODI0LCBvOiBcIiZuYXBpZDtcIiB9XSwgWzAsIFwiJmJhY2tjb25nO1wiXSwgWzAsIHsgdjogXCImYXN5bXBlcTtcIiwgbjogODQwMiwgbzogXCImbnZhcDtcIiB9XSwgWzAsIHsgdjogXCImYnVtcDtcIiwgbjogODI0LCBvOiBcIiZuYnVtcDtcIiB9XSwgWzAsIHsgdjogXCImYnVtcGU7XCIsIG46IDgyNCwgbzogXCImbmJ1bXBlO1wiIH1dLCBbMCwgeyB2OiBcIiZkb3RlcTtcIiwgbjogODI0LCBvOiBcIiZuZWRvdDtcIiB9XSwgWzAsIFwiJmRvdGVxZG90O1wiXSwgWzAsIFwiJmVmRG90O1wiXSwgWzAsIFwiJmVyRG90O1wiXSwgWzAsIFwiJkFzc2lnbjtcIl0sIFswLCBcIiZlY29sb247XCJdLCBbMCwgXCImZWNpcjtcIl0sIFswLCBcIiZjaXJjZXE7XCJdLCBbMSwgXCImd2VkZ2VxO1wiXSwgWzAsIFwiJnZlZWVxO1wiXSwgWzEsIFwiJnRyaWFuZ2xlcTtcIl0sIFsyLCBcIiZlcXVlc3Q7XCJdLCBbMCwgXCImbmU7XCJdLCBbMCwgeyB2OiBcIiZDb25ncnVlbnQ7XCIsIG46IDg0MjEsIG86IFwiJmJuZXF1aXY7XCIgfV0sIFswLCBcIiZuZXF1aXY7XCJdLCBbMSwgeyB2OiBcIiZsZTtcIiwgbjogODQwMiwgbzogXCImbnZsZTtcIiB9XSwgWzAsIHsgdjogXCImZ2U7XCIsIG46IDg0MDIsIG86IFwiJm52Z2U7XCIgfV0sIFswLCB7IHY6IFwiJmxFO1wiLCBuOiA4MjQsIG86IFwiJm5sRTtcIiB9XSwgWzAsIHsgdjogXCImZ0U7XCIsIG46IDgyNCwgbzogXCImbmdFO1wiIH1dLCBbMCwgeyB2OiBcIiZsbkU7XCIsIG46IDY1MDI0LCBvOiBcIiZsdmVydG5lcXE7XCIgfV0sIFswLCB7IHY6IFwiJmduRTtcIiwgbjogNjUwMjQsIG86IFwiJmd2ZXJ0bmVxcTtcIiB9XSwgWzAsIHsgdjogXCImbGw7XCIsIG46IC8qICNfX1BVUkVfXyAqLyBuZXcgTWFwKC8qICNfX1BVUkVfXyAqLyByZXN0b3JlRGlmZihbWzgyNCwgXCImbkx0djtcIl0sIFs3NTc3LCBcIiZuTHQ7XCJdXSkpIH1dLCBbMCwgeyB2OiBcIiZnZztcIiwgbjogLyogI19fUFVSRV9fICovIG5ldyBNYXAoLyogI19fUFVSRV9fICovIHJlc3RvcmVEaWZmKFtbODI0LCBcIiZuR3R2O1wiXSwgWzc1NzcsIFwiJm5HdDtcIl1dKSkgfV0sIFswLCBcIiZiZXR3ZWVuO1wiXSwgWzAsIFwiJk5vdEN1cENhcDtcIl0sIFswLCBcIiZubGVzcztcIl0sIFswLCBcIiZuZ3Q7XCJdLCBbMCwgXCImbmxlO1wiXSwgWzAsIFwiJm5nZTtcIl0sIFswLCBcIiZsZXNzc2ltO1wiXSwgWzAsIFwiJkdyZWF0ZXJUaWxkZTtcIl0sIFswLCBcIiZubHNpbTtcIl0sIFswLCBcIiZuZ3NpbTtcIl0sIFswLCBcIiZMZXNzR3JlYXRlcjtcIl0sIFswLCBcIiZnbDtcIl0sIFswLCBcIiZOb3RMZXNzR3JlYXRlcjtcIl0sIFswLCBcIiZOb3RHcmVhdGVyTGVzcztcIl0sIFswLCBcIiZwcjtcIl0sIFswLCBcIiZzYztcIl0sIFswLCBcIiZwcmN1ZTtcIl0sIFswLCBcIiZzY2N1ZTtcIl0sIFswLCBcIiZQcmVjZWRlc1RpbGRlO1wiXSwgWzAsIHsgdjogXCImc2NzaW07XCIsIG46IDgyNCwgbzogXCImTm90U3VjY2VlZHNUaWxkZTtcIiB9XSwgWzAsIFwiJk5vdFByZWNlZGVzO1wiXSwgWzAsIFwiJk5vdFN1Y2NlZWRzO1wiXSwgWzAsIHsgdjogXCImc3ViO1wiLCBuOiA4NDAyLCBvOiBcIiZOb3RTdWJzZXQ7XCIgfV0sIFswLCB7IHY6IFwiJnN1cDtcIiwgbjogODQwMiwgbzogXCImTm90U3VwZXJzZXQ7XCIgfV0sIFswLCBcIiZuc3ViO1wiXSwgWzAsIFwiJm5zdXA7XCJdLCBbMCwgXCImc3ViZTtcIl0sIFswLCBcIiZzdXBlO1wiXSwgWzAsIFwiJk5vdFN1YnNldEVxdWFsO1wiXSwgWzAsIFwiJk5vdFN1cGVyc2V0RXF1YWw7XCJdLCBbMCwgeyB2OiBcIiZzdWJuZTtcIiwgbjogNjUwMjQsIG86IFwiJnZhcnN1YnNldG5lcTtcIiB9XSwgWzAsIHsgdjogXCImc3VwbmU7XCIsIG46IDY1MDI0LCBvOiBcIiZ2YXJzdXBzZXRuZXE7XCIgfV0sIFsxLCBcIiZjdXBkb3Q7XCJdLCBbMCwgXCImVW5pb25QbHVzO1wiXSwgWzAsIHsgdjogXCImc3FzdWI7XCIsIG46IDgyNCwgbzogXCImTm90U3F1YXJlU3Vic2V0O1wiIH1dLCBbMCwgeyB2OiBcIiZzcXN1cDtcIiwgbjogODI0LCBvOiBcIiZOb3RTcXVhcmVTdXBlcnNldDtcIiB9XSwgWzAsIFwiJnNxc3ViZTtcIl0sIFswLCBcIiZzcXN1cGU7XCJdLCBbMCwgeyB2OiBcIiZzcWNhcDtcIiwgbjogNjUwMjQsIG86IFwiJnNxY2FwcztcIiB9XSwgWzAsIHsgdjogXCImc3FjdXA7XCIsIG46IDY1MDI0LCBvOiBcIiZzcWN1cHM7XCIgfV0sIFswLCBcIiZDaXJjbGVQbHVzO1wiXSwgWzAsIFwiJkNpcmNsZU1pbnVzO1wiXSwgWzAsIFwiJkNpcmNsZVRpbWVzO1wiXSwgWzAsIFwiJm9zb2w7XCJdLCBbMCwgXCImQ2lyY2xlRG90O1wiXSwgWzAsIFwiJmNpcmNsZWRjaXJjO1wiXSwgWzAsIFwiJmNpcmNsZWRhc3Q7XCJdLCBbMSwgXCImY2lyY2xlZGRhc2g7XCJdLCBbMCwgXCImYm94cGx1cztcIl0sIFswLCBcIiZib3htaW51cztcIl0sIFswLCBcIiZib3h0aW1lcztcIl0sIFswLCBcIiZkb3RzcXVhcmU7XCJdLCBbMCwgXCImUmlnaHRUZWU7XCJdLCBbMCwgXCImZGFzaHY7XCJdLCBbMCwgXCImRG93blRlZTtcIl0sIFswLCBcIiZib3Q7XCJdLCBbMSwgXCImbW9kZWxzO1wiXSwgWzAsIFwiJkRvdWJsZVJpZ2h0VGVlO1wiXSwgWzAsIFwiJlZkYXNoO1wiXSwgWzAsIFwiJlZ2ZGFzaDtcIl0sIFswLCBcIiZWRGFzaDtcIl0sIFswLCBcIiZudmRhc2g7XCJdLCBbMCwgXCImbnZEYXNoO1wiXSwgWzAsIFwiJm5WZGFzaDtcIl0sIFswLCBcIiZuVkRhc2g7XCJdLCBbMCwgXCImcHJ1cmVsO1wiXSwgWzEsIFwiJkxlZnRUcmlhbmdsZTtcIl0sIFswLCBcIiZSaWdodFRyaWFuZ2xlO1wiXSwgWzAsIHsgdjogXCImTGVmdFRyaWFuZ2xlRXF1YWw7XCIsIG46IDg0MDIsIG86IFwiJm52bHRyaWU7XCIgfV0sIFswLCB7IHY6IFwiJlJpZ2h0VHJpYW5nbGVFcXVhbDtcIiwgbjogODQwMiwgbzogXCImbnZydHJpZTtcIiB9XSwgWzAsIFwiJm9yaWdvZjtcIl0sIFswLCBcIiZpbW9mO1wiXSwgWzAsIFwiJm11bHRpbWFwO1wiXSwgWzAsIFwiJmhlcmNvbjtcIl0sIFswLCBcIiZpbnRjYWw7XCJdLCBbMCwgXCImdmVlYmFyO1wiXSwgWzEsIFwiJmJhcnZlZTtcIl0sIFswLCBcIiZhbmdydHZiO1wiXSwgWzAsIFwiJmxydHJpO1wiXSwgWzAsIFwiJmJpZ3dlZGdlO1wiXSwgWzAsIFwiJmJpZ3ZlZTtcIl0sIFswLCBcIiZiaWdjYXA7XCJdLCBbMCwgXCImYmlnY3VwO1wiXSwgWzAsIFwiJmRpYW07XCJdLCBbMCwgXCImc2RvdDtcIl0sIFswLCBcIiZzc3RhcmY7XCJdLCBbMCwgXCImZGl2aWRlb250aW1lcztcIl0sIFswLCBcIiZib3d0aWU7XCJdLCBbMCwgXCImbHRpbWVzO1wiXSwgWzAsIFwiJnJ0aW1lcztcIl0sIFswLCBcIiZsZWZ0dGhyZWV0aW1lcztcIl0sIFswLCBcIiZyaWdodHRocmVldGltZXM7XCJdLCBbMCwgXCImYmFja3NpbWVxO1wiXSwgWzAsIFwiJmN1cmx5dmVlO1wiXSwgWzAsIFwiJmN1cmx5d2VkZ2U7XCJdLCBbMCwgXCImU3ViO1wiXSwgWzAsIFwiJlN1cDtcIl0sIFswLCBcIiZDYXA7XCJdLCBbMCwgXCImQ3VwO1wiXSwgWzAsIFwiJmZvcms7XCJdLCBbMCwgXCImZXBhcjtcIl0sIFswLCBcIiZsZXNzZG90O1wiXSwgWzAsIFwiJmd0ZG90O1wiXSwgWzAsIHsgdjogXCImTGw7XCIsIG46IDgyNCwgbzogXCImbkxsO1wiIH1dLCBbMCwgeyB2OiBcIiZHZztcIiwgbjogODI0LCBvOiBcIiZuR2c7XCIgfV0sIFswLCB7IHY6IFwiJmxlZztcIiwgbjogNjUwMjQsIG86IFwiJmxlc2c7XCIgfV0sIFswLCB7IHY6IFwiJmdlbDtcIiwgbjogNjUwMjQsIG86IFwiJmdlc2w7XCIgfV0sIFsyLCBcIiZjdWVwcjtcIl0sIFswLCBcIiZjdWVzYztcIl0sIFswLCBcIiZOb3RQcmVjZWRlc1NsYW50RXF1YWw7XCJdLCBbMCwgXCImTm90U3VjY2VlZHNTbGFudEVxdWFsO1wiXSwgWzAsIFwiJk5vdFNxdWFyZVN1YnNldEVxdWFsO1wiXSwgWzAsIFwiJk5vdFNxdWFyZVN1cGVyc2V0RXF1YWw7XCJdLCBbMiwgXCImbG5zaW07XCJdLCBbMCwgXCImZ25zaW07XCJdLCBbMCwgXCImcHJlY25zaW07XCJdLCBbMCwgXCImc2Nuc2ltO1wiXSwgWzAsIFwiJm5sdHJpO1wiXSwgWzAsIFwiJk5vdFJpZ2h0VHJpYW5nbGU7XCJdLCBbMCwgXCImbmx0cmllO1wiXSwgWzAsIFwiJk5vdFJpZ2h0VHJpYW5nbGVFcXVhbDtcIl0sIFswLCBcIiZ2ZWxsaXA7XCJdLCBbMCwgXCImY3Rkb3Q7XCJdLCBbMCwgXCImdXRkb3Q7XCJdLCBbMCwgXCImZHRkb3Q7XCJdLCBbMCwgXCImZGlzaW47XCJdLCBbMCwgXCImaXNpbnN2O1wiXSwgWzAsIFwiJmlzaW5zO1wiXSwgWzAsIHsgdjogXCImaXNpbmRvdDtcIiwgbjogODI0LCBvOiBcIiZub3RpbmRvdDtcIiB9XSwgWzAsIFwiJm5vdGludmM7XCJdLCBbMCwgXCImbm90aW52YjtcIl0sIFsxLCB7IHY6IFwiJmlzaW5FO1wiLCBuOiA4MjQsIG86IFwiJm5vdGluRTtcIiB9XSwgWzAsIFwiJm5pc2Q7XCJdLCBbMCwgXCImeG5pcztcIl0sIFswLCBcIiZuaXM7XCJdLCBbMCwgXCImbm90bml2YztcIl0sIFswLCBcIiZub3RuaXZiO1wiXSwgWzYsIFwiJmJhcndlZDtcIl0sIFswLCBcIiZCYXJ3ZWQ7XCJdLCBbMSwgXCImbGNlaWw7XCJdLCBbMCwgXCImcmNlaWw7XCJdLCBbMCwgXCImTGVmdEZsb29yO1wiXSwgWzAsIFwiJnJmbG9vcjtcIl0sIFswLCBcIiZkcmNyb3A7XCJdLCBbMCwgXCImZGxjcm9wO1wiXSwgWzAsIFwiJnVyY3JvcDtcIl0sIFswLCBcIiZ1bGNyb3A7XCJdLCBbMCwgXCImYm5vdDtcIl0sIFsxLCBcIiZwcm9mbGluZTtcIl0sIFswLCBcIiZwcm9mc3VyZjtcIl0sIFsxLCBcIiZ0ZWxyZWM7XCJdLCBbMCwgXCImdGFyZ2V0O1wiXSwgWzUsIFwiJnVsY29ybjtcIl0sIFswLCBcIiZ1cmNvcm47XCJdLCBbMCwgXCImZGxjb3JuO1wiXSwgWzAsIFwiJmRyY29ybjtcIl0sIFsyLCBcIiZmcm93bjtcIl0sIFswLCBcIiZzbWlsZTtcIl0sIFs5LCBcIiZjeWxjdHk7XCJdLCBbMCwgXCImcHJvZmFsYXI7XCJdLCBbNywgXCImdG9wYm90O1wiXSwgWzYsIFwiJm92YmFyO1wiXSwgWzEsIFwiJnNvbGJhcjtcIl0sIFs2MCwgXCImYW5nemFycjtcIl0sIFs1MSwgXCImbG1vdXN0YWNoZTtcIl0sIFswLCBcIiZybW91c3RhY2hlO1wiXSwgWzIsIFwiJk92ZXJCcmFja2V0O1wiXSwgWzAsIFwiJmJicms7XCJdLCBbMCwgXCImYmJya3Ricms7XCJdLCBbMzcsIFwiJk92ZXJQYXJlbnRoZXNpcztcIl0sIFswLCBcIiZVbmRlclBhcmVudGhlc2lzO1wiXSwgWzAsIFwiJk92ZXJCcmFjZTtcIl0sIFswLCBcIiZVbmRlckJyYWNlO1wiXSwgWzIsIFwiJnRycGV6aXVtO1wiXSwgWzQsIFwiJmVsaW50ZXJzO1wiXSwgWzU5LCBcIiZibGFuaztcIl0sIFsxNjQsIFwiJmNpcmNsZWRTO1wiXSwgWzU1LCBcIiZib3hoO1wiXSwgWzEsIFwiJmJveHY7XCJdLCBbOSwgXCImYm94ZHI7XCJdLCBbMywgXCImYm94ZGw7XCJdLCBbMywgXCImYm94dXI7XCJdLCBbMywgXCImYm94dWw7XCJdLCBbMywgXCImYm94dnI7XCJdLCBbNywgXCImYm94dmw7XCJdLCBbNywgXCImYm94aGQ7XCJdLCBbNywgXCImYm94aHU7XCJdLCBbNywgXCImYm94dmg7XCJdLCBbMTksIFwiJmJveEg7XCJdLCBbMCwgXCImYm94VjtcIl0sIFswLCBcIiZib3hkUjtcIl0sIFswLCBcIiZib3hEcjtcIl0sIFswLCBcIiZib3hEUjtcIl0sIFswLCBcIiZib3hkTDtcIl0sIFswLCBcIiZib3hEbDtcIl0sIFswLCBcIiZib3hETDtcIl0sIFswLCBcIiZib3h1UjtcIl0sIFswLCBcIiZib3hVcjtcIl0sIFswLCBcIiZib3hVUjtcIl0sIFswLCBcIiZib3h1TDtcIl0sIFswLCBcIiZib3hVbDtcIl0sIFswLCBcIiZib3hVTDtcIl0sIFswLCBcIiZib3h2UjtcIl0sIFswLCBcIiZib3hWcjtcIl0sIFswLCBcIiZib3hWUjtcIl0sIFswLCBcIiZib3h2TDtcIl0sIFswLCBcIiZib3hWbDtcIl0sIFswLCBcIiZib3hWTDtcIl0sIFswLCBcIiZib3hIZDtcIl0sIFswLCBcIiZib3hoRDtcIl0sIFswLCBcIiZib3hIRDtcIl0sIFswLCBcIiZib3hIdTtcIl0sIFswLCBcIiZib3hoVTtcIl0sIFswLCBcIiZib3hIVTtcIl0sIFswLCBcIiZib3h2SDtcIl0sIFswLCBcIiZib3hWaDtcIl0sIFswLCBcIiZib3hWSDtcIl0sIFsxOSwgXCImdWhibGs7XCJdLCBbMywgXCImbGhibGs7XCJdLCBbMywgXCImYmxvY2s7XCJdLCBbOCwgXCImYmxrMTQ7XCJdLCBbMCwgXCImYmxrMTI7XCJdLCBbMCwgXCImYmxrMzQ7XCJdLCBbMTMsIFwiJnNxdWFyZTtcIl0sIFs4LCBcIiZibGFja3NxdWFyZTtcIl0sIFswLCBcIiZFbXB0eVZlcnlTbWFsbFNxdWFyZTtcIl0sIFsxLCBcIiZyZWN0O1wiXSwgWzAsIFwiJm1hcmtlcjtcIl0sIFsyLCBcIiZmbHRucztcIl0sIFsxLCBcIiZiaWd0cmlhbmdsZXVwO1wiXSwgWzAsIFwiJmJsYWNrdHJpYW5nbGU7XCJdLCBbMCwgXCImdHJpYW5nbGU7XCJdLCBbMiwgXCImYmxhY2t0cmlhbmdsZXJpZ2h0O1wiXSwgWzAsIFwiJnJ0cmk7XCJdLCBbMywgXCImYmlndHJpYW5nbGVkb3duO1wiXSwgWzAsIFwiJmJsYWNrdHJpYW5nbGVkb3duO1wiXSwgWzAsIFwiJmR0cmk7XCJdLCBbMiwgXCImYmxhY2t0cmlhbmdsZWxlZnQ7XCJdLCBbMCwgXCImbHRyaTtcIl0sIFs2LCBcIiZsb3o7XCJdLCBbMCwgXCImY2lyO1wiXSwgWzMyLCBcIiZ0cmlkb3Q7XCJdLCBbMiwgXCImYmlnY2lyYztcIl0sIFs4LCBcIiZ1bHRyaTtcIl0sIFswLCBcIiZ1cnRyaTtcIl0sIFswLCBcIiZsbHRyaTtcIl0sIFswLCBcIiZFbXB0eVNtYWxsU3F1YXJlO1wiXSwgWzAsIFwiJkZpbGxlZFNtYWxsU3F1YXJlO1wiXSwgWzgsIFwiJmJpZ3N0YXI7XCJdLCBbMCwgXCImc3RhcjtcIl0sIFs3LCBcIiZwaG9uZTtcIl0sIFs0OSwgXCImZmVtYWxlO1wiXSwgWzEsIFwiJm1hbGU7XCJdLCBbMjksIFwiJnNwYWRlcztcIl0sIFsyLCBcIiZjbHVicztcIl0sIFsxLCBcIiZoZWFydHM7XCJdLCBbMCwgXCImZGlhbW9uZHN1aXQ7XCJdLCBbMywgXCImc3VuZztcIl0sIFsyLCBcIiZmbGF0O1wiXSwgWzAsIFwiJm5hdHVyYWw7XCJdLCBbMCwgXCImc2hhcnA7XCJdLCBbMTYzLCBcIiZjaGVjaztcIl0sIFszLCBcIiZjcm9zcztcIl0sIFs4LCBcIiZtYWx0O1wiXSwgWzIxLCBcIiZzZXh0O1wiXSwgWzMzLCBcIiZWZXJ0aWNhbFNlcGFyYXRvcjtcIl0sIFsyNSwgXCImbGJicms7XCJdLCBbMCwgXCImcmJicms7XCJdLCBbODQsIFwiJmJzb2xoc3ViO1wiXSwgWzAsIFwiJnN1cGhzb2w7XCJdLCBbMjgsIFwiJkxlZnREb3VibGVCcmFja2V0O1wiXSwgWzAsIFwiJlJpZ2h0RG91YmxlQnJhY2tldDtcIl0sIFswLCBcIiZsYW5nO1wiXSwgWzAsIFwiJnJhbmc7XCJdLCBbMCwgXCImTGFuZztcIl0sIFswLCBcIiZSYW5nO1wiXSwgWzAsIFwiJmxvYW5nO1wiXSwgWzAsIFwiJnJvYW5nO1wiXSwgWzcsIFwiJmxvbmdsZWZ0YXJyb3c7XCJdLCBbMCwgXCImbG9uZ3JpZ2h0YXJyb3c7XCJdLCBbMCwgXCImbG9uZ2xlZnRyaWdodGFycm93O1wiXSwgWzAsIFwiJkRvdWJsZUxvbmdMZWZ0QXJyb3c7XCJdLCBbMCwgXCImRG91YmxlTG9uZ1JpZ2h0QXJyb3c7XCJdLCBbMCwgXCImRG91YmxlTG9uZ0xlZnRSaWdodEFycm93O1wiXSwgWzEsIFwiJmxvbmdtYXBzdG87XCJdLCBbMiwgXCImZHppZ3JhcnI7XCJdLCBbMjU4LCBcIiZudmxBcnI7XCJdLCBbMCwgXCImbnZyQXJyO1wiXSwgWzAsIFwiJm52SGFycjtcIl0sIFswLCBcIiZNYXA7XCJdLCBbNiwgXCImbGJhcnI7XCJdLCBbMCwgXCImYmthcm93O1wiXSwgWzAsIFwiJmxCYXJyO1wiXSwgWzAsIFwiJmRia2Fyb3c7XCJdLCBbMCwgXCImZHJia2Fyb3c7XCJdLCBbMCwgXCImRERvdHJhaGQ7XCJdLCBbMCwgXCImVXBBcnJvd0JhcjtcIl0sIFswLCBcIiZEb3duQXJyb3dCYXI7XCJdLCBbMiwgXCImUmFycnRsO1wiXSwgWzIsIFwiJmxhdGFpbDtcIl0sIFswLCBcIiZyYXRhaWw7XCJdLCBbMCwgXCImbEF0YWlsO1wiXSwgWzAsIFwiJnJBdGFpbDtcIl0sIFswLCBcIiZsYXJyZnM7XCJdLCBbMCwgXCImcmFycmZzO1wiXSwgWzAsIFwiJmxhcnJiZnM7XCJdLCBbMCwgXCImcmFycmJmcztcIl0sIFsyLCBcIiZud2FyaGs7XCJdLCBbMCwgXCImbmVhcmhrO1wiXSwgWzAsIFwiJmhrc2Vhcm93O1wiXSwgWzAsIFwiJmhrc3dhcm93O1wiXSwgWzAsIFwiJm53bmVhcjtcIl0sIFswLCBcIiZuZXNlYXI7XCJdLCBbMCwgXCImc2Vzd2FyO1wiXSwgWzAsIFwiJnN3bndhcjtcIl0sIFs4LCB7IHY6IFwiJnJhcnJjO1wiLCBuOiA4MjQsIG86IFwiJm5yYXJyYztcIiB9XSwgWzEsIFwiJmN1ZGFycnI7XCJdLCBbMCwgXCImbGRjYTtcIl0sIFswLCBcIiZyZGNhO1wiXSwgWzAsIFwiJmN1ZGFycmw7XCJdLCBbMCwgXCImbGFycnBsO1wiXSwgWzIsIFwiJmN1cmFycm07XCJdLCBbMCwgXCImY3VsYXJycDtcIl0sIFs3LCBcIiZyYXJycGw7XCJdLCBbMiwgXCImaGFycmNpcjtcIl0sIFswLCBcIiZVYXJyb2NpcjtcIl0sIFswLCBcIiZsdXJkc2hhcjtcIl0sIFswLCBcIiZsZHJ1c2hhcjtcIl0sIFsyLCBcIiZMZWZ0UmlnaHRWZWN0b3I7XCJdLCBbMCwgXCImUmlnaHRVcERvd25WZWN0b3I7XCJdLCBbMCwgXCImRG93bkxlZnRSaWdodFZlY3RvcjtcIl0sIFswLCBcIiZMZWZ0VXBEb3duVmVjdG9yO1wiXSwgWzAsIFwiJkxlZnRWZWN0b3JCYXI7XCJdLCBbMCwgXCImUmlnaHRWZWN0b3JCYXI7XCJdLCBbMCwgXCImUmlnaHRVcFZlY3RvckJhcjtcIl0sIFswLCBcIiZSaWdodERvd25WZWN0b3JCYXI7XCJdLCBbMCwgXCImRG93bkxlZnRWZWN0b3JCYXI7XCJdLCBbMCwgXCImRG93blJpZ2h0VmVjdG9yQmFyO1wiXSwgWzAsIFwiJkxlZnRVcFZlY3RvckJhcjtcIl0sIFswLCBcIiZMZWZ0RG93blZlY3RvckJhcjtcIl0sIFswLCBcIiZMZWZ0VGVlVmVjdG9yO1wiXSwgWzAsIFwiJlJpZ2h0VGVlVmVjdG9yO1wiXSwgWzAsIFwiJlJpZ2h0VXBUZWVWZWN0b3I7XCJdLCBbMCwgXCImUmlnaHREb3duVGVlVmVjdG9yO1wiXSwgWzAsIFwiJkRvd25MZWZ0VGVlVmVjdG9yO1wiXSwgWzAsIFwiJkRvd25SaWdodFRlZVZlY3RvcjtcIl0sIFswLCBcIiZMZWZ0VXBUZWVWZWN0b3I7XCJdLCBbMCwgXCImTGVmdERvd25UZWVWZWN0b3I7XCJdLCBbMCwgXCImbEhhcjtcIl0sIFswLCBcIiZ1SGFyO1wiXSwgWzAsIFwiJnJIYXI7XCJdLCBbMCwgXCImZEhhcjtcIl0sIFswLCBcIiZsdXJ1aGFyO1wiXSwgWzAsIFwiJmxkcmRoYXI7XCJdLCBbMCwgXCImcnVsdWhhcjtcIl0sIFswLCBcIiZyZGxkaGFyO1wiXSwgWzAsIFwiJmxoYXJ1bDtcIl0sIFswLCBcIiZsbGhhcmQ7XCJdLCBbMCwgXCImcmhhcnVsO1wiXSwgWzAsIFwiJmxyaGFyZDtcIl0sIFswLCBcIiZ1ZGhhcjtcIl0sIFswLCBcIiZkdWhhcjtcIl0sIFswLCBcIiZSb3VuZEltcGxpZXM7XCJdLCBbMCwgXCImZXJhcnI7XCJdLCBbMCwgXCImc2ltcmFycjtcIl0sIFswLCBcIiZsYXJyc2ltO1wiXSwgWzAsIFwiJnJhcnJzaW07XCJdLCBbMCwgXCImcmFycmFwO1wiXSwgWzAsIFwiJmx0bGFycjtcIl0sIFsxLCBcIiZndHJhcnI7XCJdLCBbMCwgXCImc3VicmFycjtcIl0sIFsxLCBcIiZzdXBsYXJyO1wiXSwgWzAsIFwiJmxmaXNodDtcIl0sIFswLCBcIiZyZmlzaHQ7XCJdLCBbMCwgXCImdWZpc2h0O1wiXSwgWzAsIFwiJmRmaXNodDtcIl0sIFs1LCBcIiZsb3BhcjtcIl0sIFswLCBcIiZyb3BhcjtcIl0sIFs0LCBcIiZsYnJrZTtcIl0sIFswLCBcIiZyYnJrZTtcIl0sIFswLCBcIiZsYnJrc2x1O1wiXSwgWzAsIFwiJnJicmtzbGQ7XCJdLCBbMCwgXCImbGJya3NsZDtcIl0sIFswLCBcIiZyYnJrc2x1O1wiXSwgWzAsIFwiJmxhbmdkO1wiXSwgWzAsIFwiJnJhbmdkO1wiXSwgWzAsIFwiJmxwYXJsdDtcIl0sIFswLCBcIiZycGFyZ3Q7XCJdLCBbMCwgXCImZ3RsUGFyO1wiXSwgWzAsIFwiJmx0clBhcjtcIl0sIFszLCBcIiZ2emlnemFnO1wiXSwgWzEsIFwiJnZhbmdydDtcIl0sIFswLCBcIiZhbmdydHZiZDtcIl0sIFs2LCBcIiZhbmdlO1wiXSwgWzAsIFwiJnJhbmdlO1wiXSwgWzAsIFwiJmR3YW5nbGU7XCJdLCBbMCwgXCImdXdhbmdsZTtcIl0sIFswLCBcIiZhbmdtc2RhYTtcIl0sIFswLCBcIiZhbmdtc2RhYjtcIl0sIFswLCBcIiZhbmdtc2RhYztcIl0sIFswLCBcIiZhbmdtc2RhZDtcIl0sIFswLCBcIiZhbmdtc2RhZTtcIl0sIFswLCBcIiZhbmdtc2RhZjtcIl0sIFswLCBcIiZhbmdtc2RhZztcIl0sIFswLCBcIiZhbmdtc2RhaDtcIl0sIFswLCBcIiZiZW1wdHl2O1wiXSwgWzAsIFwiJmRlbXB0eXY7XCJdLCBbMCwgXCImY2VtcHR5djtcIl0sIFswLCBcIiZyYWVtcHR5djtcIl0sIFswLCBcIiZsYWVtcHR5djtcIl0sIFswLCBcIiZvaGJhcjtcIl0sIFswLCBcIiZvbWlkO1wiXSwgWzAsIFwiJm9wYXI7XCJdLCBbMSwgXCImb3BlcnA7XCJdLCBbMSwgXCImb2xjcm9zcztcIl0sIFswLCBcIiZvZHNvbGQ7XCJdLCBbMSwgXCImb2xjaXI7XCJdLCBbMCwgXCImb2ZjaXI7XCJdLCBbMCwgXCImb2x0O1wiXSwgWzAsIFwiJm9ndDtcIl0sIFswLCBcIiZjaXJzY2lyO1wiXSwgWzAsIFwiJmNpckU7XCJdLCBbMCwgXCImc29sYjtcIl0sIFswLCBcIiZic29sYjtcIl0sIFszLCBcIiZib3hib3g7XCJdLCBbMywgXCImdHJpc2I7XCJdLCBbMCwgXCImcnRyaWx0cmk7XCJdLCBbMCwgeyB2OiBcIiZMZWZ0VHJpYW5nbGVCYXI7XCIsIG46IDgyNCwgbzogXCImTm90TGVmdFRyaWFuZ2xlQmFyO1wiIH1dLCBbMCwgeyB2OiBcIiZSaWdodFRyaWFuZ2xlQmFyO1wiLCBuOiA4MjQsIG86IFwiJk5vdFJpZ2h0VHJpYW5nbGVCYXI7XCIgfV0sIFsxMSwgXCImaWluZmluO1wiXSwgWzAsIFwiJmluZmludGllO1wiXSwgWzAsIFwiJm52aW5maW47XCJdLCBbNCwgXCImZXBhcnNsO1wiXSwgWzAsIFwiJnNtZXBhcnNsO1wiXSwgWzAsIFwiJmVxdnBhcnNsO1wiXSwgWzUsIFwiJmJsYWNrbG96ZW5nZTtcIl0sIFs4LCBcIiZSdWxlRGVsYXllZDtcIl0sIFsxLCBcIiZkc29sO1wiXSwgWzksIFwiJmJpZ29kb3Q7XCJdLCBbMCwgXCImYmlnb3BsdXM7XCJdLCBbMCwgXCImYmlnb3RpbWVzO1wiXSwgWzEsIFwiJmJpZ3VwbHVzO1wiXSwgWzEsIFwiJmJpZ3NxY3VwO1wiXSwgWzUsIFwiJmlpaWludDtcIl0sIFswLCBcIiZmcGFydGludDtcIl0sIFsyLCBcIiZjaXJmbmludDtcIl0sIFswLCBcIiZhd2ludDtcIl0sIFswLCBcIiZycHBvbGludDtcIl0sIFswLCBcIiZzY3BvbGludDtcIl0sIFswLCBcIiZucG9saW50O1wiXSwgWzAsIFwiJnBvaW50aW50O1wiXSwgWzAsIFwiJnF1YXRpbnQ7XCJdLCBbMCwgXCImaW50bGFyaGs7XCJdLCBbMTAsIFwiJnBsdXNjaXI7XCJdLCBbMCwgXCImcGx1c2FjaXI7XCJdLCBbMCwgXCImc2ltcGx1cztcIl0sIFswLCBcIiZwbHVzZHU7XCJdLCBbMCwgXCImcGx1c3NpbTtcIl0sIFswLCBcIiZwbHVzdHdvO1wiXSwgWzEsIFwiJm1jb21tYTtcIl0sIFswLCBcIiZtaW51c2R1O1wiXSwgWzIsIFwiJmxvcGx1cztcIl0sIFswLCBcIiZyb3BsdXM7XCJdLCBbMCwgXCImQ3Jvc3M7XCJdLCBbMCwgXCImdGltZXNkO1wiXSwgWzAsIFwiJnRpbWVzYmFyO1wiXSwgWzEsIFwiJnNtYXNocDtcIl0sIFswLCBcIiZsb3RpbWVzO1wiXSwgWzAsIFwiJnJvdGltZXM7XCJdLCBbMCwgXCImb3RpbWVzYXM7XCJdLCBbMCwgXCImT3RpbWVzO1wiXSwgWzAsIFwiJm9kaXY7XCJdLCBbMCwgXCImdHJpcGx1cztcIl0sIFswLCBcIiZ0cmltaW51cztcIl0sIFswLCBcIiZ0cml0aW1lO1wiXSwgWzAsIFwiJmludHByb2Q7XCJdLCBbMiwgXCImYW1hbGc7XCJdLCBbMCwgXCImY2FwZG90O1wiXSwgWzEsIFwiJm5jdXA7XCJdLCBbMCwgXCImbmNhcDtcIl0sIFswLCBcIiZjYXBhbmQ7XCJdLCBbMCwgXCImY3Vwb3I7XCJdLCBbMCwgXCImY3VwY2FwO1wiXSwgWzAsIFwiJmNhcGN1cDtcIl0sIFswLCBcIiZjdXBicmNhcDtcIl0sIFswLCBcIiZjYXBicmN1cDtcIl0sIFswLCBcIiZjdXBjdXA7XCJdLCBbMCwgXCImY2FwY2FwO1wiXSwgWzAsIFwiJmNjdXBzO1wiXSwgWzAsIFwiJmNjYXBzO1wiXSwgWzIsIFwiJmNjdXBzc207XCJdLCBbMiwgXCImQW5kO1wiXSwgWzAsIFwiJk9yO1wiXSwgWzAsIFwiJmFuZGFuZDtcIl0sIFswLCBcIiZvcm9yO1wiXSwgWzAsIFwiJm9yc2xvcGU7XCJdLCBbMCwgXCImYW5kc2xvcGU7XCJdLCBbMSwgXCImYW5kdjtcIl0sIFswLCBcIiZvcnY7XCJdLCBbMCwgXCImYW5kZDtcIl0sIFswLCBcIiZvcmQ7XCJdLCBbMSwgXCImd2VkYmFyO1wiXSwgWzYsIFwiJnNkb3RlO1wiXSwgWzMsIFwiJnNpbWRvdDtcIl0sIFsyLCB7IHY6IFwiJmNvbmdkb3Q7XCIsIG46IDgyNCwgbzogXCImbmNvbmdkb3Q7XCIgfV0sIFswLCBcIiZlYXN0ZXI7XCJdLCBbMCwgXCImYXBhY2lyO1wiXSwgWzAsIHsgdjogXCImYXBFO1wiLCBuOiA4MjQsIG86IFwiJm5hcEU7XCIgfV0sIFswLCBcIiZlcGx1cztcIl0sIFswLCBcIiZwbHVzZTtcIl0sIFswLCBcIiZFc2ltO1wiXSwgWzAsIFwiJkNvbG9uZTtcIl0sIFswLCBcIiZFcXVhbDtcIl0sIFsxLCBcIiZkZG90c2VxO1wiXSwgWzAsIFwiJmVxdWl2REQ7XCJdLCBbMCwgXCImbHRjaXI7XCJdLCBbMCwgXCImZ3RjaXI7XCJdLCBbMCwgXCImbHRxdWVzdDtcIl0sIFswLCBcIiZndHF1ZXN0O1wiXSwgWzAsIHsgdjogXCImbGVxc2xhbnQ7XCIsIG46IDgyNCwgbzogXCImbmxlcXNsYW50O1wiIH1dLCBbMCwgeyB2OiBcIiZnZXFzbGFudDtcIiwgbjogODI0LCBvOiBcIiZuZ2Vxc2xhbnQ7XCIgfV0sIFswLCBcIiZsZXNkb3Q7XCJdLCBbMCwgXCImZ2VzZG90O1wiXSwgWzAsIFwiJmxlc2RvdG87XCJdLCBbMCwgXCImZ2VzZG90bztcIl0sIFswLCBcIiZsZXNkb3RvcjtcIl0sIFswLCBcIiZnZXNkb3RvbDtcIl0sIFswLCBcIiZsYXA7XCJdLCBbMCwgXCImZ2FwO1wiXSwgWzAsIFwiJmxuZTtcIl0sIFswLCBcIiZnbmU7XCJdLCBbMCwgXCImbG5hcDtcIl0sIFswLCBcIiZnbmFwO1wiXSwgWzAsIFwiJmxFZztcIl0sIFswLCBcIiZnRWw7XCJdLCBbMCwgXCImbHNpbWU7XCJdLCBbMCwgXCImZ3NpbWU7XCJdLCBbMCwgXCImbHNpbWc7XCJdLCBbMCwgXCImZ3NpbWw7XCJdLCBbMCwgXCImbGdFO1wiXSwgWzAsIFwiJmdsRTtcIl0sIFswLCBcIiZsZXNnZXM7XCJdLCBbMCwgXCImZ2VzbGVzO1wiXSwgWzAsIFwiJmVscztcIl0sIFswLCBcIiZlZ3M7XCJdLCBbMCwgXCImZWxzZG90O1wiXSwgWzAsIFwiJmVnc2RvdDtcIl0sIFswLCBcIiZlbDtcIl0sIFswLCBcIiZlZztcIl0sIFsyLCBcIiZzaW1sO1wiXSwgWzAsIFwiJnNpbWc7XCJdLCBbMCwgXCImc2ltbEU7XCJdLCBbMCwgXCImc2ltZ0U7XCJdLCBbMCwgeyB2OiBcIiZMZXNzTGVzcztcIiwgbjogODI0LCBvOiBcIiZOb3ROZXN0ZWRMZXNzTGVzcztcIiB9XSwgWzAsIHsgdjogXCImR3JlYXRlckdyZWF0ZXI7XCIsIG46IDgyNCwgbzogXCImTm90TmVzdGVkR3JlYXRlckdyZWF0ZXI7XCIgfV0sIFsxLCBcIiZnbGo7XCJdLCBbMCwgXCImZ2xhO1wiXSwgWzAsIFwiJmx0Y2M7XCJdLCBbMCwgXCImZ3RjYztcIl0sIFswLCBcIiZsZXNjYztcIl0sIFswLCBcIiZnZXNjYztcIl0sIFswLCBcIiZzbXQ7XCJdLCBbMCwgXCImbGF0O1wiXSwgWzAsIHsgdjogXCImc210ZTtcIiwgbjogNjUwMjQsIG86IFwiJnNtdGVzO1wiIH1dLCBbMCwgeyB2OiBcIiZsYXRlO1wiLCBuOiA2NTAyNCwgbzogXCImbGF0ZXM7XCIgfV0sIFswLCBcIiZidW1wRTtcIl0sIFswLCB7IHY6IFwiJlByZWNlZGVzRXF1YWw7XCIsIG46IDgyNCwgbzogXCImTm90UHJlY2VkZXNFcXVhbDtcIiB9XSwgWzAsIHsgdjogXCImc2NlO1wiLCBuOiA4MjQsIG86IFwiJk5vdFN1Y2NlZWRzRXF1YWw7XCIgfV0sIFsyLCBcIiZwckU7XCJdLCBbMCwgXCImc2NFO1wiXSwgWzAsIFwiJnByZWNuZXFxO1wiXSwgWzAsIFwiJnNjbkU7XCJdLCBbMCwgXCImcHJhcDtcIl0sIFswLCBcIiZzY2FwO1wiXSwgWzAsIFwiJnByZWNuYXBwcm94O1wiXSwgWzAsIFwiJnNjbmFwO1wiXSwgWzAsIFwiJlByO1wiXSwgWzAsIFwiJlNjO1wiXSwgWzAsIFwiJnN1YmRvdDtcIl0sIFswLCBcIiZzdXBkb3Q7XCJdLCBbMCwgXCImc3VicGx1cztcIl0sIFswLCBcIiZzdXBwbHVzO1wiXSwgWzAsIFwiJnN1Ym11bHQ7XCJdLCBbMCwgXCImc3VwbXVsdDtcIl0sIFswLCBcIiZzdWJlZG90O1wiXSwgWzAsIFwiJnN1cGVkb3Q7XCJdLCBbMCwgeyB2OiBcIiZzdWJFO1wiLCBuOiA4MjQsIG86IFwiJm5zdWJFO1wiIH1dLCBbMCwgeyB2OiBcIiZzdXBFO1wiLCBuOiA4MjQsIG86IFwiJm5zdXBFO1wiIH1dLCBbMCwgXCImc3Vic2ltO1wiXSwgWzAsIFwiJnN1cHNpbTtcIl0sIFsyLCB7IHY6IFwiJnN1Ym5FO1wiLCBuOiA2NTAyNCwgbzogXCImdmFyc3Vic2V0bmVxcTtcIiB9XSwgWzAsIHsgdjogXCImc3VwbkU7XCIsIG46IDY1MDI0LCBvOiBcIiZ2YXJzdXBzZXRuZXFxO1wiIH1dLCBbMiwgXCImY3N1YjtcIl0sIFswLCBcIiZjc3VwO1wiXSwgWzAsIFwiJmNzdWJlO1wiXSwgWzAsIFwiJmNzdXBlO1wiXSwgWzAsIFwiJnN1YnN1cDtcIl0sIFswLCBcIiZzdXBzdWI7XCJdLCBbMCwgXCImc3Vic3ViO1wiXSwgWzAsIFwiJnN1cHN1cDtcIl0sIFswLCBcIiZzdXBoc3ViO1wiXSwgWzAsIFwiJnN1cGRzdWI7XCJdLCBbMCwgXCImZm9ya3Y7XCJdLCBbMCwgXCImdG9wZm9yaztcIl0sIFswLCBcIiZtbGNwO1wiXSwgWzgsIFwiJkRhc2h2O1wiXSwgWzEsIFwiJlZkYXNobDtcIl0sIFswLCBcIiZCYXJ2O1wiXSwgWzAsIFwiJnZCYXI7XCJdLCBbMCwgXCImdkJhcnY7XCJdLCBbMSwgXCImVmJhcjtcIl0sIFswLCBcIiZOb3Q7XCJdLCBbMCwgXCImYk5vdDtcIl0sIFswLCBcIiZybm1pZDtcIl0sIFswLCBcIiZjaXJtaWQ7XCJdLCBbMCwgXCImbWlkY2lyO1wiXSwgWzAsIFwiJnRvcGNpcjtcIl0sIFswLCBcIiZuaHBhcjtcIl0sIFswLCBcIiZwYXJzaW07XCJdLCBbOSwgeyB2OiBcIiZwYXJzbDtcIiwgbjogODQyMSwgbzogXCImbnBhcnNsO1wiIH1dLCBbNDQzNDMsIHsgbjogLyogI19fUFVSRV9fICovIG5ldyBNYXAoLyogI19fUFVSRV9fICovIHJlc3RvcmVEaWZmKFtbNTY0NzYsIFwiJkFzY3I7XCJdLCBbMSwgXCImQ3NjcjtcIl0sIFswLCBcIiZEc2NyO1wiXSwgWzIsIFwiJkdzY3I7XCJdLCBbMiwgXCImSnNjcjtcIl0sIFswLCBcIiZLc2NyO1wiXSwgWzIsIFwiJk5zY3I7XCJdLCBbMCwgXCImT3NjcjtcIl0sIFswLCBcIiZQc2NyO1wiXSwgWzAsIFwiJlFzY3I7XCJdLCBbMSwgXCImU3NjcjtcIl0sIFswLCBcIiZUc2NyO1wiXSwgWzAsIFwiJlVzY3I7XCJdLCBbMCwgXCImVnNjcjtcIl0sIFswLCBcIiZXc2NyO1wiXSwgWzAsIFwiJlhzY3I7XCJdLCBbMCwgXCImWXNjcjtcIl0sIFswLCBcIiZac2NyO1wiXSwgWzAsIFwiJmFzY3I7XCJdLCBbMCwgXCImYnNjcjtcIl0sIFswLCBcIiZjc2NyO1wiXSwgWzAsIFwiJmRzY3I7XCJdLCBbMSwgXCImZnNjcjtcIl0sIFsxLCBcIiZoc2NyO1wiXSwgWzAsIFwiJmlzY3I7XCJdLCBbMCwgXCImanNjcjtcIl0sIFswLCBcIiZrc2NyO1wiXSwgWzAsIFwiJmxzY3I7XCJdLCBbMCwgXCImbXNjcjtcIl0sIFswLCBcIiZuc2NyO1wiXSwgWzEsIFwiJnBzY3I7XCJdLCBbMCwgXCImcXNjcjtcIl0sIFswLCBcIiZyc2NyO1wiXSwgWzAsIFwiJnNzY3I7XCJdLCBbMCwgXCImdHNjcjtcIl0sIFswLCBcIiZ1c2NyO1wiXSwgWzAsIFwiJnZzY3I7XCJdLCBbMCwgXCImd3NjcjtcIl0sIFswLCBcIiZ4c2NyO1wiXSwgWzAsIFwiJnlzY3I7XCJdLCBbMCwgXCImenNjcjtcIl0sIFs1MiwgXCImQWZyO1wiXSwgWzAsIFwiJkJmcjtcIl0sIFsxLCBcIiZEZnI7XCJdLCBbMCwgXCImRWZyO1wiXSwgWzAsIFwiJkZmcjtcIl0sIFswLCBcIiZHZnI7XCJdLCBbMiwgXCImSmZyO1wiXSwgWzAsIFwiJktmcjtcIl0sIFswLCBcIiZMZnI7XCJdLCBbMCwgXCImTWZyO1wiXSwgWzAsIFwiJk5mcjtcIl0sIFswLCBcIiZPZnI7XCJdLCBbMCwgXCImUGZyO1wiXSwgWzAsIFwiJlFmcjtcIl0sIFsxLCBcIiZTZnI7XCJdLCBbMCwgXCImVGZyO1wiXSwgWzAsIFwiJlVmcjtcIl0sIFswLCBcIiZWZnI7XCJdLCBbMCwgXCImV2ZyO1wiXSwgWzAsIFwiJlhmcjtcIl0sIFswLCBcIiZZZnI7XCJdLCBbMSwgXCImYWZyO1wiXSwgWzAsIFwiJmJmcjtcIl0sIFswLCBcIiZjZnI7XCJdLCBbMCwgXCImZGZyO1wiXSwgWzAsIFwiJmVmcjtcIl0sIFswLCBcIiZmZnI7XCJdLCBbMCwgXCImZ2ZyO1wiXSwgWzAsIFwiJmhmcjtcIl0sIFswLCBcIiZpZnI7XCJdLCBbMCwgXCImamZyO1wiXSwgWzAsIFwiJmtmcjtcIl0sIFswLCBcIiZsZnI7XCJdLCBbMCwgXCImbWZyO1wiXSwgWzAsIFwiJm5mcjtcIl0sIFswLCBcIiZvZnI7XCJdLCBbMCwgXCImcGZyO1wiXSwgWzAsIFwiJnFmcjtcIl0sIFswLCBcIiZyZnI7XCJdLCBbMCwgXCImc2ZyO1wiXSwgWzAsIFwiJnRmcjtcIl0sIFswLCBcIiZ1ZnI7XCJdLCBbMCwgXCImdmZyO1wiXSwgWzAsIFwiJndmcjtcIl0sIFswLCBcIiZ4ZnI7XCJdLCBbMCwgXCImeWZyO1wiXSwgWzAsIFwiJnpmcjtcIl0sIFswLCBcIiZBb3BmO1wiXSwgWzAsIFwiJkJvcGY7XCJdLCBbMSwgXCImRG9wZjtcIl0sIFswLCBcIiZFb3BmO1wiXSwgWzAsIFwiJkZvcGY7XCJdLCBbMCwgXCImR29wZjtcIl0sIFsxLCBcIiZJb3BmO1wiXSwgWzAsIFwiJkpvcGY7XCJdLCBbMCwgXCImS29wZjtcIl0sIFswLCBcIiZMb3BmO1wiXSwgWzAsIFwiJk1vcGY7XCJdLCBbMSwgXCImT29wZjtcIl0sIFszLCBcIiZTb3BmO1wiXSwgWzAsIFwiJlRvcGY7XCJdLCBbMCwgXCImVW9wZjtcIl0sIFswLCBcIiZWb3BmO1wiXSwgWzAsIFwiJldvcGY7XCJdLCBbMCwgXCImWG9wZjtcIl0sIFswLCBcIiZZb3BmO1wiXSwgWzEsIFwiJmFvcGY7XCJdLCBbMCwgXCImYm9wZjtcIl0sIFswLCBcIiZjb3BmO1wiXSwgWzAsIFwiJmRvcGY7XCJdLCBbMCwgXCImZW9wZjtcIl0sIFswLCBcIiZmb3BmO1wiXSwgWzAsIFwiJmdvcGY7XCJdLCBbMCwgXCImaG9wZjtcIl0sIFswLCBcIiZpb3BmO1wiXSwgWzAsIFwiJmpvcGY7XCJdLCBbMCwgXCIma29wZjtcIl0sIFswLCBcIiZsb3BmO1wiXSwgWzAsIFwiJm1vcGY7XCJdLCBbMCwgXCImbm9wZjtcIl0sIFswLCBcIiZvb3BmO1wiXSwgWzAsIFwiJnBvcGY7XCJdLCBbMCwgXCImcW9wZjtcIl0sIFswLCBcIiZyb3BmO1wiXSwgWzAsIFwiJnNvcGY7XCJdLCBbMCwgXCImdG9wZjtcIl0sIFswLCBcIiZ1b3BmO1wiXSwgWzAsIFwiJnZvcGY7XCJdLCBbMCwgXCImd29wZjtcIl0sIFswLCBcIiZ4b3BmO1wiXSwgWzAsIFwiJnlvcGY7XCJdLCBbMCwgXCImem9wZjtcIl1dKSkgfV0sIFs4OTA2LCBcIiZmZmxpZztcIl0sIFswLCBcIiZmaWxpZztcIl0sIFswLCBcIiZmbGxpZztcIl0sIFswLCBcIiZmZmlsaWc7XCJdLCBbMCwgXCImZmZsbGlnO1wiXV0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuY29kZS1odG1sLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/generated/encode-html.js\n");

/***/ }),

/***/ "./node_modules/entities/dist/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/entities/dist/esm/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DecodingMode: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.DecodingMode),\n/* harmony export */   EncodingMode: () => (/* binding */ EncodingMode),\n/* harmony export */   EntityDecoder: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.EntityDecoder),\n/* harmony export */   EntityLevel: () => (/* binding */ EntityLevel),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeHTML: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTML),\n/* harmony export */   decodeHTML4: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTML),\n/* harmony export */   decodeHTML4Strict: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTMLStrict),\n/* harmony export */   decodeHTML5: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTML),\n/* harmony export */   decodeHTML5Strict: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTMLStrict),\n/* harmony export */   decodeHTMLAttribute: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTMLAttribute),\n/* harmony export */   decodeHTMLStrict: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTMLStrict),\n/* harmony export */   decodeStrict: () => (/* binding */ decodeStrict),\n/* harmony export */   decodeXML: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeXML),\n/* harmony export */   decodeXMLStrict: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeXML),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeHTML: () => (/* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeHTML),\n/* harmony export */   encodeHTML4: () => (/* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeHTML),\n/* harmony export */   encodeHTML5: () => (/* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeHTML),\n/* harmony export */   encodeNonAsciiHTML: () => (/* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeNonAsciiHTML),\n/* harmony export */   encodeXML: () => (/* reexport safe */ _escape_js__WEBPACK_IMPORTED_MODULE_2__.encodeXML),\n/* harmony export */   escape: () => (/* reexport safe */ _escape_js__WEBPACK_IMPORTED_MODULE_2__.escape),\n/* harmony export */   escapeAttribute: () => (/* reexport safe */ _escape_js__WEBPACK_IMPORTED_MODULE_2__.escapeAttribute),\n/* harmony export */   escapeText: () => (/* reexport safe */ _escape_js__WEBPACK_IMPORTED_MODULE_2__.escapeText),\n/* harmony export */   escapeUTF8: () => (/* reexport safe */ _escape_js__WEBPACK_IMPORTED_MODULE_2__.escapeUTF8)\n/* harmony export */ });\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decode.js */ \"./node_modules/entities/dist/esm/decode.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encode.js */ \"./node_modules/entities/dist/esm/encode.js\");\n/* harmony import */ var _escape_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./escape.js */ \"./node_modules/entities/dist/esm/escape.js\");\n\n\n\n/** The level of entities to support. */\nvar EntityLevel;\n(function (EntityLevel) {\n    /** Support only XML entities. */\n    EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n    /** Support HTML entities, which are a superset of XML entities. */\n    EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\nvar EncodingMode;\n(function (EncodingMode) {\n    /**\n     * The output is UTF-8 encoded. Only characters that need escaping within\n     * XML will be escaped.\n     */\n    EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n    /**\n     * The output consists only of ASCII characters. Characters that need\n     * escaping within HTML, and characters that aren't ASCII characters will\n     * be escaped.\n     */\n    EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n    /**\n     * Encode all characters that have an equivalent entity, as well as all\n     * characters that are not ASCII characters.\n     */\n    EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n    /**\n     * Encode all characters that have to be escaped in HTML attributes,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n    /**\n     * Encode all characters that have to be escaped in HTML text,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param input String to decode.\n * @param options Decoding options.\n */\nfunction decode(input, options = EntityLevel.XML) {\n    const level = typeof options === \"number\" ? options : options.level;\n    if (level === EntityLevel.HTML) {\n        const mode = typeof options === \"object\" ? options.mode : undefined;\n        return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeHTML)(input, mode);\n    }\n    return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeXML)(input);\n}\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param input String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nfunction decodeStrict(input, options = EntityLevel.XML) {\n    var _a;\n    const normalizedOptions = typeof options === \"number\" ? { level: options } : options;\n    (_a = normalizedOptions.mode) !== null && _a !== void 0 ? _a : (normalizedOptions.mode = _decode_js__WEBPACK_IMPORTED_MODULE_0__.DecodingMode.Strict);\n    return decode(input, normalizedOptions);\n}\n/**\n * Encodes a string with entities.\n *\n * @param input String to encode.\n * @param options Encoding options.\n */\nfunction encode(input, options = EntityLevel.XML) {\n    const { mode = EncodingMode.Extensive, level = EntityLevel.XML } = typeof options === \"number\" ? { level: options } : options;\n    switch (mode) {\n        case EncodingMode.UTF8: {\n            return (0,_escape_js__WEBPACK_IMPORTED_MODULE_2__.escapeUTF8)(input);\n        }\n        case EncodingMode.Attribute: {\n            return (0,_escape_js__WEBPACK_IMPORTED_MODULE_2__.escapeAttribute)(input);\n        }\n        case EncodingMode.Text: {\n            return (0,_escape_js__WEBPACK_IMPORTED_MODULE_2__.escapeText)(input);\n        }\n        case EncodingMode.ASCII: {\n            return level === EntityLevel.HTML\n                ? (0,_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeNonAsciiHTML)(input)\n                : (0,_escape_js__WEBPACK_IMPORTED_MODULE_2__.encodeXML)(input);\n        }\n        // eslint-disable-next-line unicorn/no-useless-switch-case\n        case EncodingMode.Extensive:\n        default: {\n            return level === EntityLevel.HTML\n                ? (0,_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeHTML)(input)\n                : (0,_escape_js__WEBPACK_IMPORTED_MODULE_2__.encodeXML)(input);\n        }\n    }\n}\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrRTtBQUNMO0FBQ3FCO0FBQ2xGO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQ0FBa0M7QUFDNUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5RUFBeUU7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUVBQXlFO0FBQzNGO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQSxXQUFXLHFEQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsOERBQThELGlCQUFpQjtBQUMvRSw2RkFBNkYsb0RBQVk7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx5REFBeUQsa0NBQWtDLGlCQUFpQjtBQUN4SDtBQUNBO0FBQ0EsbUJBQW1CLHNEQUFVO0FBQzdCO0FBQ0E7QUFDQSxtQkFBbUIsMkRBQWU7QUFDbEM7QUFDQTtBQUNBLG1CQUFtQixzREFBVTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOERBQWtCO0FBQ3BDLGtCQUFrQixxREFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNEQUFVO0FBQzVCLGtCQUFrQixxREFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDMEY7QUFHZjtBQUc0RztBQUN2TCIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vaW5kZXguanM/OTI1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGVYTUwsIGRlY29kZUhUTUwsIERlY29kaW5nTW9kZSB9IGZyb20gXCIuL2RlY29kZS5qc1wiO1xuaW1wb3J0IHsgZW5jb2RlSFRNTCwgZW5jb2RlTm9uQXNjaWlIVE1MIH0gZnJvbSBcIi4vZW5jb2RlLmpzXCI7XG5pbXBvcnQgeyBlbmNvZGVYTUwsIGVzY2FwZVVURjgsIGVzY2FwZUF0dHJpYnV0ZSwgZXNjYXBlVGV4dCwgfSBmcm9tIFwiLi9lc2NhcGUuanNcIjtcbi8qKiBUaGUgbGV2ZWwgb2YgZW50aXRpZXMgdG8gc3VwcG9ydC4gKi9cbmV4cG9ydCB2YXIgRW50aXR5TGV2ZWw7XG4oZnVuY3Rpb24gKEVudGl0eUxldmVsKSB7XG4gICAgLyoqIFN1cHBvcnQgb25seSBYTUwgZW50aXRpZXMuICovXG4gICAgRW50aXR5TGV2ZWxbRW50aXR5TGV2ZWxbXCJYTUxcIl0gPSAwXSA9IFwiWE1MXCI7XG4gICAgLyoqIFN1cHBvcnQgSFRNTCBlbnRpdGllcywgd2hpY2ggYXJlIGEgc3VwZXJzZXQgb2YgWE1MIGVudGl0aWVzLiAqL1xuICAgIEVudGl0eUxldmVsW0VudGl0eUxldmVsW1wiSFRNTFwiXSA9IDFdID0gXCJIVE1MXCI7XG59KShFbnRpdHlMZXZlbCB8fCAoRW50aXR5TGV2ZWwgPSB7fSkpO1xuZXhwb3J0IHZhciBFbmNvZGluZ01vZGU7XG4oZnVuY3Rpb24gKEVuY29kaW5nTW9kZSkge1xuICAgIC8qKlxuICAgICAqIFRoZSBvdXRwdXQgaXMgVVRGLTggZW5jb2RlZC4gT25seSBjaGFyYWN0ZXJzIHRoYXQgbmVlZCBlc2NhcGluZyB3aXRoaW5cbiAgICAgKiBYTUwgd2lsbCBiZSBlc2NhcGVkLlxuICAgICAqL1xuICAgIEVuY29kaW5nTW9kZVtFbmNvZGluZ01vZGVbXCJVVEY4XCJdID0gMF0gPSBcIlVURjhcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgb3V0cHV0IGNvbnNpc3RzIG9ubHkgb2YgQVNDSUkgY2hhcmFjdGVycy4gQ2hhcmFjdGVycyB0aGF0IG5lZWRcbiAgICAgKiBlc2NhcGluZyB3aXRoaW4gSFRNTCwgYW5kIGNoYXJhY3RlcnMgdGhhdCBhcmVuJ3QgQVNDSUkgY2hhcmFjdGVycyB3aWxsXG4gICAgICogYmUgZXNjYXBlZC5cbiAgICAgKi9cbiAgICBFbmNvZGluZ01vZGVbRW5jb2RpbmdNb2RlW1wiQVNDSUlcIl0gPSAxXSA9IFwiQVNDSUlcIjtcbiAgICAvKipcbiAgICAgKiBFbmNvZGUgYWxsIGNoYXJhY3RlcnMgdGhhdCBoYXZlIGFuIGVxdWl2YWxlbnQgZW50aXR5LCBhcyB3ZWxsIGFzIGFsbFxuICAgICAqIGNoYXJhY3RlcnMgdGhhdCBhcmUgbm90IEFTQ0lJIGNoYXJhY3RlcnMuXG4gICAgICovXG4gICAgRW5jb2RpbmdNb2RlW0VuY29kaW5nTW9kZVtcIkV4dGVuc2l2ZVwiXSA9IDJdID0gXCJFeHRlbnNpdmVcIjtcbiAgICAvKipcbiAgICAgKiBFbmNvZGUgYWxsIGNoYXJhY3RlcnMgdGhhdCBoYXZlIHRvIGJlIGVzY2FwZWQgaW4gSFRNTCBhdHRyaWJ1dGVzLFxuICAgICAqIGZvbGxvd2luZyB7QGxpbmsgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvcGFyc2luZy5odG1sI2VzY2FwaW5nU3RyaW5nfS5cbiAgICAgKi9cbiAgICBFbmNvZGluZ01vZGVbRW5jb2RpbmdNb2RlW1wiQXR0cmlidXRlXCJdID0gM10gPSBcIkF0dHJpYnV0ZVwiO1xuICAgIC8qKlxuICAgICAqIEVuY29kZSBhbGwgY2hhcmFjdGVycyB0aGF0IGhhdmUgdG8gYmUgZXNjYXBlZCBpbiBIVE1MIHRleHQsXG4gICAgICogZm9sbG93aW5nIHtAbGluayBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9wYXJzaW5nLmh0bWwjZXNjYXBpbmdTdHJpbmd9LlxuICAgICAqL1xuICAgIEVuY29kaW5nTW9kZVtFbmNvZGluZ01vZGVbXCJUZXh0XCJdID0gNF0gPSBcIlRleHRcIjtcbn0pKEVuY29kaW5nTW9kZSB8fCAoRW5jb2RpbmdNb2RlID0ge30pKTtcbi8qKlxuICogRGVjb2RlcyBhIHN0cmluZyB3aXRoIGVudGl0aWVzLlxuICpcbiAqIEBwYXJhbSBpbnB1dCBTdHJpbmcgdG8gZGVjb2RlLlxuICogQHBhcmFtIG9wdGlvbnMgRGVjb2Rpbmcgb3B0aW9ucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShpbnB1dCwgb3B0aW9ucyA9IEVudGl0eUxldmVsLlhNTCkge1xuICAgIGNvbnN0IGxldmVsID0gdHlwZW9mIG9wdGlvbnMgPT09IFwibnVtYmVyXCIgPyBvcHRpb25zIDogb3B0aW9ucy5sZXZlbDtcbiAgICBpZiAobGV2ZWwgPT09IEVudGl0eUxldmVsLkhUTUwpIHtcbiAgICAgICAgY29uc3QgbW9kZSA9IHR5cGVvZiBvcHRpb25zID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5tb2RlIDogdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gZGVjb2RlSFRNTChpbnB1dCwgbW9kZSk7XG4gICAgfVxuICAgIHJldHVybiBkZWNvZGVYTUwoaW5wdXQpO1xufVxuLyoqXG4gKiBEZWNvZGVzIGEgc3RyaW5nIHdpdGggZW50aXRpZXMuIERvZXMgbm90IGFsbG93IG1pc3NpbmcgdHJhaWxpbmcgc2VtaWNvbG9ucyBmb3IgZW50aXRpZXMuXG4gKlxuICogQHBhcmFtIGlucHV0IFN0cmluZyB0byBkZWNvZGUuXG4gKiBAcGFyYW0gb3B0aW9ucyBEZWNvZGluZyBvcHRpb25zLlxuICogQGRlcHJlY2F0ZWQgVXNlIGBkZWNvZGVgIHdpdGggdGhlIGBtb2RlYCBzZXQgdG8gYFN0cmljdGAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpY3QoaW5wdXQsIG9wdGlvbnMgPSBFbnRpdHlMZXZlbC5YTUwpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgbm9ybWFsaXplZE9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJudW1iZXJcIiA/IHsgbGV2ZWw6IG9wdGlvbnMgfSA6IG9wdGlvbnM7XG4gICAgKF9hID0gbm9ybWFsaXplZE9wdGlvbnMubW9kZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKG5vcm1hbGl6ZWRPcHRpb25zLm1vZGUgPSBEZWNvZGluZ01vZGUuU3RyaWN0KTtcbiAgICByZXR1cm4gZGVjb2RlKGlucHV0LCBub3JtYWxpemVkT3B0aW9ucyk7XG59XG4vKipcbiAqIEVuY29kZXMgYSBzdHJpbmcgd2l0aCBlbnRpdGllcy5cbiAqXG4gKiBAcGFyYW0gaW5wdXQgU3RyaW5nIHRvIGVuY29kZS5cbiAqIEBwYXJhbSBvcHRpb25zIEVuY29kaW5nIG9wdGlvbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoaW5wdXQsIG9wdGlvbnMgPSBFbnRpdHlMZXZlbC5YTUwpIHtcbiAgICBjb25zdCB7IG1vZGUgPSBFbmNvZGluZ01vZGUuRXh0ZW5zaXZlLCBsZXZlbCA9IEVudGl0eUxldmVsLlhNTCB9ID0gdHlwZW9mIG9wdGlvbnMgPT09IFwibnVtYmVyXCIgPyB7IGxldmVsOiBvcHRpb25zIH0gOiBvcHRpb25zO1xuICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICBjYXNlIEVuY29kaW5nTW9kZS5VVEY4OiB7XG4gICAgICAgICAgICByZXR1cm4gZXNjYXBlVVRGOChpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBFbmNvZGluZ01vZGUuQXR0cmlidXRlOiB7XG4gICAgICAgICAgICByZXR1cm4gZXNjYXBlQXR0cmlidXRlKGlucHV0KTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIEVuY29kaW5nTW9kZS5UZXh0OiB7XG4gICAgICAgICAgICByZXR1cm4gZXNjYXBlVGV4dChpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBFbmNvZGluZ01vZGUuQVNDSUk6IHtcbiAgICAgICAgICAgIHJldHVybiBsZXZlbCA9PT0gRW50aXR5TGV2ZWwuSFRNTFxuICAgICAgICAgICAgICAgID8gZW5jb2RlTm9uQXNjaWlIVE1MKGlucHV0KVxuICAgICAgICAgICAgICAgIDogZW5jb2RlWE1MKGlucHV0KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9uby11c2VsZXNzLXN3aXRjaC1jYXNlXG4gICAgICAgIGNhc2UgRW5jb2RpbmdNb2RlLkV4dGVuc2l2ZTpcbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgcmV0dXJuIGxldmVsID09PSBFbnRpdHlMZXZlbC5IVE1MXG4gICAgICAgICAgICAgICAgPyBlbmNvZGVIVE1MKGlucHV0KVxuICAgICAgICAgICAgICAgIDogZW5jb2RlWE1MKGlucHV0KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCB7IGVuY29kZVhNTCwgZXNjYXBlLCBlc2NhcGVVVEY4LCBlc2NhcGVBdHRyaWJ1dGUsIGVzY2FwZVRleHQsIH0gZnJvbSBcIi4vZXNjYXBlLmpzXCI7XG5leHBvcnQgeyBlbmNvZGVIVE1MLCBlbmNvZGVOb25Bc2NpaUhUTUwsIFxuLy8gTGVnYWN5IGFsaWFzZXMgKGRlcHJlY2F0ZWQpXG5lbmNvZGVIVE1MIGFzIGVuY29kZUhUTUw0LCBlbmNvZGVIVE1MIGFzIGVuY29kZUhUTUw1LCB9IGZyb20gXCIuL2VuY29kZS5qc1wiO1xuZXhwb3J0IHsgRW50aXR5RGVjb2RlciwgRGVjb2RpbmdNb2RlLCBkZWNvZGVYTUwsIGRlY29kZUhUTUwsIGRlY29kZUhUTUxTdHJpY3QsIGRlY29kZUhUTUxBdHRyaWJ1dGUsIFxuLy8gTGVnYWN5IGFsaWFzZXMgKGRlcHJlY2F0ZWQpXG5kZWNvZGVIVE1MIGFzIGRlY29kZUhUTUw0LCBkZWNvZGVIVE1MIGFzIGRlY29kZUhUTUw1LCBkZWNvZGVIVE1MU3RyaWN0IGFzIGRlY29kZUhUTUw0U3RyaWN0LCBkZWNvZGVIVE1MU3RyaWN0IGFzIGRlY29kZUhUTUw1U3RyaWN0LCBkZWNvZGVYTUwgYXMgZGVjb2RlWE1MU3RyaWN0LCB9IGZyb20gXCIuL2RlY29kZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/entities/dist/esm/index.js\n");

/***/ }),

/***/ "./node_modules/howler/dist/howler.js":
/*!********************************************!*\
  !*** ./node_modules/howler/dist/howler.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (true) {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof __webpack_require__.g !== 'undefined') {\n    __webpack_require__.g.HowlerGlobal = HowlerGlobal;\n    __webpack_require__.g.Howler = Howler;\n    __webpack_require__.g.Howl = Howl;\n    __webpack_require__.g.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/howler/dist/howler.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_Symbol.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/_Symbol.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ \"./node_modules/lodash-es/_root.js\");\n\n\n/** Built-in value references. */\nvar Symbol = _root_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Symbol;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Symbol);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19TeW1ib2wuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEI7O0FBRTlCO0FBQ0EsYUFBYSxnREFBSTs7QUFFakIsaUVBQWUsTUFBTSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX1N5bWJvbC5qcz8yNzg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuZXhwb3J0IGRlZmF1bHQgU3ltYm9sO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_Symbol.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_arrayLikeKeys.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash-es/_arrayLikeKeys.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseTimes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_baseTimes.js */ \"./node_modules/lodash-es/_baseTimes.js\");\n/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isArguments.js */ \"./node_modules/lodash-es/isArguments.js\");\n/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray.js */ \"./node_modules/lodash-es/isArray.js\");\n/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isBuffer.js */ \"./node_modules/lodash-es/isBuffer.js\");\n/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_isIndex.js */ \"./node_modules/lodash-es/_isIndex.js\");\n/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isTypedArray.js */ \"./node_modules/lodash-es/isTypedArray.js\");\n\n\n\n\n\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = (0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value),\n      isArg = !isArr && (0,_isArguments_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value),\n      isBuff = !isArr && !isArg && (0,_isBuffer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value),\n      isType = !isArr && !isArg && !isBuff && (0,_isTypedArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? (0,_baseTimes_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           (0,_isIndex_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayLikeKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19hcnJheUxpa2VLZXlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0M7QUFDRztBQUNSO0FBQ0U7QUFDRDtBQUNTOztBQUU3QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLFNBQVM7QUFDcEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQSxjQUFjLHVEQUFPO0FBQ3JCLHdCQUF3QiwyREFBVztBQUNuQyxtQ0FBbUMsd0RBQVE7QUFDM0MsOENBQThDLDREQUFZO0FBQzFEO0FBQ0EsNkJBQTZCLHlEQUFTO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1REFBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsYUFBYSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2FycmF5TGlrZUtleXMuanM/YWU3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZVRpbWVzIGZyb20gJy4vX2Jhc2VUaW1lcy5qcyc7XG5pbXBvcnQgaXNBcmd1bWVudHMgZnJvbSAnLi9pc0FyZ3VtZW50cy5qcyc7XG5pbXBvcnQgaXNBcnJheSBmcm9tICcuL2lzQXJyYXkuanMnO1xuaW1wb3J0IGlzQnVmZmVyIGZyb20gJy4vaXNCdWZmZXIuanMnO1xuaW1wb3J0IGlzSW5kZXggZnJvbSAnLi9faXNJbmRleC5qcyc7XG5pbXBvcnQgaXNUeXBlZEFycmF5IGZyb20gJy4vaXNUeXBlZEFycmF5LmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtib29sZWFufSBpbmhlcml0ZWQgU3BlY2lmeSByZXR1cm5pbmcgaW5oZXJpdGVkIHByb3BlcnR5IG5hbWVzLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpLFxuICAgICAgaXNBcmcgPSAhaXNBcnIgJiYgaXNBcmd1bWVudHModmFsdWUpLFxuICAgICAgaXNCdWZmID0gIWlzQXJyICYmICFpc0FyZyAmJiBpc0J1ZmZlcih2YWx1ZSksXG4gICAgICBpc1R5cGUgPSAhaXNBcnIgJiYgIWlzQXJnICYmICFpc0J1ZmYgJiYgaXNUeXBlZEFycmF5KHZhbHVlKSxcbiAgICAgIHNraXBJbmRleGVzID0gaXNBcnIgfHwgaXNBcmcgfHwgaXNCdWZmIHx8IGlzVHlwZSxcbiAgICAgIHJlc3VsdCA9IHNraXBJbmRleGVzID8gYmFzZVRpbWVzKHZhbHVlLmxlbmd0aCwgU3RyaW5nKSA6IFtdLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAoKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJlxuICAgICAgICAhKHNraXBJbmRleGVzICYmIChcbiAgICAgICAgICAgLy8gU2FmYXJpIDkgaGFzIGVudW1lcmFibGUgYGFyZ3VtZW50cy5sZW5ndGhgIGluIHN0cmljdCBtb2RlLlxuICAgICAgICAgICBrZXkgPT0gJ2xlbmd0aCcgfHxcbiAgICAgICAgICAgLy8gTm9kZS5qcyAwLjEwIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIGJ1ZmZlcnMuXG4gICAgICAgICAgIChpc0J1ZmYgJiYgKGtleSA9PSAnb2Zmc2V0JyB8fCBrZXkgPT0gJ3BhcmVudCcpKSB8fFxuICAgICAgICAgICAvLyBQaGFudG9tSlMgMiBoYXMgZW51bWVyYWJsZSBub24taW5kZXggcHJvcGVydGllcyBvbiB0eXBlZCBhcnJheXMuXG4gICAgICAgICAgIChpc1R5cGUgJiYgKGtleSA9PSAnYnVmZmVyJyB8fCBrZXkgPT0gJ2J5dGVMZW5ndGgnIHx8IGtleSA9PSAnYnl0ZU9mZnNldCcpKSB8fFxuICAgICAgICAgICAvLyBTa2lwIGluZGV4IHByb3BlcnRpZXMuXG4gICAgICAgICAgIGlzSW5kZXgoa2V5LCBsZW5ndGgpXG4gICAgICAgICkpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBhcnJheUxpa2VLZXlzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_arrayLikeKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_arrayMap.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_arrayMap.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayMap);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19hcnJheU1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFVBQVU7QUFDckIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYXJyYXlNYXAuanM/NTI0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5tYXBgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZVxuICogc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYXJyYXlNYXAoYXJyYXksIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGgsXG4gICAgICByZXN1bHQgPSBBcnJheShsZW5ndGgpO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBhcnJheU1hcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_arrayMap.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_arrayShuffle.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash-es/_arrayShuffle.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_copyArray.js */ \"./node_modules/lodash-es/_copyArray.js\");\n/* harmony import */ var _shuffleSelf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_shuffleSelf.js */ \"./node_modules/lodash-es/_shuffleSelf.js\");\n\n\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return (0,_shuffleSelf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_copyArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(array));\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrayShuffle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19hcnJheVNodWZmbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDO0FBQ0k7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0EsU0FBUywyREFBVyxDQUFDLHlEQUFTO0FBQzlCOztBQUVBLGlFQUFlLFlBQVksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19hcnJheVNodWZmbGUuanM/OTM5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29weUFycmF5IGZyb20gJy4vX2NvcHlBcnJheS5qcyc7XG5pbXBvcnQgc2h1ZmZsZVNlbGYgZnJvbSAnLi9fc2h1ZmZsZVNlbGYuanMnO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5zaHVmZmxlYCBmb3IgYXJyYXlzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gc2h1ZmZsZS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IHNodWZmbGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBhcnJheVNodWZmbGUoYXJyYXkpIHtcbiAgcmV0dXJuIHNodWZmbGVTZWxmKGNvcHlBcnJheShhcnJheSkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBhcnJheVNodWZmbGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_arrayShuffle.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseGetTag.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_baseGetTag.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ \"./node_modules/lodash-es/_Symbol.js\");\n/* harmony import */ var _getRawTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_getRawTag.js */ \"./node_modules/lodash-es/_getRawTag.js\");\n/* harmony import */ var _objectToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_objectToString.js */ \"./node_modules/lodash-es/_objectToString.js\");\n\n\n\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? (0,_getRawTag_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value)\n    : (0,_objectToString_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseGetTag);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlR2V0VGFnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0M7QUFDTTtBQUNVOztBQUVsRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsa0RBQU0sR0FBRyxrREFBTTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx5REFBUztBQUNmLE1BQU0sOERBQWM7QUFDcEI7O0FBRUEsaUVBQWUsVUFBVSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VHZXRUYWcuanM/ODlkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ltYm9sIGZyb20gJy4vX1N5bWJvbC5qcyc7XG5pbXBvcnQgZ2V0UmF3VGFnIGZyb20gJy4vX2dldFJhd1RhZy5qcyc7XG5pbXBvcnQgb2JqZWN0VG9TdHJpbmcgZnJvbSAnLi9fb2JqZWN0VG9TdHJpbmcuanMnO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgbnVsbFRhZyA9ICdbb2JqZWN0IE51bGxdJyxcbiAgICB1bmRlZmluZWRUYWcgPSAnW29iamVjdCBVbmRlZmluZWRdJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3ltVG9TdHJpbmdUYWcgPSBTeW1ib2wgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldFRhZ2Agd2l0aG91dCBmYWxsYmFja3MgZm9yIGJ1Z2d5IGVudmlyb25tZW50cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0VGFnKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWRUYWcgOiBudWxsVGFnO1xuICB9XG4gIHJldHVybiAoc3ltVG9TdHJpbmdUYWcgJiYgc3ltVG9TdHJpbmdUYWcgaW4gT2JqZWN0KHZhbHVlKSlcbiAgICA/IGdldFJhd1RhZyh2YWx1ZSlcbiAgICA6IG9iamVjdFRvU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUdldFRhZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseGetTag.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseIsArguments.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsArguments.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseGetTag.js */ \"./node_modules/lodash-es/_baseGetTag.js\");\n/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObjectLike.js */ \"./node_modules/lodash-es/isObjectLike.js\");\n\n\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return (0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value) && (0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value) == argsTag;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsArguments);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlSXNBcmd1bWVudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ0c7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLFNBQVMsNERBQVksV0FBVywwREFBVTtBQUMxQzs7QUFFQSxpRUFBZSxlQUFlLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUlzQXJndW1lbnRzLmpzPzQ3ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2VHZXRUYWcgZnJvbSAnLi9fYmFzZUdldFRhZy5qcyc7XG5pbXBvcnQgaXNPYmplY3RMaWtlIGZyb20gJy4vaXNPYmplY3RMaWtlLmpzJztcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJztcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0FyZ3VtZW50c2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICovXG5mdW5jdGlvbiBiYXNlSXNBcmd1bWVudHModmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gYXJnc1RhZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUlzQXJndW1lbnRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseIsArguments.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseIsTypedArray.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash-es/_baseIsTypedArray.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseGetTag.js */ \"./node_modules/lodash-es/_baseGetTag.js\");\n/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isLength.js */ \"./node_modules/lodash-es/isLength.js\");\n/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObjectLike.js */ \"./node_modules/lodash-es/isObjectLike.js\");\n\n\n\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return (0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value) &&\n    (0,_isLength_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value.length) && !!typedArrayTags[(0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value)];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseIsTypedArray);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlSXNUeXBlZEFycmF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDTDtBQUNROztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxTQUFTLDREQUFZO0FBQ3JCLElBQUksd0RBQVEsbUNBQW1DLDBEQUFVO0FBQ3pEOztBQUVBLGlFQUFlLGdCQUFnQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VJc1R5cGVkQXJyYXkuanM/YzYzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCBpc0xlbmd0aCBmcm9tICcuL2lzTGVuZ3RoLmpzJztcbmltcG9ydCBpc09iamVjdExpa2UgZnJvbSAnLi9pc09iamVjdExpa2UuanMnO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXJnc1RhZyA9ICdbb2JqZWN0IEFyZ3VtZW50c10nLFxuICAgIGFycmF5VGFnID0gJ1tvYmplY3QgQXJyYXldJyxcbiAgICBib29sVGFnID0gJ1tvYmplY3QgQm9vbGVhbl0nLFxuICAgIGRhdGVUYWcgPSAnW29iamVjdCBEYXRlXScsXG4gICAgZXJyb3JUYWcgPSAnW29iamVjdCBFcnJvcl0nLFxuICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgIHJlZ2V4cFRhZyA9ICdbb2JqZWN0IFJlZ0V4cF0nLFxuICAgIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nLFxuICAgIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nLFxuICAgIHdlYWtNYXBUYWcgPSAnW29iamVjdCBXZWFrTWFwXSc7XG5cbnZhciBhcnJheUJ1ZmZlclRhZyA9ICdbb2JqZWN0IEFycmF5QnVmZmVyXScsXG4gICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nLFxuICAgIGZsb2F0MzJUYWcgPSAnW29iamVjdCBGbG9hdDMyQXJyYXldJyxcbiAgICBmbG9hdDY0VGFnID0gJ1tvYmplY3QgRmxvYXQ2NEFycmF5XScsXG4gICAgaW50OFRhZyA9ICdbb2JqZWN0IEludDhBcnJheV0nLFxuICAgIGludDE2VGFnID0gJ1tvYmplY3QgSW50MTZBcnJheV0nLFxuICAgIGludDMyVGFnID0gJ1tvYmplY3QgSW50MzJBcnJheV0nLFxuICAgIHVpbnQ4VGFnID0gJ1tvYmplY3QgVWludDhBcnJheV0nLFxuICAgIHVpbnQ4Q2xhbXBlZFRhZyA9ICdbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XScsXG4gICAgdWludDE2VGFnID0gJ1tvYmplY3QgVWludDE2QXJyYXldJyxcbiAgICB1aW50MzJUYWcgPSAnW29iamVjdCBVaW50MzJBcnJheV0nO1xuXG4vKiogVXNlZCB0byBpZGVudGlmeSBgdG9TdHJpbmdUYWdgIHZhbHVlcyBvZiB0eXBlZCBhcnJheXMuICovXG52YXIgdHlwZWRBcnJheVRhZ3MgPSB7fTtcbnR5cGVkQXJyYXlUYWdzW2Zsb2F0MzJUYWddID0gdHlwZWRBcnJheVRhZ3NbZmxvYXQ2NFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbaW50OFRhZ10gPSB0eXBlZEFycmF5VGFnc1tpbnQxNlRhZ10gPVxudHlwZWRBcnJheVRhZ3NbaW50MzJUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDhUYWddID1cbnR5cGVkQXJyYXlUYWdzW3VpbnQ4Q2xhbXBlZFRhZ10gPSB0eXBlZEFycmF5VGFnc1t1aW50MTZUYWddID1cbnR5cGVkQXJyYXlUYWdzW3VpbnQzMlRhZ10gPSB0cnVlO1xudHlwZWRBcnJheVRhZ3NbYXJnc1RhZ10gPSB0eXBlZEFycmF5VGFnc1thcnJheVRhZ10gPVxudHlwZWRBcnJheVRhZ3NbYXJyYXlCdWZmZXJUYWddID0gdHlwZWRBcnJheVRhZ3NbYm9vbFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbZGF0YVZpZXdUYWddID0gdHlwZWRBcnJheVRhZ3NbZGF0ZVRhZ10gPVxudHlwZWRBcnJheVRhZ3NbZXJyb3JUYWddID0gdHlwZWRBcnJheVRhZ3NbZnVuY1RhZ10gPVxudHlwZWRBcnJheVRhZ3NbbWFwVGFnXSA9IHR5cGVkQXJyYXlUYWdzW251bWJlclRhZ10gPVxudHlwZWRBcnJheVRhZ3Nbb2JqZWN0VGFnXSA9IHR5cGVkQXJyYXlUYWdzW3JlZ2V4cFRhZ10gPVxudHlwZWRBcnJheVRhZ3Nbc2V0VGFnXSA9IHR5cGVkQXJyYXlUYWdzW3N0cmluZ1RhZ10gPVxudHlwZWRBcnJheVRhZ3Nbd2Vha01hcFRhZ10gPSBmYWxzZTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc1R5cGVkQXJyYXlgIHdpdGhvdXQgTm9kZS5qcyBvcHRpbWl6YXRpb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzVHlwZWRBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJlxuICAgIGlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkgJiYgISF0eXBlZEFycmF5VGFnc1tiYXNlR2V0VGFnKHZhbHVlKV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VJc1R5cGVkQXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseIsTypedArray.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseKeys.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_baseKeys.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _isPrototype_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_isPrototype.js */ \"./node_modules/lodash-es/_isPrototype.js\");\n/* harmony import */ var _nativeKeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_nativeKeys.js */ \"./node_modules/lodash-es/_nativeKeys.js\");\n\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!(0,_isPrototype_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(object)) {\n    return (0,_nativeKeys_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlS2V5cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDRjs7QUFFMUM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0EsT0FBTywyREFBVztBQUNsQixXQUFXLDBEQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUtleXMuanM/ODEwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaXNQcm90b3R5cGUgZnJvbSAnLi9faXNQcm90b3R5cGUuanMnO1xuaW1wb3J0IG5hdGl2ZUtleXMgZnJvbSAnLi9fbmF0aXZlS2V5cy5qcyc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ua2V5c2Agd2hpY2ggZG9lc24ndCB0cmVhdCBzcGFyc2UgYXJyYXlzIGFzIGRlbnNlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICovXG5mdW5jdGlvbiBiYXNlS2V5cyhvYmplY3QpIHtcbiAgaWYgKCFpc1Byb3RvdHlwZShvYmplY3QpKSB7XG4gICAgcmV0dXJuIG5hdGl2ZUtleXMob2JqZWN0KTtcbiAgfVxuICB2YXIgcmVzdWx0ID0gW107XG4gIGZvciAodmFyIGtleSBpbiBPYmplY3Qob2JqZWN0KSkge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSAmJiBrZXkgIT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseRandom.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_baseRandom.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseRandom);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlUmFuZG9tLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlUmFuZG9tLmpzP2Y3ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUZsb29yID0gTWF0aC5mbG9vcixcbiAgICBuYXRpdmVSYW5kb20gPSBNYXRoLnJhbmRvbTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5yYW5kb21gIHdpdGhvdXQgc3VwcG9ydCBmb3IgcmV0dXJuaW5nXG4gKiBmbG9hdGluZy1wb2ludCBudW1iZXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gbG93ZXIgVGhlIGxvd2VyIGJvdW5kLlxuICogQHBhcmFtIHtudW1iZXJ9IHVwcGVyIFRoZSB1cHBlciBib3VuZC5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIHJhbmRvbSBudW1iZXIuXG4gKi9cbmZ1bmN0aW9uIGJhc2VSYW5kb20obG93ZXIsIHVwcGVyKSB7XG4gIHJldHVybiBsb3dlciArIG5hdGl2ZUZsb29yKG5hdGl2ZVJhbmRvbSgpICogKHVwcGVyIC0gbG93ZXIgKyAxKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VSYW5kb207XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseRandom.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseShuffle.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_baseShuffle.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _shuffleSelf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_shuffleSelf.js */ \"./node_modules/lodash-es/_shuffleSelf.js\");\n/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./values.js */ \"./node_modules/lodash-es/values.js\");\n\n\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return (0,_shuffleSelf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_values_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(collection));\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseShuffle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlU2h1ZmZsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDWDs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQSxTQUFTLDJEQUFXLENBQUMsc0RBQU07QUFDM0I7O0FBRUEsaUVBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VTaHVmZmxlLmpzPzRmZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNodWZmbGVTZWxmIGZyb20gJy4vX3NodWZmbGVTZWxmLmpzJztcbmltcG9ydCB2YWx1ZXMgZnJvbSAnLi92YWx1ZXMuanMnO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnNodWZmbGVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBzaHVmZmxlLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgc2h1ZmZsZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGJhc2VTaHVmZmxlKGNvbGxlY3Rpb24pIHtcbiAgcmV0dXJuIHNodWZmbGVTZWxmKHZhbHVlcyhjb2xsZWN0aW9uKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VTaHVmZmxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseShuffle.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseTimes.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_baseTimes.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseTimes);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlVGltZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLFNBQVMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlVGltZXMuanM/MDYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnRpbWVzYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHNcbiAqIG9yIG1heCBhcnJheSBsZW5ndGggY2hlY2tzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIGludm9rZSBgaXRlcmF0ZWVgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcmVzdWx0cy5cbiAqL1xuZnVuY3Rpb24gYmFzZVRpbWVzKG4sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobik7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBuKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGluZGV4KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlVGltZXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseTimes.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseUnary.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_baseUnary.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseUnary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlVW5hcnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsU0FBUyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VVbmFyeS5qcz9lNzUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udW5hcnlgIHdpdGhvdXQgc3VwcG9ydCBmb3Igc3RvcmluZyBtZXRhZGF0YS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2FwIGFyZ3VtZW50cyBmb3IuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBjYXBwZWQgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGJhc2VVbmFyeShmdW5jKSB7XG4gIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBmdW5jKHZhbHVlKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZVVuYXJ5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseUnary.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseValues.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_baseValues.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_arrayMap.js */ \"./node_modules/lodash-es/_arrayMap.js\");\n\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return (0,_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(props, function(key) {\n    return object[key];\n  });\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseValues);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlVmFsdWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDOztBQUV0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsU0FBUyx3REFBUTtBQUNqQjtBQUNBLEdBQUc7QUFDSDs7QUFFQSxpRUFBZSxVQUFVLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZVZhbHVlcy5qcz84NDE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheU1hcCBmcm9tICcuL19hcnJheU1hcC5qcyc7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udmFsdWVzYCBhbmQgYF8udmFsdWVzSW5gIHdoaWNoIGNyZWF0ZXMgYW5cbiAqIGFycmF5IG9mIGBvYmplY3RgIHByb3BlcnR5IHZhbHVlcyBjb3JyZXNwb25kaW5nIHRvIHRoZSBwcm9wZXJ0eSBuYW1lc1xuICogb2YgYHByb3BzYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtBcnJheX0gcHJvcHMgVGhlIHByb3BlcnR5IG5hbWVzIHRvIGdldCB2YWx1ZXMgZm9yLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBiYXNlVmFsdWVzKG9iamVjdCwgcHJvcHMpIHtcbiAgcmV0dXJuIGFycmF5TWFwKHByb3BzLCBmdW5jdGlvbihrZXkpIHtcbiAgICByZXR1cm4gb2JqZWN0W2tleV07XG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlVmFsdWVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseValues.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_copyArray.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_copyArray.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (copyArray);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19jb3B5QXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLFNBQVMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19jb3B5QXJyYXkuanM/MjYzOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcGllcyB0aGUgdmFsdWVzIG9mIGBzb3VyY2VgIHRvIGBhcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IHNvdXJjZSBUaGUgYXJyYXkgdG8gY29weSB2YWx1ZXMgZnJvbS5cbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheT1bXV0gVGhlIGFycmF5IHRvIGNvcHkgdmFsdWVzIHRvLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGBhcnJheWAuXG4gKi9cbmZ1bmN0aW9uIGNvcHlBcnJheShzb3VyY2UsIGFycmF5KSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gc291cmNlLmxlbmd0aDtcblxuICBhcnJheSB8fCAoYXJyYXkgPSBBcnJheShsZW5ndGgpKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBhcnJheVtpbmRleF0gPSBzb3VyY2VbaW5kZXhdO1xuICB9XG4gIHJldHVybiBhcnJheTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29weUFycmF5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_copyArray.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_freeGlobal.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_freeGlobal.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (freeGlobal);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19mcmVlR2xvYmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBLGlFQUFlLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19mcmVlR2xvYmFsLmpzPzk0MjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBnbG9iYWxgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWwgJiYgZ2xvYmFsLk9iamVjdCA9PT0gT2JqZWN0ICYmIGdsb2JhbDtcblxuZXhwb3J0IGRlZmF1bHQgZnJlZUdsb2JhbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_freeGlobal.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_getRawTag.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_getRawTag.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ \"./node_modules/lodash-es/_Symbol.js\");\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getRawTag);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRSYXdUYWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7O0FBRWxDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsa0RBQU0sR0FBRyxrREFBTTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLFNBQVMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRSYXdUYWcuanM/OGY4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ltYm9sIGZyb20gJy4vX1N5bWJvbC5qcyc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHJhdyBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgdmFyIGlzT3duID0gaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgc3ltVG9TdHJpbmdUYWcpLFxuICAgICAgdGFnID0gdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuXG4gIHRyeSB7XG4gICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkO1xuICAgIHZhciB1bm1hc2tlZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdmFyIHJlc3VsdCA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICBpZiAodW5tYXNrZWQpIHtcbiAgICBpZiAoaXNPd24pIHtcbiAgICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHRhZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0UmF3VGFnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_getRawTag.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_isIndex.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_isIndex.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isIndex);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19pc0luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2lzSW5kZXguanM/YjRlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL1xudmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgaW5kZXguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtudW1iZXJ9IFtsZW5ndGg9TUFYX1NBRkVfSU5URUdFUl0gVGhlIHVwcGVyIGJvdW5kcyBvZiBhIHZhbGlkIGluZGV4LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBpbmRleCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0luZGV4KHZhbHVlLCBsZW5ndGgpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcblxuICByZXR1cm4gISFsZW5ndGggJiZcbiAgICAodHlwZSA9PSAnbnVtYmVyJyB8fFxuICAgICAgKHR5cGUgIT0gJ3N5bWJvbCcgJiYgcmVJc1VpbnQudGVzdCh2YWx1ZSkpKSAmJlxuICAgICAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzSW5kZXg7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_isIndex.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_isPrototype.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_isPrototype.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isPrototype);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19pc1Byb3RvdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlFQUFlLFdBQVcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19pc1Byb3RvdHlwZS5qcz82NWMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGEgcHJvdG90eXBlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3RvdHlwZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1Byb3RvdHlwZSh2YWx1ZSkge1xuICB2YXIgQ3RvciA9IHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yLFxuICAgICAgcHJvdG8gPSAodHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yLnByb3RvdHlwZSkgfHwgb2JqZWN0UHJvdG87XG5cbiAgcmV0dXJuIHZhbHVlID09PSBwcm90bztcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNQcm90b3R5cGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_isPrototype.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_nativeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_nativeKeys.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _overArg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_overArg.js */ \"./node_modules/lodash-es/_overArg.js\");\n\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = (0,_overArg_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Object.keys, Object);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nativeKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19uYXRpdmVLZXlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DOztBQUVwQztBQUNBLGlCQUFpQix1REFBTzs7QUFFeEIsaUVBQWUsVUFBVSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX25hdGl2ZUtleXMuanM/MTA4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgb3ZlckFyZyBmcm9tICcuL19vdmVyQXJnLmpzJztcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUtleXMgPSBvdmVyQXJnKE9iamVjdC5rZXlzLCBPYmplY3QpO1xuXG5leHBvcnQgZGVmYXVsdCBuYXRpdmVLZXlzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_nativeKeys.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_nodeUtil.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/_nodeUtil.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_freeGlobal.js */ \"./node_modules/lodash-es/_freeGlobal.js\");\n\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nodeUtil);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19ub2RlVXRpbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsc0RBQVU7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osQ0FBQzs7QUFFRCxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fbm9kZVV0aWwuanM/YzU0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnJlZUdsb2JhbCBmcm9tICcuL19mcmVlR2xvYmFsLmpzJztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHByb2Nlc3NgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlUHJvY2VzcyA9IG1vZHVsZUV4cG9ydHMgJiYgZnJlZUdsb2JhbC5wcm9jZXNzO1xuXG4vKiogVXNlZCB0byBhY2Nlc3MgZmFzdGVyIE5vZGUuanMgaGVscGVycy4gKi9cbnZhciBub2RlVXRpbCA9IChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICAvLyBVc2UgYHV0aWwudHlwZXNgIGZvciBOb2RlLmpzIDEwKy5cbiAgICB2YXIgdHlwZXMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUucmVxdWlyZSAmJiBmcmVlTW9kdWxlLnJlcXVpcmUoJ3V0aWwnKS50eXBlcztcblxuICAgIGlmICh0eXBlcykge1xuICAgICAgcmV0dXJuIHR5cGVzO1xuICAgIH1cblxuICAgIC8vIExlZ2FjeSBgcHJvY2Vzcy5iaW5kaW5nKCd1dGlsJylgIGZvciBOb2RlLmpzIDwgMTAuXG4gICAgcmV0dXJuIGZyZWVQcm9jZXNzICYmIGZyZWVQcm9jZXNzLmJpbmRpbmcgJiYgZnJlZVByb2Nlc3MuYmluZGluZygndXRpbCcpO1xuICB9IGNhdGNoIChlKSB7fVxufSgpKTtcblxuZXhwb3J0IGRlZmF1bHQgbm9kZVV0aWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_nodeUtil.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_objectToString.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash-es/_objectToString.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (objectToString);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19vYmplY3RUb1N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX29iamVjdFRvU3RyaW5nLmpzP2RjZWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG5hdGl2ZU9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIHN0cmluZyB1c2luZyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyh2YWx1ZSkge1xuICByZXR1cm4gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG9iamVjdFRvU3RyaW5nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_objectToString.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_overArg.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/_overArg.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (overArg);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19vdmVyQXJnLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fb3ZlckFyZy5qcz83YjhkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIHVuYXJ5IGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBgZnVuY2Agd2l0aCBpdHMgYXJndW1lbnQgdHJhbnNmb3JtZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHdyYXAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSB0cmFuc2Zvcm0gVGhlIGFyZ3VtZW50IHRyYW5zZm9ybS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBvdmVyQXJnKGZ1bmMsIHRyYW5zZm9ybSkge1xuICByZXR1cm4gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGZ1bmModHJhbnNmb3JtKGFyZykpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBvdmVyQXJnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_overArg.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_root.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash-es/_root.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_freeGlobal.js */ \"./node_modules/lodash-es/_freeGlobal.js\");\n\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] || freeSelf || Function('return this')();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (root);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19yb290LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDOztBQUUxQztBQUNBOztBQUVBO0FBQ0EsV0FBVyxzREFBVTs7QUFFckIsaUVBQWUsSUFBSSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX3Jvb3QuanM/MjllNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnJlZUdsb2JhbCBmcm9tICcuL19mcmVlR2xvYmFsLmpzJztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBzZWxmYC4gKi9cbnZhciBmcmVlU2VsZiA9IHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYgJiYgc2VsZi5PYmplY3QgPT09IE9iamVjdCAmJiBzZWxmO1xuXG4vKiogVXNlZCBhcyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdC4gKi9cbnZhciByb290ID0gZnJlZUdsb2JhbCB8fCBmcmVlU2VsZiB8fCBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXG5leHBvcnQgZGVmYXVsdCByb290O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_root.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_shuffleSelf.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/_shuffleSelf.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseRandom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseRandom.js */ \"./node_modules/lodash-es/_baseRandom.js\");\n\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = (0,_baseRandom_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (shuffleSelf);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19zaHVmZmxlU2VsZi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLDBEQUFVO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxXQUFXLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fc2h1ZmZsZVNlbGYuanM/ZDVlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZVJhbmRvbSBmcm9tICcuL19iYXNlUmFuZG9tLmpzJztcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8uc2h1ZmZsZWAgd2hpY2ggbXV0YXRlcyBhbmQgc2V0cyB0aGUgc2l6ZSBvZiBgYXJyYXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gc2h1ZmZsZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc2l6ZT1hcnJheS5sZW5ndGhdIFRoZSBzaXplIG9mIGBhcnJheWAuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gc2h1ZmZsZVNlbGYoYXJyYXksIHNpemUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICBsYXN0SW5kZXggPSBsZW5ndGggLSAxO1xuXG4gIHNpemUgPSBzaXplID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiBzaXplO1xuICB3aGlsZSAoKytpbmRleCA8IHNpemUpIHtcbiAgICB2YXIgcmFuZCA9IGJhc2VSYW5kb20oaW5kZXgsIGxhc3RJbmRleCksXG4gICAgICAgIHZhbHVlID0gYXJyYXlbcmFuZF07XG5cbiAgICBhcnJheVtyYW5kXSA9IGFycmF5W2luZGV4XTtcbiAgICBhcnJheVtpbmRleF0gPSB2YWx1ZTtcbiAgfVxuICBhcnJheS5sZW5ndGggPSBzaXplO1xuICByZXR1cm4gYXJyYXk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHNodWZmbGVTZWxmO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_shuffleSelf.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isArguments.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/isArguments.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseIsArguments.js */ \"./node_modules/lodash-es/_baseIsArguments.js\");\n/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObjectLike.js */ \"./node_modules/lodash-es/isObjectLike.js\");\n\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = (0,_baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function() { return arguments; }()) ? _baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] : function(value) {\n  return (0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isArguments);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzQXJndW1lbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRDtBQUNQOztBQUU3QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsbUJBQW1CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsK0RBQWUsY0FBYyxtQkFBbUIsTUFBTSwyREFBZTtBQUN2RixTQUFTLDREQUFZO0FBQ3JCO0FBQ0E7O0FBRUEsaUVBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNBcmd1bWVudHMuanM/NGYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUlzQXJndW1lbnRzIGZyb20gJy4vX2Jhc2VJc0FyZ3VtZW50cy5qcyc7XG5pbXBvcnQgaXNPYmplY3RMaWtlIGZyb20gJy4vaXNPYmplY3RMaWtlLmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgcHJvcGVydHlJc0VudW1lcmFibGUgPSBvYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGBhcmd1bWVudHNgIG9iamVjdCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcmd1bWVudHMoZnVuY3Rpb24oKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FyZ3VtZW50cyhbMSwgMiwgM10pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJndW1lbnRzID0gYmFzZUlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID8gYmFzZUlzQXJndW1lbnRzIDogZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpICYmXG4gICAgIXByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodmFsdWUsICdjYWxsZWUnKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGlzQXJndW1lbnRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isArguments.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isArray.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/isArray.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isArray);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzQXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc0FycmF5LmpzPzczMmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGFuIGBBcnJheWAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5cbmV4cG9ydCBkZWZhdWx0IGlzQXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isArray.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isArrayLike.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/isArrayLike.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isFunction.js */ \"./node_modules/lodash-es/isFunction.js\");\n/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isLength.js */ \"./node_modules/lodash-es/isLength.js\");\n\n\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && (0,_isLength_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value.length) && !(0,_isFunction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isArrayLike);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzQXJyYXlMaWtlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNKOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHdEQUFRLG1CQUFtQiwwREFBVTtBQUMvRDs7QUFFQSxpRUFBZSxXQUFXLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc0FycmF5TGlrZS5qcz8wNjU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc0Z1bmN0aW9uIGZyb20gJy4vaXNGdW5jdGlvbi5qcyc7XG5pbXBvcnQgaXNMZW5ndGggZnJvbSAnLi9pc0xlbmd0aC5qcyc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZS4gQSB2YWx1ZSBpcyBjb25zaWRlcmVkIGFycmF5LWxpa2UgaWYgaXQnc1xuICogbm90IGEgZnVuY3Rpb24gYW5kIGhhcyBhIGB2YWx1ZS5sZW5ndGhgIHRoYXQncyBhbiBpbnRlZ2VyIGdyZWF0ZXIgdGhhbiBvclxuICogZXF1YWwgdG8gYDBgIGFuZCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gYE51bWJlci5NQVhfU0FGRV9JTlRFR0VSYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoJ2FiYycpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIGlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkgJiYgIWlzRnVuY3Rpb24odmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpc0FycmF5TGlrZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isArrayLike.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isBuffer.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isBuffer.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ \"./node_modules/lodash-es/_root.js\");\n/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stubFalse.js */ \"./node_modules/lodash-es/stubFalse.js\");\n\n\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isBuffer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzQnVmZmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNTOztBQUV2QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLDZCQUE2QixnREFBSTs7QUFFakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHFEQUFTOztBQUUxQyxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc0J1ZmZlci5qcz9hYjYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuaW1wb3J0IHN0dWJGYWxzZSBmcm9tICcuL3N0dWJGYWxzZS5qcyc7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZXhwb3J0c2AuICovXG52YXIgZnJlZUV4cG9ydHMgPSB0eXBlb2YgZXhwb3J0cyA9PSAnb2JqZWN0JyAmJiBleHBvcnRzICYmICFleHBvcnRzLm5vZGVUeXBlICYmIGV4cG9ydHM7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgbW9kdWxlYC4gKi9cbnZhciBmcmVlTW9kdWxlID0gZnJlZUV4cG9ydHMgJiYgdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUgJiYgIW1vZHVsZS5ub2RlVHlwZSAmJiBtb2R1bGU7XG5cbi8qKiBEZXRlY3QgdGhlIHBvcHVsYXIgQ29tbW9uSlMgZXh0ZW5zaW9uIGBtb2R1bGUuZXhwb3J0c2AuICovXG52YXIgbW9kdWxlRXhwb3J0cyA9IGZyZWVNb2R1bGUgJiYgZnJlZU1vZHVsZS5leHBvcnRzID09PSBmcmVlRXhwb3J0cztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgQnVmZmVyID0gbW9kdWxlRXhwb3J0cyA/IHJvb3QuQnVmZmVyIDogdW5kZWZpbmVkO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlSXNCdWZmZXIgPSBCdWZmZXIgPyBCdWZmZXIuaXNCdWZmZXIgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBidWZmZXIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjMuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBidWZmZXIsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0J1ZmZlcihuZXcgQnVmZmVyKDIpKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQnVmZmVyKG5ldyBVaW50OEFycmF5KDIpKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0J1ZmZlciA9IG5hdGl2ZUlzQnVmZmVyIHx8IHN0dWJGYWxzZTtcblxuZXhwb3J0IGRlZmF1bHQgaXNCdWZmZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isBuffer.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isFunction.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/isFunction.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseGetTag.js */ \"./node_modules/lodash-es/_baseGetTag.js\");\n/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.js */ \"./node_modules/lodash-es/isObject.js\");\n\n\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = (0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isFunction);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzRnVuY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ0w7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyx3REFBUTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwREFBVTtBQUN0QjtBQUNBOztBQUVBLGlFQUFlLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzRnVuY3Rpb24uanM/YjA0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCBpc09iamVjdCBmcm9tICcuL2lzT2JqZWN0LmpzJztcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFzeW5jVGFnID0gJ1tvYmplY3QgQXN5bmNGdW5jdGlvbl0nLFxuICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIGdlblRhZyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXScsXG4gICAgcHJveHlUYWcgPSAnW29iamVjdCBQcm94eV0nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDkgd2hpY2ggcmV0dXJucyAnb2JqZWN0JyBmb3IgdHlwZWQgYXJyYXlzIGFuZCBvdGhlciBjb25zdHJ1Y3RvcnMuXG4gIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWcgfHwgdGFnID09IGFzeW5jVGFnIHx8IHRhZyA9PSBwcm94eVRhZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNGdW5jdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isFunction.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isLength.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isLength.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isLength);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzTGVuZ3RoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc0xlbmd0aC5qcz9mZDg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBsZW5ndGguXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb25cbiAqIFtgVG9MZW5ndGhgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2xlbmd0aCkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBsZW5ndGgsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0xlbmd0aCgzKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzTGVuZ3RoKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKEluZmluaXR5KTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0xlbmd0aCgnMycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNMZW5ndGgodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyAmJlxuICAgIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPD0gTUFYX1NBRkVfSU5URUdFUjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNMZW5ndGg7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isLength.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isObject.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isObject.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isObject);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsUUFBUSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNPYmplY3QuanM/ZmVjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNPYmplY3Q7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isObject.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isObjectLike.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/isObjectLike.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isObjectLike);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzT2JqZWN0TGlrZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNPYmplY3RMaWtlLmpzPzUxMDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzT2JqZWN0TGlrZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isObjectLike.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isTypedArray.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/isTypedArray.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseIsTypedArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseIsTypedArray.js */ \"./node_modules/lodash-es/_baseIsTypedArray.js\");\n/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_baseUnary.js */ \"./node_modules/lodash-es/_baseUnary.js\");\n/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nodeUtil.js */ \"./node_modules/lodash-es/_nodeUtil.js\");\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? (0,_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(nodeIsTypedArray) : _baseIsTypedArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isTypedArray);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzVHlwZWRBcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNEO0FBQ2Q7QUFDRjs7QUFFdEM7QUFDQSx1QkFBdUIsb0RBQVEsSUFBSSxvREFBUTs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyx5REFBUyxxQkFBcUIsNERBQWdCOztBQUVwRixpRUFBZSxZQUFZLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc1R5cGVkQXJyYXkuanM/NWQ2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUlzVHlwZWRBcnJheSBmcm9tICcuL19iYXNlSXNUeXBlZEFycmF5LmpzJztcbmltcG9ydCBiYXNlVW5hcnkgZnJvbSAnLi9fYmFzZVVuYXJ5LmpzJztcbmltcG9ydCBub2RlVXRpbCBmcm9tICcuL19ub2RlVXRpbC5qcyc7XG5cbi8qIE5vZGUuanMgaGVscGVyIHJlZmVyZW5jZXMuICovXG52YXIgbm9kZUlzVHlwZWRBcnJheSA9IG5vZGVVdGlsICYmIG5vZGVVdGlsLmlzVHlwZWRBcnJheTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgdHlwZWQgYXJyYXkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAzLjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzVHlwZWRBcnJheShuZXcgVWludDhBcnJheSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1R5cGVkQXJyYXkoW10pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzVHlwZWRBcnJheSA9IG5vZGVJc1R5cGVkQXJyYXkgPyBiYXNlVW5hcnkobm9kZUlzVHlwZWRBcnJheSkgOiBiYXNlSXNUeXBlZEFycmF5O1xuXG5leHBvcnQgZGVmYXVsdCBpc1R5cGVkQXJyYXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isTypedArray.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/keys.js":
/*!****************************************!*\
  !*** ./node_modules/lodash-es/keys.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arrayLikeKeys.js */ \"./node_modules/lodash-es/_arrayLikeKeys.js\");\n/* harmony import */ var _baseKeys_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseKeys.js */ \"./node_modules/lodash-es/_baseKeys.js\");\n/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArrayLike.js */ \"./node_modules/lodash-es/isArrayLike.js\");\n\n\n\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return (0,_isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(object) ? (0,_arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(object) : (0,_baseKeys_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(object);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (keys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2tleXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnRDtBQUNWO0FBQ0s7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyREFBVyxXQUFXLDZEQUFhLFdBQVcsd0RBQVE7QUFDL0Q7O0FBRUEsaUVBQWUsSUFBSSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMva2V5cy5qcz9hYTlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheUxpa2VLZXlzIGZyb20gJy4vX2FycmF5TGlrZUtleXMuanMnO1xuaW1wb3J0IGJhc2VLZXlzIGZyb20gJy4vX2Jhc2VLZXlzLmpzJztcbmltcG9ydCBpc0FycmF5TGlrZSBmcm9tICcuL2lzQXJyYXlMaWtlLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBvZiBgb2JqZWN0YC5cbiAqXG4gKiAqKk5vdGU6KiogTm9uLW9iamVjdCB2YWx1ZXMgYXJlIGNvZXJjZWQgdG8gb2JqZWN0cy4gU2VlIHRoZVxuICogW0VTIHNwZWNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5rZXlzKVxuICogZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBtZW1iZXJPZiBfXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICogQGV4YW1wbGVcbiAqXG4gKiBmdW5jdGlvbiBGb28oKSB7XG4gKiAgIHRoaXMuYSA9IDE7XG4gKiAgIHRoaXMuYiA9IDI7XG4gKiB9XG4gKlxuICogRm9vLnByb3RvdHlwZS5jID0gMztcbiAqXG4gKiBfLmtleXMobmV3IEZvbyk7XG4gKiAvLyA9PiBbJ2EnLCAnYiddIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpXG4gKlxuICogXy5rZXlzKCdoaScpO1xuICogLy8gPT4gWycwJywgJzEnXVxuICovXG5mdW5jdGlvbiBrZXlzKG9iamVjdCkge1xuICByZXR1cm4gaXNBcnJheUxpa2Uob2JqZWN0KSA/IGFycmF5TGlrZUtleXMob2JqZWN0KSA6IGJhc2VLZXlzKG9iamVjdCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/keys.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/shuffle.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/shuffle.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _arrayShuffle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_arrayShuffle.js */ \"./node_modules/lodash-es/_arrayShuffle.js\");\n/* harmony import */ var _baseShuffle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_baseShuffle.js */ \"./node_modules/lodash-es/_baseShuffle.js\");\n/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray.js */ \"./node_modules/lodash-es/isArray.js\");\n\n\n\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = (0,_isArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(collection) ? _arrayShuffle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] : _baseShuffle_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n  return func(collection);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (shuffle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL3NodWZmbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QztBQUNGO0FBQ1Q7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsdURBQU8sZUFBZSx3REFBWSxHQUFHLHVEQUFXO0FBQzdEO0FBQ0E7O0FBRUEsaUVBQWUsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvc2h1ZmZsZS5qcz9kMWRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVNodWZmbGUgZnJvbSAnLi9fYXJyYXlTaHVmZmxlLmpzJztcbmltcG9ydCBiYXNlU2h1ZmZsZSBmcm9tICcuL19iYXNlU2h1ZmZsZS5qcyc7XG5pbXBvcnQgaXNBcnJheSBmcm9tICcuL2lzQXJyYXkuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2Ygc2h1ZmZsZWQgdmFsdWVzLCB1c2luZyBhIHZlcnNpb24gb2YgdGhlXG4gKiBbRmlzaGVyLVlhdGVzIHNodWZmbGVdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Zpc2hlci1ZYXRlc19zaHVmZmxlKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gc2h1ZmZsZS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IHNodWZmbGVkIGFycmF5LlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnNodWZmbGUoWzEsIDIsIDMsIDRdKTtcbiAqIC8vID0+IFs0LCAxLCAzLCAyXVxuICovXG5mdW5jdGlvbiBzaHVmZmxlKGNvbGxlY3Rpb24pIHtcbiAgdmFyIGZ1bmMgPSBpc0FycmF5KGNvbGxlY3Rpb24pID8gYXJyYXlTaHVmZmxlIDogYmFzZVNodWZmbGU7XG4gIHJldHVybiBmdW5jKGNvbGxlY3Rpb24pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzaHVmZmxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/shuffle.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/stubFalse.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash-es/stubFalse.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stubFalse);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL3N0dWJGYWxzZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxTQUFTLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9zdHViRmFsc2UuanM/YzljMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0dWJGYWxzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/stubFalse.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/values.js":
/*!******************************************!*\
  !*** ./node_modules/lodash-es/values.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseValues_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseValues.js */ \"./node_modules/lodash-es/_baseValues.js\");\n/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keys.js */ \"./node_modules/lodash-es/keys.js\");\n\n\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : (0,_baseValues_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(object, (0,_keys_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(object));\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (values);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL3ZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFDYjs7QUFFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiwwREFBVSxTQUFTLG9EQUFJO0FBQ3REOztBQUVBLGlFQUFlLE1BQU0sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL3ZhbHVlcy5qcz8wZTE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlVmFsdWVzIGZyb20gJy4vX2Jhc2VWYWx1ZXMuanMnO1xuaW1wb3J0IGtleXMgZnJvbSAnLi9rZXlzLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gZW51bWVyYWJsZSBzdHJpbmcga2V5ZWQgcHJvcGVydHkgdmFsdWVzIG9mIGBvYmplY3RgLlxuICpcbiAqICoqTm90ZToqKiBOb24tb2JqZWN0IHZhbHVlcyBhcmUgY29lcmNlZCB0byBvYmplY3RzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgdmFsdWVzLlxuICogQGV4YW1wbGVcbiAqXG4gKiBmdW5jdGlvbiBGb28oKSB7XG4gKiAgIHRoaXMuYSA9IDE7XG4gKiAgIHRoaXMuYiA9IDI7XG4gKiB9XG4gKlxuICogRm9vLnByb3RvdHlwZS5jID0gMztcbiAqXG4gKiBfLnZhbHVlcyhuZXcgRm9vKTtcbiAqIC8vID0+IFsxLCAyXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKVxuICpcbiAqIF8udmFsdWVzKCdoaScpO1xuICogLy8gPT4gWydoJywgJ2knXVxuICovXG5mdW5jdGlvbiB2YWx1ZXMob2JqZWN0KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IFtdIDogYmFzZVZhbHVlcyhvYmplY3QsIGtleXMob2JqZWN0KSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/values.js\n");

/***/ }),

/***/ "./node_modules/mousetrap/mousetrap.js":
/*!*********************************************!*\
  !*** ./node_modules/mousetrap/mousetrap.js ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if ( true && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n            return Mousetrap;\n        }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mousetrap/mousetrap.js\n");

/***/ }),

/***/ "./node_modules/platform-detect/index.js":
/*!***********************************************!*\
  !*** ./node_modules/platform-detect/index.js ***!
  \***********************************************/
/***/ (function(module) {

eval("!function(e,o){ true?module.exports=o():0}(this,function(){\"use strict\";function e(e,o){var n=window.matchMedia(e);o(n.matches);var i=function(){return o(n.matches)};return n.addListener(i),function(){return n.removeListener(i)}}function o(e,o){return t[e]!==o&&(t[e]=o,s(e,o),!0)}var n=\"undefined\"!=typeof navigator&&\"undefined\"!=typeof window;if(n&&\"undefined\"!=typeof nw)try{nw.Window.get()}catch(e){n=!1}var i=!n,r=n?navigator.userAgent:void 0,t={gui:n,terminal:i,registerQuery:e};t.node=\"undefined\"!=typeof process&&!!process.versions&&!!process.versions.node,t.pwa=t.gui&&window.matchMedia(\"(display-mode: standalone)\").matches&&null!==document.head.querySelector('[rel=\"manifest\"]'),t.uwp=\"undefined\"!=typeof Windows&&\"undefined\"!=typeof MSApp,t.nwjs=!(!t.node||!process.versions.nw),t.electron=!(!t.node||!process.versions.electron),t.cordova=!(!t.gui||!window.cordova),t.packaged=t.uwp||t.nwjs||t.electron||t.cordova,t.web=!t.node&&!t.packaged,t.browser=t.web,t.website=t.web&&!t.pwa,t.worker=!t.gui&&\"undefined\"!=typeof self&&void 0!==self.importScripts,t.serviceWorker=t.worker&&!!navigator.serviceWorker.controller||!1,t.android=!!t.gui&&r.includes(\"Android\"),t.chromeos=!!t.gui&&r.includes(\"CrOS\"),t.tizen=!!t.gui&&r.includes(\"Tizen\"),t.ios=t.gui&&/iPad|iPhone|iPod/.test(r)&&!window.MSStream||!1,t.linuxBased=t.android||t.tizen,t.windows=t.node?\"win32\"===process.platform:r.includes(\"Windows\"),t.macos=t.node?\"darwin\"===process.platform:r.includes(\"Macintosh\"),t.linux=t.node?\"linux\"===process.platform:r.includes(\"Linux\")&&!t.linuxBased&&!t.macos,t.edgeHtml=t.gui&&r.includes(\"Edge/\"),t.edgeChromium=t.gui&&r.includes(\"Edg/\"),t.edgeAndroid=t.gui&&r.includes(\"EdgA/\"),t.edgeIos=t.gui&&r.includes(\"EdgiOS/\"),t.chromeIos=t.gui&&r.includes(\"CriOS/\"),t.firefoxIos=t.gui&&r.includes(\"FxiOS/\"),t.edge=t.edgeHtml||t.edgeChromium||t.edgeAndroid||t.edgeIos,t.samsungBrowser=t.gui&&r.includes(\"SamsungBrowser/\"),t.opera=t.gui&&(r.includes(\"Opera\")||r.includes(\"OPR/\")),t.firefox=t.gui&&(r.includes(\"Firefox\")||t.firefoxIos),t.chrome=t.gui&&(r.includes(\"Chrome\")||t.chromeIos)&&!t.edge&&!t.opera&&!t.samsungBrowser,t.safari=t.gui&&r.includes(\"Safari\")&&!t.chrome&&!t.edge&&!t.firefox&&!t.opera&&!t.samsungBrowser||t.edgeIos||t.chromeIos||t.firefoxIos,t.ie=t.trident=t.gui&&r.includes(\"Trident\"),t.blink=t.chrome&&!t.chromeIos||t.edgeChromium||t.edgeAndroid||t.samsungBrowser,t.webkit=t.blink||t.safari,t.gecko=t.firefox&&!t.firefoxIos&&!t.webkit&&!t.safari;var d={};t.on=function(e,o){d[e]=d[e]||new Set,d[e].add(o)},t.off=t.removeListener=function(e,o){d[e]&&d[e].delete(o)};var s=t.emit=function(e,o){d[e]&&d[e].forEach(function(e){return e(o)})};if(t.gui){t.pixelRatio=parseFloat(window.devicePixelRatio.toFixed(2)),t.gameconsole=r.includes(\"Xbox\")||r.includes(\"PlayStation\");var a=0;if(window.addEventListener(\"gamepadconnected\",function(e){return a++}),window.addEventListener(\"gamepaddisconnected\",function(e){return a--}),t.gameconsole)t.gamepad=!0,t.mouse=!0,t.touch=!1,t.tv=!0,t.battery=!1,t.phone=t.tablet=t.hybrid=t.laptop=t.desktop=!1,t.formfactor=\"gameconsole\";else{var c=function(){o(\"tv\",\"tv\"===t.formfactor),o(\"phone\",\"phone\"===t.formfactor),o(\"tablet\",\"tablet\"===t.formfactor),o(\"hybrid\",\"hybrid\"===t.formfactor),o(\"laptop\",\"laptop\"===t.formfactor),o(\"desktop\",\"desktop\"===t.formfactor)},u=function(){var e=Math.min(window.screen.width,window.screen.height);return t.tv?\"tv\":t.touch&&e<600?\"phone\":t.touch&&!t.mouse?\"tablet\":t.touch&&t.mouse?\"hybrid\":t.battery?\"laptop\":\"desktop\"};t.touch=navigator.maxTouchPoints>0,t.tv=r.includes(\"TV\"),a=navigator.getGamepads?Array.from(navigator.getGamepads()).filter(function(e){return null!==e&&void 0!==e}).length:0,t.gamepad=a>0,e(\"(orientation: portrait)\",function(e){t.portrait=e,t.landscape=!e,t.orientation=e?\"portrait\":\"landscape\",s(\"portrait\",t.portrait),s(\"landscape\",t.landscape),s(\"orientation\",t.orientation)}),e(\"(any-pointer: coarse)\",function(e){o(\"touch\",e),o(\"formfactor\",u())&&c()}),e(\"(hover: hover)\",function(e){o(\"mouse\",e),o(\"input\",e?\"mouse\":\"touch\"),o(\"formfactor\",u())&&c()})}}return t.csp=t.uwp||!1,t.nwjs?t.dev=\"sdk\"===process.versions[\"nw-flavor\"]:t.electron?t.dev=process.execPath.replace(/\\\\/g,\"/\").includes(\"node_modules/electron/\"):t.uwp?t.dev=Windows.ApplicationModel.Package.current.isDevelopmentMode:t.node?t.dev=\"production\"!==\"development\":t.dev=void 0,t});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcGxhdGZvcm0tZGV0ZWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsS0FBb0Qsb0JBQW9CLENBQXNHLENBQUMsaUJBQWlCLGFBQWEsZ0JBQWdCLDJCQUEyQixhQUFhLGlCQUFpQixxQkFBcUIsbUNBQW1DLDRCQUE0QixnQkFBZ0Isb0NBQW9DLGdFQUFnRSxpQ0FBaUMsZ0JBQWdCLFNBQVMsS0FBSywyQ0FBMkMsa0NBQWtDLHU3REFBdTdELFNBQVMsbUJBQW1CLCtCQUErQixzQ0FBc0Msc0JBQXNCLDJCQUEyQiwrQkFBK0IsWUFBWSxHQUFHLFVBQVUsd0hBQXdILFFBQVEsMERBQTBELFdBQVcsNERBQTRELFdBQVcsbUpBQW1KLEtBQUssaUJBQWlCLGdOQUFnTixjQUFjLHlEQUF5RCwySEFBMkgsd0lBQXdJLDRCQUE0QixpRUFBaUUsc0pBQXNKLHdDQUF3QyxzQ0FBc0MsaUNBQWlDLG1FQUFtRSxHQUFHLHFRQUFxUSxhQUFvQixnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL3BsYXRmb3JtLWRldGVjdC9pbmRleC5qcz9mNDU5Il0sInNvdXJjZXNDb250ZW50IjpbIiFmdW5jdGlvbihlLG8pe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPW8oKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwicGxhdGZvcm0tZGV0ZWN0XCIsbyk6KGU9ZXx8c2VsZixlW1wicGxhdGZvcm0tZGV0ZWN0XCJdPW8oKSl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBlKGUsbyl7dmFyIG49d2luZG93Lm1hdGNoTWVkaWEoZSk7byhuLm1hdGNoZXMpO3ZhciBpPWZ1bmN0aW9uKCl7cmV0dXJuIG8obi5tYXRjaGVzKX07cmV0dXJuIG4uYWRkTGlzdGVuZXIoaSksZnVuY3Rpb24oKXtyZXR1cm4gbi5yZW1vdmVMaXN0ZW5lcihpKX19ZnVuY3Rpb24gbyhlLG8pe3JldHVybiB0W2VdIT09byYmKHRbZV09byxzKGUsbyksITApfXZhciBuPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBuYXZpZ2F0b3ImJlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c7aWYobiYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG53KXRyeXtudy5XaW5kb3cuZ2V0KCl9Y2F0Y2goZSl7bj0hMX12YXIgaT0hbixyPW4/bmF2aWdhdG9yLnVzZXJBZ2VudDp2b2lkIDAsdD17Z3VpOm4sdGVybWluYWw6aSxyZWdpc3RlclF1ZXJ5OmV9O3Qubm9kZT1cInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmISFwcm9jZXNzLnZlcnNpb25zJiYhIXByb2Nlc3MudmVyc2lvbnMubm9kZSx0LnB3YT10Lmd1aSYmd2luZG93Lm1hdGNoTWVkaWEoXCIoZGlzcGxheS1tb2RlOiBzdGFuZGFsb25lKVwiKS5tYXRjaGVzJiZudWxsIT09ZG9jdW1lbnQuaGVhZC5xdWVyeVNlbGVjdG9yKCdbcmVsPVwibWFuaWZlc3RcIl0nKSx0LnV3cD1cInVuZGVmaW5lZFwiIT10eXBlb2YgV2luZG93cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIE1TQXBwLHQubndqcz0hKCF0Lm5vZGV8fCFwcm9jZXNzLnZlcnNpb25zLm53KSx0LmVsZWN0cm9uPSEoIXQubm9kZXx8IXByb2Nlc3MudmVyc2lvbnMuZWxlY3Ryb24pLHQuY29yZG92YT0hKCF0Lmd1aXx8IXdpbmRvdy5jb3Jkb3ZhKSx0LnBhY2thZ2VkPXQudXdwfHx0Lm53anN8fHQuZWxlY3Ryb258fHQuY29yZG92YSx0LndlYj0hdC5ub2RlJiYhdC5wYWNrYWdlZCx0LmJyb3dzZXI9dC53ZWIsdC53ZWJzaXRlPXQud2ViJiYhdC5wd2EsdC53b3JrZXI9IXQuZ3VpJiZcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmdm9pZCAwIT09c2VsZi5pbXBvcnRTY3JpcHRzLHQuc2VydmljZVdvcmtlcj10LndvcmtlciYmISFuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5jb250cm9sbGVyfHwhMSx0LmFuZHJvaWQ9ISF0Lmd1aSYmci5pbmNsdWRlcyhcIkFuZHJvaWRcIiksdC5jaHJvbWVvcz0hIXQuZ3VpJiZyLmluY2x1ZGVzKFwiQ3JPU1wiKSx0LnRpemVuPSEhdC5ndWkmJnIuaW5jbHVkZXMoXCJUaXplblwiKSx0Lmlvcz10Lmd1aSYmL2lQYWR8aVBob25lfGlQb2QvLnRlc3QocikmJiF3aW5kb3cuTVNTdHJlYW18fCExLHQubGludXhCYXNlZD10LmFuZHJvaWR8fHQudGl6ZW4sdC53aW5kb3dzPXQubm9kZT9cIndpbjMyXCI9PT1wcm9jZXNzLnBsYXRmb3JtOnIuaW5jbHVkZXMoXCJXaW5kb3dzXCIpLHQubWFjb3M9dC5ub2RlP1wiZGFyd2luXCI9PT1wcm9jZXNzLnBsYXRmb3JtOnIuaW5jbHVkZXMoXCJNYWNpbnRvc2hcIiksdC5saW51eD10Lm5vZGU/XCJsaW51eFwiPT09cHJvY2Vzcy5wbGF0Zm9ybTpyLmluY2x1ZGVzKFwiTGludXhcIikmJiF0LmxpbnV4QmFzZWQmJiF0Lm1hY29zLHQuZWRnZUh0bWw9dC5ndWkmJnIuaW5jbHVkZXMoXCJFZGdlL1wiKSx0LmVkZ2VDaHJvbWl1bT10Lmd1aSYmci5pbmNsdWRlcyhcIkVkZy9cIiksdC5lZGdlQW5kcm9pZD10Lmd1aSYmci5pbmNsdWRlcyhcIkVkZ0EvXCIpLHQuZWRnZUlvcz10Lmd1aSYmci5pbmNsdWRlcyhcIkVkZ2lPUy9cIiksdC5jaHJvbWVJb3M9dC5ndWkmJnIuaW5jbHVkZXMoXCJDcmlPUy9cIiksdC5maXJlZm94SW9zPXQuZ3VpJiZyLmluY2x1ZGVzKFwiRnhpT1MvXCIpLHQuZWRnZT10LmVkZ2VIdG1sfHx0LmVkZ2VDaHJvbWl1bXx8dC5lZGdlQW5kcm9pZHx8dC5lZGdlSW9zLHQuc2Ftc3VuZ0Jyb3dzZXI9dC5ndWkmJnIuaW5jbHVkZXMoXCJTYW1zdW5nQnJvd3Nlci9cIiksdC5vcGVyYT10Lmd1aSYmKHIuaW5jbHVkZXMoXCJPcGVyYVwiKXx8ci5pbmNsdWRlcyhcIk9QUi9cIikpLHQuZmlyZWZveD10Lmd1aSYmKHIuaW5jbHVkZXMoXCJGaXJlZm94XCIpfHx0LmZpcmVmb3hJb3MpLHQuY2hyb21lPXQuZ3VpJiYoci5pbmNsdWRlcyhcIkNocm9tZVwiKXx8dC5jaHJvbWVJb3MpJiYhdC5lZGdlJiYhdC5vcGVyYSYmIXQuc2Ftc3VuZ0Jyb3dzZXIsdC5zYWZhcmk9dC5ndWkmJnIuaW5jbHVkZXMoXCJTYWZhcmlcIikmJiF0LmNocm9tZSYmIXQuZWRnZSYmIXQuZmlyZWZveCYmIXQub3BlcmEmJiF0LnNhbXN1bmdCcm93c2VyfHx0LmVkZ2VJb3N8fHQuY2hyb21lSW9zfHx0LmZpcmVmb3hJb3MsdC5pZT10LnRyaWRlbnQ9dC5ndWkmJnIuaW5jbHVkZXMoXCJUcmlkZW50XCIpLHQuYmxpbms9dC5jaHJvbWUmJiF0LmNocm9tZUlvc3x8dC5lZGdlQ2hyb21pdW18fHQuZWRnZUFuZHJvaWR8fHQuc2Ftc3VuZ0Jyb3dzZXIsdC53ZWJraXQ9dC5ibGlua3x8dC5zYWZhcmksdC5nZWNrbz10LmZpcmVmb3gmJiF0LmZpcmVmb3hJb3MmJiF0LndlYmtpdCYmIXQuc2FmYXJpO3ZhciBkPXt9O3Qub249ZnVuY3Rpb24oZSxvKXtkW2VdPWRbZV18fG5ldyBTZXQsZFtlXS5hZGQobyl9LHQub2ZmPXQucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24oZSxvKXtkW2VdJiZkW2VdLmRlbGV0ZShvKX07dmFyIHM9dC5lbWl0PWZ1bmN0aW9uKGUsbyl7ZFtlXSYmZFtlXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlKG8pfSl9O2lmKHQuZ3VpKXt0LnBpeGVsUmF0aW89cGFyc2VGbG9hdCh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpby50b0ZpeGVkKDIpKSx0LmdhbWVjb25zb2xlPXIuaW5jbHVkZXMoXCJYYm94XCIpfHxyLmluY2x1ZGVzKFwiUGxheVN0YXRpb25cIik7dmFyIGE9MDtpZih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImdhbWVwYWRjb25uZWN0ZWRcIixmdW5jdGlvbihlKXtyZXR1cm4gYSsrfSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJnYW1lcGFkZGlzY29ubmVjdGVkXCIsZnVuY3Rpb24oZSl7cmV0dXJuIGEtLX0pLHQuZ2FtZWNvbnNvbGUpdC5nYW1lcGFkPSEwLHQubW91c2U9ITAsdC50b3VjaD0hMSx0LnR2PSEwLHQuYmF0dGVyeT0hMSx0LnBob25lPXQudGFibGV0PXQuaHlicmlkPXQubGFwdG9wPXQuZGVza3RvcD0hMSx0LmZvcm1mYWN0b3I9XCJnYW1lY29uc29sZVwiO2Vsc2V7dmFyIGM9ZnVuY3Rpb24oKXtvKFwidHZcIixcInR2XCI9PT10LmZvcm1mYWN0b3IpLG8oXCJwaG9uZVwiLFwicGhvbmVcIj09PXQuZm9ybWZhY3RvciksbyhcInRhYmxldFwiLFwidGFibGV0XCI9PT10LmZvcm1mYWN0b3IpLG8oXCJoeWJyaWRcIixcImh5YnJpZFwiPT09dC5mb3JtZmFjdG9yKSxvKFwibGFwdG9wXCIsXCJsYXB0b3BcIj09PXQuZm9ybWZhY3RvciksbyhcImRlc2t0b3BcIixcImRlc2t0b3BcIj09PXQuZm9ybWZhY3Rvcil9LHU9ZnVuY3Rpb24oKXt2YXIgZT1NYXRoLm1pbih3aW5kb3cuc2NyZWVuLndpZHRoLHdpbmRvdy5zY3JlZW4uaGVpZ2h0KTtyZXR1cm4gdC50dj9cInR2XCI6dC50b3VjaCYmZTw2MDA/XCJwaG9uZVwiOnQudG91Y2gmJiF0Lm1vdXNlP1widGFibGV0XCI6dC50b3VjaCYmdC5tb3VzZT9cImh5YnJpZFwiOnQuYmF0dGVyeT9cImxhcHRvcFwiOlwiZGVza3RvcFwifTt0LnRvdWNoPW5hdmlnYXRvci5tYXhUb3VjaFBvaW50cz4wLHQudHY9ci5pbmNsdWRlcyhcIlRWXCIpLGE9bmF2aWdhdG9yLmdldEdhbWVwYWRzP0FycmF5LmZyb20obmF2aWdhdG9yLmdldEdhbWVwYWRzKCkpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9PWUmJnZvaWQgMCE9PWV9KS5sZW5ndGg6MCx0LmdhbWVwYWQ9YT4wLGUoXCIob3JpZW50YXRpb246IHBvcnRyYWl0KVwiLGZ1bmN0aW9uKGUpe3QucG9ydHJhaXQ9ZSx0LmxhbmRzY2FwZT0hZSx0Lm9yaWVudGF0aW9uPWU/XCJwb3J0cmFpdFwiOlwibGFuZHNjYXBlXCIscyhcInBvcnRyYWl0XCIsdC5wb3J0cmFpdCkscyhcImxhbmRzY2FwZVwiLHQubGFuZHNjYXBlKSxzKFwib3JpZW50YXRpb25cIix0Lm9yaWVudGF0aW9uKX0pLGUoXCIoYW55LXBvaW50ZXI6IGNvYXJzZSlcIixmdW5jdGlvbihlKXtvKFwidG91Y2hcIixlKSxvKFwiZm9ybWZhY3RvclwiLHUoKSkmJmMoKX0pLGUoXCIoaG92ZXI6IGhvdmVyKVwiLGZ1bmN0aW9uKGUpe28oXCJtb3VzZVwiLGUpLG8oXCJpbnB1dFwiLGU/XCJtb3VzZVwiOlwidG91Y2hcIiksbyhcImZvcm1mYWN0b3JcIix1KCkpJiZjKCl9KX19cmV0dXJuIHQuY3NwPXQudXdwfHwhMSx0Lm53anM/dC5kZXY9XCJzZGtcIj09PXByb2Nlc3MudmVyc2lvbnNbXCJudy1mbGF2b3JcIl06dC5lbGVjdHJvbj90LmRldj1wcm9jZXNzLmV4ZWNQYXRoLnJlcGxhY2UoL1xcXFwvZyxcIi9cIikuaW5jbHVkZXMoXCJub2RlX21vZHVsZXMvZWxlY3Ryb24vXCIpOnQudXdwP3QuZGV2PVdpbmRvd3MuQXBwbGljYXRpb25Nb2RlbC5QYWNrYWdlLmN1cnJlbnQuaXNEZXZlbG9wbWVudE1vZGU6dC5ub2RlP3QuZGV2PVwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY6dC5kZXY9dm9pZCAwLHR9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/platform-detect/index.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/index.js":
/*!******************************************!*\
  !*** ./node_modules/seedrandom/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(/*! ./lib/alea */ \"./node_modules/seedrandom/lib/alea.js\");\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ \"./node_modules/seedrandom/lib/xor128.js\");\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ \"./node_modules/seedrandom/lib/xorwow.js\");\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ \"./node_modules/seedrandom/lib/xorshift7.js\");\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ \"./node_modules/seedrandom/lib/xor4096.js\");\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = __webpack_require__(/*! ./lib/tychei */ \"./node_modules/seedrandom/lib/tychei.js\");\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = __webpack_require__(/*! ./seedrandom */ \"./node_modules/seedrandom/seedrandom.js\");\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLDJCQUEyQjtBQUMzQiwyQkFBMkI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyx5REFBWTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLDZEQUFjOztBQUVuQztBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsNkRBQWM7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLG1FQUFpQjs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsK0RBQWU7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsNkRBQWM7O0FBRW5DO0FBQ0E7QUFDQSxTQUFTLG1CQUFPLENBQUMsNkRBQWM7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9pbmRleC5qcz82MTI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEEgbGlicmFyeSBvZiBzZWVkYWJsZSBSTkdzIGltcGxlbWVudGVkIGluIEphdmFzY3JpcHQuXG4vL1xuLy8gVXNhZ2U6XG4vL1xuLy8gdmFyIHNlZWRyYW5kb20gPSByZXF1aXJlKCdzZWVkcmFuZG9tJyk7XG4vLyB2YXIgcmFuZG9tID0gc2VlZHJhbmRvbSgxKTsgLy8gb3IgYW55IHNlZWQuXG4vLyB2YXIgeCA9IHJhbmRvbSgpOyAgICAgICAvLyAwIDw9IHggPCAxLiAgRXZlcnkgYml0IGlzIHJhbmRvbS5cbi8vIHZhciB4ID0gcmFuZG9tLnF1aWNrKCk7IC8vIDAgPD0geCA8IDEuICAzMiBiaXRzIG9mIHJhbmRvbW5lc3MuXG5cbi8vIGFsZWEsIGEgNTMtYml0IG11bHRpcGx5LXdpdGgtY2FycnkgZ2VuZXJhdG9yIGJ5IEpvaGFubmVzIEJhYWfDuGUuXG4vLyBQZXJpb2Q6IH4yXjExNlxuLy8gUmVwb3J0ZWQgdG8gcGFzcyBhbGwgQmlnQ3J1c2ggdGVzdHMuXG52YXIgYWxlYSA9IHJlcXVpcmUoJy4vbGliL2FsZWEnKTtcblxuLy8geG9yMTI4LCBhIHB1cmUgeG9yLXNoaWZ0IGdlbmVyYXRvciBieSBHZW9yZ2UgTWFyc2FnbGlhLlxuLy8gUGVyaW9kOiAyXjEyOC0xLlxuLy8gUmVwb3J0ZWQgdG8gZmFpbDogTWF0cml4UmFuayBhbmQgTGluZWFyQ29tcC5cbnZhciB4b3IxMjggPSByZXF1aXJlKCcuL2xpYi94b3IxMjgnKTtcblxuLy8geG9yd293LCBHZW9yZ2UgTWFyc2FnbGlhJ3MgMTYwLWJpdCB4b3Itc2hpZnQgY29tYmluZWQgcGx1cyB3ZXlsLlxuLy8gUGVyaW9kOiAyXjE5Mi0yXjMyXG4vLyBSZXBvcnRlZCB0byBmYWlsOiBDb2xsaXNpb25PdmVyLCBTaW1wUG9rZXIsIGFuZCBMaW5lYXJDb21wLlxudmFyIHhvcndvdyA9IHJlcXVpcmUoJy4vbGliL3hvcndvdycpO1xuXG4vLyB4b3JzaGlmdDcsIGJ5IEZyYW7Dp29pcyBQYW5uZXRvbiBhbmQgUGllcnJlIEwnZWN1eWVyLCB0YWtlc1xuLy8gYSBkaWZmZXJlbnQgYXBwcm9hY2g6IGl0IGFkZHMgcm9idXN0bmVzcyBieSBhbGxvd2luZyBtb3JlIHNoaWZ0c1xuLy8gdGhhbiBNYXJzYWdsaWEncyBvcmlnaW5hbCB0aHJlZS4gIEl0IGlzIGEgNy1zaGlmdCBnZW5lcmF0b3Jcbi8vIHdpdGggMjU2IGJpdHMsIHRoYXQgcGFzc2VzIEJpZ0NydXNoIHdpdGggbm8gc3lzdG1hdGljIGZhaWx1cmVzLlxuLy8gUGVyaW9kIDJeMjU2LTEuXG4vLyBObyBzeXN0ZW1hdGljIEJpZ0NydXNoIGZhaWx1cmVzIHJlcG9ydGVkLlxudmFyIHhvcnNoaWZ0NyA9IHJlcXVpcmUoJy4vbGliL3hvcnNoaWZ0NycpO1xuXG4vLyB4b3I0MDk2LCBieSBSaWNoYXJkIEJyZW50LCBpcyBhIDQwOTYtYml0IHhvci1zaGlmdCB3aXRoIGFcbi8vIHZlcnkgbG9uZyBwZXJpb2QgdGhhdCBhbHNvIGFkZHMgYSBXZXlsIGdlbmVyYXRvci4gSXQgYWxzbyBwYXNzZXNcbi8vIEJpZ0NydXNoIHdpdGggbm8gc3lzdGVtYXRpYyBmYWlsdXJlcy4gIEl0cyBsb25nIHBlcmlvZCBtYXlcbi8vIGJlIHVzZWZ1bCBpZiB5b3UgaGF2ZSBtYW55IGdlbmVyYXRvcnMgYW5kIG5lZWQgdG8gYXZvaWRcbi8vIGNvbGxpc2lvbnMuXG4vLyBQZXJpb2Q6IDJeNDEyOC0yXjMyLlxuLy8gTm8gc3lzdGVtYXRpYyBCaWdDcnVzaCBmYWlsdXJlcyByZXBvcnRlZC5cbnZhciB4b3I0MDk2ID0gcmVxdWlyZSgnLi9saWIveG9yNDA5NicpO1xuXG4vLyBUeWNoZS1pLCBieSBTYW11ZWwgTmV2ZXMgYW5kIEZpbGlwZSBBcmF1am8sIGlzIGEgYml0LXNoaWZ0aW5nIHJhbmRvbVxuLy8gbnVtYmVyIGdlbmVyYXRvciBkZXJpdmVkIGZyb20gQ2hhQ2hhLCBhIG1vZGVybiBzdHJlYW0gY2lwaGVyLlxuLy8gaHR0cHM6Ly9lZGVuLmRlaS51Yy5wdC9+c25ldmVzL3B1YnMvMjAxMS1zbmZhMi5wZGZcbi8vIFBlcmlvZDogfjJeMTI3XG4vLyBObyBzeXN0ZW1hdGljIEJpZ0NydXNoIGZhaWx1cmVzIHJlcG9ydGVkLlxudmFyIHR5Y2hlaSA9IHJlcXVpcmUoJy4vbGliL3R5Y2hlaScpO1xuXG4vLyBUaGUgb3JpZ2luYWwgQVJDNC1iYXNlZCBwcm5nIGluY2x1ZGVkIGluIHRoaXMgbGlicmFyeS5cbi8vIFBlcmlvZDogfjJeMTYwMFxudmFyIHNyID0gcmVxdWlyZSgnLi9zZWVkcmFuZG9tJyk7XG5cbnNyLmFsZWEgPSBhbGVhO1xuc3IueG9yMTI4ID0geG9yMTI4O1xuc3IueG9yd293ID0geG9yd293O1xuc3IueG9yc2hpZnQ3ID0geG9yc2hpZnQ3O1xuc3IueG9yNDA5NiA9IHhvcjQwOTY7XG5zci50eWNoZWkgPSB0eWNoZWk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/index.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/alea.js":
/*!*********************************************!*\
  !*** ./node_modules/seedrandom/lib/alea.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIvYWxlYS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0Esc0VBQXNFO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQjtBQUNoRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLCtDQUErQztBQUMvQzs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0EsRUFBRSxTQUFTLHdCQUFNLElBQUksd0JBQVU7QUFDL0IsRUFBRSxtQ0FBTyxhQUFhLGNBQWM7QUFBQSxrR0FBQztBQUNyQyxFQUFFO0FBQ0Y7QUFDQTs7QUFFQSxDQUFDO0FBQ0Q7QUFDQSxFQUFFLEtBQTJCO0FBQzdCLEVBQUUsd0JBQXVDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9zZWVkcmFuZG9tL2xpYi9hbGVhLmpzPzEyMTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQSBwb3J0IG9mIGFuIGFsZ29yaXRobSBieSBKb2hhbm5lcyBCYWFnw7hlIDxiYWFnb2VAYmFhZ29lLmNvbT4sIDIwMTBcbi8vIGh0dHA6Ly9iYWFnb2UuY29tL2VuL1JhbmRvbU11c2luZ3MvamF2YXNjcmlwdC9cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ucXVpbmxhbi9iZXR0ZXItcmFuZG9tLW51bWJlcnMtZm9yLWphdmFzY3JpcHQtbWlycm9yXG4vLyBPcmlnaW5hbCB3b3JrIGlzIHVuZGVyIE1JVCBsaWNlbnNlIC1cblxuLy8gQ29weXJpZ2h0IChDKSAyMDEwIGJ5IEpvaGFubmVzIEJhYWfDuGUgPGJhYWdvZUBiYWFnb2Uub3JnPlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cblxuXG4oZnVuY3Rpb24oZ2xvYmFsLCBtb2R1bGUsIGRlZmluZSkge1xuXG5mdW5jdGlvbiBBbGVhKHNlZWQpIHtcbiAgdmFyIG1lID0gdGhpcywgbWFzaCA9IE1hc2goKTtcblxuICBtZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHQgPSAyMDkxNjM5ICogbWUuczAgKyBtZS5jICogMi4zMjgzMDY0MzY1Mzg2OTYzZS0xMDsgLy8gMl4tMzJcbiAgICBtZS5zMCA9IG1lLnMxO1xuICAgIG1lLnMxID0gbWUuczI7XG4gICAgcmV0dXJuIG1lLnMyID0gdCAtIChtZS5jID0gdCB8IDApO1xuICB9O1xuXG4gIC8vIEFwcGx5IHRoZSBzZWVkaW5nIGFsZ29yaXRobSBmcm9tIEJhYWdvZS5cbiAgbWUuYyA9IDE7XG4gIG1lLnMwID0gbWFzaCgnICcpO1xuICBtZS5zMSA9IG1hc2goJyAnKTtcbiAgbWUuczIgPSBtYXNoKCcgJyk7XG4gIG1lLnMwIC09IG1hc2goc2VlZCk7XG4gIGlmIChtZS5zMCA8IDApIHsgbWUuczAgKz0gMTsgfVxuICBtZS5zMSAtPSBtYXNoKHNlZWQpO1xuICBpZiAobWUuczEgPCAwKSB7IG1lLnMxICs9IDE7IH1cbiAgbWUuczIgLT0gbWFzaChzZWVkKTtcbiAgaWYgKG1lLnMyIDwgMCkgeyBtZS5zMiArPSAxOyB9XG4gIG1hc2ggPSBudWxsO1xufVxuXG5mdW5jdGlvbiBjb3B5KGYsIHQpIHtcbiAgdC5jID0gZi5jO1xuICB0LnMwID0gZi5zMDtcbiAgdC5zMSA9IGYuczE7XG4gIHQuczIgPSBmLnMyO1xuICByZXR1cm4gdDtcbn1cblxuZnVuY3Rpb24gaW1wbChzZWVkLCBvcHRzKSB7XG4gIHZhciB4ZyA9IG5ldyBBbGVhKHNlZWQpLFxuICAgICAgc3RhdGUgPSBvcHRzICYmIG9wdHMuc3RhdGUsXG4gICAgICBwcm5nID0geGcubmV4dDtcbiAgcHJuZy5pbnQzMiA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gKHhnLm5leHQoKSAqIDB4MTAwMDAwMDAwKSB8IDA7IH1cbiAgcHJuZy5kb3VibGUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gcHJuZygpICsgKHBybmcoKSAqIDB4MjAwMDAwIHwgMCkgKiAxLjExMDIyMzAyNDYyNTE1NjVlLTE2OyAvLyAyXi01M1xuICB9O1xuICBwcm5nLnF1aWNrID0gcHJuZztcbiAgaWYgKHN0YXRlKSB7XG4gICAgaWYgKHR5cGVvZihzdGF0ZSkgPT0gJ29iamVjdCcpIGNvcHkoc3RhdGUsIHhnKTtcbiAgICBwcm5nLnN0YXRlID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb3B5KHhnLCB7fSk7IH1cbiAgfVxuICByZXR1cm4gcHJuZztcbn1cblxuZnVuY3Rpb24gTWFzaCgpIHtcbiAgdmFyIG4gPSAweGVmYzgyNDlkO1xuXG4gIHZhciBtYXNoID0gZnVuY3Rpb24oZGF0YSkge1xuICAgIGRhdGEgPSBTdHJpbmcoZGF0YSk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBuICs9IGRhdGEuY2hhckNvZGVBdChpKTtcbiAgICAgIHZhciBoID0gMC4wMjUxOTYwMzI4MjQxNjkzOCAqIG47XG4gICAgICBuID0gaCA+Pj4gMDtcbiAgICAgIGggLT0gbjtcbiAgICAgIGggKj0gbjtcbiAgICAgIG4gPSBoID4+PiAwO1xuICAgICAgaCAtPSBuO1xuICAgICAgbiArPSBoICogMHgxMDAwMDAwMDA7IC8vIDJeMzJcbiAgICB9XG4gICAgcmV0dXJuIChuID4+PiAwKSAqIDIuMzI4MzA2NDM2NTM4Njk2M2UtMTA7IC8vIDJeLTMyXG4gIH07XG5cbiAgcmV0dXJuIG1hc2g7XG59XG5cblxuaWYgKG1vZHVsZSAmJiBtb2R1bGUuZXhwb3J0cykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGltcGw7XG59IGVsc2UgaWYgKGRlZmluZSAmJiBkZWZpbmUuYW1kKSB7XG4gIGRlZmluZShmdW5jdGlvbigpIHsgcmV0dXJuIGltcGw7IH0pO1xufSBlbHNlIHtcbiAgdGhpcy5hbGVhID0gaW1wbDtcbn1cblxufSkoXG4gIHRoaXMsXG4gICh0eXBlb2YgbW9kdWxlKSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUsICAgIC8vIHByZXNlbnQgaW4gbm9kZS5qc1xuICAodHlwZW9mIGRlZmluZSkgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUgICAvLyBwcmVzZW50IHdpdGggYW4gQU1EIGxvYWRlclxuKTtcblxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/alea.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/tychei.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/tychei.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIvdHljaGVpLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQix5QkFBeUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQjtBQUNoRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUUsU0FBUyx3QkFBTSxJQUFJLHdCQUFVO0FBQy9CLEVBQUUsbUNBQU8sYUFBYSxjQUFjO0FBQUEsa0dBQUM7QUFDckMsRUFBRTtBQUNGO0FBQ0E7O0FBRUEsQ0FBQztBQUNEO0FBQ0EsRUFBRSxLQUEyQjtBQUM3QixFQUFFLHdCQUF1QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIvdHljaGVpLmpzPzg5ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQSBKYXZhc2NyaXB0IGltcGxlbWVudGFpb24gb2YgdGhlIFwiVHljaGUtaVwiIHBybmcgYWxnb3JpdGhtIGJ5XG4vLyBTYW11ZWwgTmV2ZXMgYW5kIEZpbGlwZSBBcmF1am8uXG4vLyBTZWUgaHR0cHM6Ly9lZGVuLmRlaS51Yy5wdC9+c25ldmVzL3B1YnMvMjAxMS1zbmZhMi5wZGZcblxuKGZ1bmN0aW9uKGdsb2JhbCwgbW9kdWxlLCBkZWZpbmUpIHtcblxuZnVuY3Rpb24gWG9yR2VuKHNlZWQpIHtcbiAgdmFyIG1lID0gdGhpcywgc3Ryc2VlZCA9ICcnO1xuXG4gIC8vIFNldCB1cCBnZW5lcmF0b3IgZnVuY3Rpb24uXG4gIG1lLm5leHQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgYiA9IG1lLmIsIGMgPSBtZS5jLCBkID0gbWUuZCwgYSA9IG1lLmE7XG4gICAgYiA9IChiIDw8IDI1KSBeIChiID4+PiA3KSBeIGM7XG4gICAgYyA9IChjIC0gZCkgfCAwO1xuICAgIGQgPSAoZCA8PCAyNCkgXiAoZCA+Pj4gOCkgXiBhO1xuICAgIGEgPSAoYSAtIGIpIHwgMDtcbiAgICBtZS5iID0gYiA9IChiIDw8IDIwKSBeIChiID4+PiAxMikgXiBjO1xuICAgIG1lLmMgPSBjID0gKGMgLSBkKSB8IDA7XG4gICAgbWUuZCA9IChkIDw8IDE2KSBeIChjID4+PiAxNikgXiBhO1xuICAgIHJldHVybiBtZS5hID0gKGEgLSBiKSB8IDA7XG4gIH07XG5cbiAgLyogVGhlIGZvbGxvd2luZyBpcyBub24taW52ZXJ0ZWQgdHljaGUsIHdoaWNoIGhhcyBiZXR0ZXIgaW50ZXJuYWxcbiAgICogYml0IGRpZmZ1c2lvbiwgYnV0IHdoaWNoIGlzIGFib3V0IDI1JSBzbG93ZXIgdGhhbiB0eWNoZS1pIGluIEpTLlxuICBtZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGEgPSBtZS5hLCBiID0gbWUuYiwgYyA9IG1lLmMsIGQgPSBtZS5kO1xuICAgIGEgPSAobWUuYSArIG1lLmIgfCAwKSA+Pj4gMDtcbiAgICBkID0gbWUuZCBeIGE7IGQgPSBkIDw8IDE2IF4gZCA+Pj4gMTY7XG4gICAgYyA9IG1lLmMgKyBkIHwgMDtcbiAgICBiID0gbWUuYiBeIGM7IGIgPSBiIDw8IDEyIF4gZCA+Pj4gMjA7XG4gICAgbWUuYSA9IGEgPSBhICsgYiB8IDA7XG4gICAgZCA9IGQgXiBhOyBtZS5kID0gZCA9IGQgPDwgOCBeIGQgPj4+IDI0O1xuICAgIG1lLmMgPSBjID0gYyArIGQgfCAwO1xuICAgIGIgPSBiIF4gYztcbiAgICByZXR1cm4gbWUuYiA9IChiIDw8IDcgXiBiID4+PiAyNSk7XG4gIH1cbiAgKi9cblxuICBtZS5hID0gMDtcbiAgbWUuYiA9IDA7XG4gIG1lLmMgPSAyNjU0NDM1NzY5IHwgMDtcbiAgbWUuZCA9IDEzNjcxMzA1NTE7XG5cbiAgaWYgKHNlZWQgPT09IE1hdGguZmxvb3Ioc2VlZCkpIHtcbiAgICAvLyBJbnRlZ2VyIHNlZWQuXG4gICAgbWUuYSA9IChzZWVkIC8gMHgxMDAwMDAwMDApIHwgMDtcbiAgICBtZS5iID0gc2VlZCB8IDA7XG4gIH0gZWxzZSB7XG4gICAgLy8gU3RyaW5nIHNlZWQuXG4gICAgc3Ryc2VlZCArPSBzZWVkO1xuICB9XG5cbiAgLy8gTWl4IGluIHN0cmluZyBzZWVkLCB0aGVuIGRpc2NhcmQgYW4gaW5pdGlhbCBiYXRjaCBvZiA2NCB2YWx1ZXMuXG4gIGZvciAodmFyIGsgPSAwOyBrIDwgc3Ryc2VlZC5sZW5ndGggKyAyMDsgaysrKSB7XG4gICAgbWUuYiBePSBzdHJzZWVkLmNoYXJDb2RlQXQoaykgfCAwO1xuICAgIG1lLm5leHQoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb3B5KGYsIHQpIHtcbiAgdC5hID0gZi5hO1xuICB0LmIgPSBmLmI7XG4gIHQuYyA9IGYuYztcbiAgdC5kID0gZi5kO1xuICByZXR1cm4gdDtcbn07XG5cbmZ1bmN0aW9uIGltcGwoc2VlZCwgb3B0cykge1xuICB2YXIgeGcgPSBuZXcgWG9yR2VuKHNlZWQpLFxuICAgICAgc3RhdGUgPSBvcHRzICYmIG9wdHMuc3RhdGUsXG4gICAgICBwcm5nID0gZnVuY3Rpb24oKSB7IHJldHVybiAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwOyB9O1xuICBwcm5nLmRvdWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgIGRvIHtcbiAgICAgIHZhciB0b3AgPSB4Zy5uZXh0KCkgPj4+IDExLFxuICAgICAgICAgIGJvdCA9ICh4Zy5uZXh0KCkgPj4+IDApIC8gMHgxMDAwMDAwMDAsXG4gICAgICAgICAgcmVzdWx0ID0gKHRvcCArIGJvdCkgLyAoMSA8PCAyMSk7XG4gICAgfSB3aGlsZSAocmVzdWx0ID09PSAwKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICBwcm5nLmludDMyID0geGcubmV4dDtcbiAgcHJuZy5xdWljayA9IHBybmc7XG4gIGlmIChzdGF0ZSkge1xuICAgIGlmICh0eXBlb2Yoc3RhdGUpID09ICdvYmplY3QnKSBjb3B5KHN0YXRlLCB4Zyk7XG4gICAgcHJuZy5zdGF0ZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29weSh4Zywge30pOyB9XG4gIH1cbiAgcmV0dXJuIHBybmc7XG59XG5cbmlmIChtb2R1bGUgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBpbXBsO1xufSBlbHNlIGlmIChkZWZpbmUgJiYgZGVmaW5lLmFtZCkge1xuICBkZWZpbmUoZnVuY3Rpb24oKSB7IHJldHVybiBpbXBsOyB9KTtcbn0gZWxzZSB7XG4gIHRoaXMudHljaGVpID0gaW1wbDtcbn1cblxufSkoXG4gIHRoaXMsXG4gICh0eXBlb2YgbW9kdWxlKSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUsICAgIC8vIHByZXNlbnQgaW4gbm9kZS5qc1xuICAodHlwZW9mIGRlZmluZSkgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUgICAvLyBwcmVzZW50IHdpdGggYW4gQU1EIGxvYWRlclxuKTtcblxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/tychei.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor128.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xor128.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yMTI4LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsa0JBQWtCO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxTQUFTLHdCQUFNLElBQUksd0JBQVU7QUFDL0IsRUFBRSxtQ0FBTyxhQUFhLGNBQWM7QUFBQSxrR0FBQztBQUNyQyxFQUFFO0FBQ0Y7QUFDQTs7QUFFQSxDQUFDO0FBQ0Q7QUFDQSxFQUFFLEtBQTJCO0FBQzdCLEVBQUUsd0JBQXVDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9zZWVkcmFuZG9tL2xpYi94b3IxMjguanM/YjgzOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBIEphdmFzY3JpcHQgaW1wbGVtZW50YWlvbiBvZiB0aGUgXCJ4b3IxMjhcIiBwcm5nIGFsZ29yaXRobSBieVxuLy8gR2VvcmdlIE1hcnNhZ2xpYS4gIFNlZSBodHRwOi8vd3d3LmpzdGF0c29mdC5vcmcvdjA4L2kxNC9wYXBlclxuXG4oZnVuY3Rpb24oZ2xvYmFsLCBtb2R1bGUsIGRlZmluZSkge1xuXG5mdW5jdGlvbiBYb3JHZW4oc2VlZCkge1xuICB2YXIgbWUgPSB0aGlzLCBzdHJzZWVkID0gJyc7XG5cbiAgbWUueCA9IDA7XG4gIG1lLnkgPSAwO1xuICBtZS56ID0gMDtcbiAgbWUudyA9IDA7XG5cbiAgLy8gU2V0IHVwIGdlbmVyYXRvciBmdW5jdGlvbi5cbiAgbWUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB0ID0gbWUueCBeIChtZS54IDw8IDExKTtcbiAgICBtZS54ID0gbWUueTtcbiAgICBtZS55ID0gbWUuejtcbiAgICBtZS56ID0gbWUudztcbiAgICByZXR1cm4gbWUudyBePSAobWUudyA+Pj4gMTkpIF4gdCBeICh0ID4+PiA4KTtcbiAgfTtcblxuICBpZiAoc2VlZCA9PT0gKHNlZWQgfCAwKSkge1xuICAgIC8vIEludGVnZXIgc2VlZC5cbiAgICBtZS54ID0gc2VlZDtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdHJpbmcgc2VlZC5cbiAgICBzdHJzZWVkICs9IHNlZWQ7XG4gIH1cblxuICAvLyBNaXggaW4gc3RyaW5nIHNlZWQsIHRoZW4gZGlzY2FyZCBhbiBpbml0aWFsIGJhdGNoIG9mIDY0IHZhbHVlcy5cbiAgZm9yICh2YXIgayA9IDA7IGsgPCBzdHJzZWVkLmxlbmd0aCArIDY0OyBrKyspIHtcbiAgICBtZS54IF49IHN0cnNlZWQuY2hhckNvZGVBdChrKSB8IDA7XG4gICAgbWUubmV4dCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNvcHkoZiwgdCkge1xuICB0LnggPSBmLng7XG4gIHQueSA9IGYueTtcbiAgdC56ID0gZi56O1xuICB0LncgPSBmLnc7XG4gIHJldHVybiB0O1xufVxuXG5mdW5jdGlvbiBpbXBsKHNlZWQsIG9wdHMpIHtcbiAgdmFyIHhnID0gbmV3IFhvckdlbihzZWVkKSxcbiAgICAgIHN0YXRlID0gb3B0cyAmJiBvcHRzLnN0YXRlLFxuICAgICAgcHJuZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gKHhnLm5leHQoKSA+Pj4gMCkgLyAweDEwMDAwMDAwMDsgfTtcbiAgcHJuZy5kb3VibGUgPSBmdW5jdGlvbigpIHtcbiAgICBkbyB7XG4gICAgICB2YXIgdG9wID0geGcubmV4dCgpID4+PiAxMSxcbiAgICAgICAgICBib3QgPSAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwLFxuICAgICAgICAgIHJlc3VsdCA9ICh0b3AgKyBib3QpIC8gKDEgPDwgMjEpO1xuICAgIH0gd2hpbGUgKHJlc3VsdCA9PT0gMCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcHJuZy5pbnQzMiA9IHhnLm5leHQ7XG4gIHBybmcucXVpY2sgPSBwcm5nO1xuICBpZiAoc3RhdGUpIHtcbiAgICBpZiAodHlwZW9mKHN0YXRlKSA9PSAnb2JqZWN0JykgY29weShzdGF0ZSwgeGcpO1xuICAgIHBybmcuc3RhdGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvcHkoeGcsIHt9KTsgfVxuICB9XG4gIHJldHVybiBwcm5nO1xufVxuXG5pZiAobW9kdWxlICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gaW1wbDtcbn0gZWxzZSBpZiAoZGVmaW5lICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gaW1wbDsgfSk7XG59IGVsc2Uge1xuICB0aGlzLnhvcjEyOCA9IGltcGw7XG59XG5cbn0pKFxuICB0aGlzLFxuICAodHlwZW9mIG1vZHVsZSkgPT0gJ29iamVjdCcgJiYgbW9kdWxlLCAgICAvLyBwcmVzZW50IGluIG5vZGUuanNcbiAgKHR5cGVvZiBkZWZpbmUpID09ICdmdW5jdGlvbicgJiYgZGVmaW5lICAgLy8gcHJlc2VudCB3aXRoIGFuIEFNRCBsb2FkZXJcbik7XG5cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xor128.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor4096.js":
/*!************************************************!*\
  !*** ./node_modules/seedrandom/lib/xor4096.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yNDA5Ni5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0MsK0NBQStDO0FBQy9DLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixXQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QyxzQ0FBc0M7QUFDdEMsc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsT0FBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQkFBa0I7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFLFNBQVMsd0JBQU0sSUFBSSx3QkFBVTtBQUMvQixFQUFFLG1DQUFPLGFBQWEsY0FBYztBQUFBLGtHQUFDO0FBQ3JDLEVBQUU7QUFDRjtBQUNBOztBQUVBLENBQUM7QUFDRDtBQUNBLEVBQUUsS0FBMkI7QUFDN0IsRUFBRSx3QkFBdUM7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vbm9kZV9tb2R1bGVzL3NlZWRyYW5kb20vbGliL3hvcjQwOTYuanM/N2FlYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBIEphdmFzY3JpcHQgaW1wbGVtZW50YWlvbiBvZiBSaWNoYXJkIEJyZW50J3MgWG9yZ2VucyB4b3I0MDk2IGFsZ29yaXRobS5cbi8vXG4vLyBUaGlzIGZhc3Qgbm9uLWNyeXB0b2dyYXBoaWMgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgaXMgZGVzaWduZWQgZm9yXG4vLyB1c2UgaW4gTW9udGUtQ2FybG8gYWxnb3JpdGhtcy4gSXQgY29tYmluZXMgYSBsb25nLXBlcmlvZCB4b3JzaGlmdFxuLy8gZ2VuZXJhdG9yIHdpdGggYSBXZXlsIGdlbmVyYXRvciwgYW5kIGl0IHBhc3NlcyBhbGwgY29tbW9uIGJhdHRlcmllc1xuLy8gb2Ygc3Rhc3RpY2lhbCB0ZXN0cyBmb3IgcmFuZG9tbmVzcyB3aGlsZSBjb25zdW1pbmcgb25seSBhIGZldyBuYW5vc2Vjb25kc1xuLy8gZm9yIGVhY2ggcHJuZyBnZW5lcmF0ZWQuICBGb3IgYmFja2dyb3VuZCBvbiB0aGUgZ2VuZXJhdG9yLCBzZWUgQnJlbnQnc1xuLy8gcGFwZXI6IFwiU29tZSBsb25nLXBlcmlvZCByYW5kb20gbnVtYmVyIGdlbmVyYXRvcnMgdXNpbmcgc2hpZnRzIGFuZCB4b3JzLlwiXG4vLyBodHRwOi8vYXJ4aXYub3JnL3BkZi8xMDA0LjMxMTV2MS5wZGZcbi8vXG4vLyBVc2FnZTpcbi8vXG4vLyB2YXIgeG9yNDA5NiA9IHJlcXVpcmUoJ3hvcjQwOTYnKTtcbi8vIHJhbmRvbSA9IHhvcjQwOTYoMSk7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2VlZCB3aXRoIGludDMyIG9yIHN0cmluZy5cbi8vIGFzc2VydC5lcXVhbChyYW5kb20oKSwgMC4xNTIwNDM2NDUwNTM4NTQ3KTsgLy8gKDAsIDEpIHJhbmdlLCA1MyBiaXRzLlxuLy8gYXNzZXJ0LmVxdWFsKHJhbmRvbS5pbnQzMigpLCAxODA2NTM0ODk3KTsgICAvLyBzaWduZWQgaW50MzIsIDMyIGJpdHMuXG4vL1xuLy8gRm9yIG5vbnplcm8gbnVtZXJpYyBrZXlzLCB0aGlzIGltcGVsZW1lbnRhdGlvbiBwcm92aWRlcyBhIHNlcXVlbmNlXG4vLyBpZGVudGljYWwgdG8gdGhhdCBieSBCcmVudCdzIHhvcmdlbnMgMyBpbXBsZW1lbnRhaW9uIGluIEMuICBUaGlzXG4vLyBpbXBsZW1lbnRhdGlvbiBhbHNvIHByb3ZpZGVzIGZvciBpbml0YWxpemluZyB0aGUgZ2VuZXJhdG9yIHdpdGhcbi8vIHN0cmluZyBzZWVkcywgb3IgZm9yIHNhdmluZyBhbmQgcmVzdG9yaW5nIHRoZSBzdGF0ZSBvZiB0aGUgZ2VuZXJhdG9yLlxuLy9cbi8vIE9uIENocm9tZSwgdGhpcyBwcm5nIGJlbmNobWFya3MgYWJvdXQgMi4xIHRpbWVzIHNsb3dlciB0aGFuXG4vLyBKYXZhc2NyaXB0J3MgYnVpbHQtaW4gTWF0aC5yYW5kb20oKS5cblxuKGZ1bmN0aW9uKGdsb2JhbCwgbW9kdWxlLCBkZWZpbmUpIHtcblxuZnVuY3Rpb24gWG9yR2VuKHNlZWQpIHtcbiAgdmFyIG1lID0gdGhpcztcblxuICAvLyBTZXQgdXAgZ2VuZXJhdG9yIGZ1bmN0aW9uLlxuICBtZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHcgPSBtZS53LFxuICAgICAgICBYID0gbWUuWCwgaSA9IG1lLmksIHQsIHY7XG4gICAgLy8gVXBkYXRlIFdleWwgZ2VuZXJhdG9yLlxuICAgIG1lLncgPSB3ID0gKHcgKyAweDYxYzg4NjQ3KSB8IDA7XG4gICAgLy8gVXBkYXRlIHhvciBnZW5lcmF0b3IuXG4gICAgdiA9IFhbKGkgKyAzNCkgJiAxMjddO1xuICAgIHQgPSBYW2kgPSAoKGkgKyAxKSAmIDEyNyldO1xuICAgIHYgXj0gdiA8PCAxMztcbiAgICB0IF49IHQgPDwgMTc7XG4gICAgdiBePSB2ID4+PiAxNTtcbiAgICB0IF49IHQgPj4+IDEyO1xuICAgIC8vIFVwZGF0ZSBYb3IgZ2VuZXJhdG9yIGFycmF5IHN0YXRlLlxuICAgIHYgPSBYW2ldID0gdiBeIHQ7XG4gICAgbWUuaSA9IGk7XG4gICAgLy8gUmVzdWx0IGlzIHRoZSBjb21iaW5hdGlvbi5cbiAgICByZXR1cm4gKHYgKyAodyBeICh3ID4+PiAxNikpKSB8IDA7XG4gIH07XG5cbiAgZnVuY3Rpb24gaW5pdChtZSwgc2VlZCkge1xuICAgIHZhciB0LCB2LCBpLCBqLCB3LCBYID0gW10sIGxpbWl0ID0gMTI4O1xuICAgIGlmIChzZWVkID09PSAoc2VlZCB8IDApKSB7XG4gICAgICAvLyBOdW1lcmljIHNlZWRzIGluaXRpYWxpemUgdiwgd2hpY2ggaXMgdXNlZCB0byBnZW5lcmF0ZXMgWC5cbiAgICAgIHYgPSBzZWVkO1xuICAgICAgc2VlZCA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFN0cmluZyBzZWVkcyBhcmUgbWl4ZWQgaW50byB2IGFuZCBYIG9uZSBjaGFyYWN0ZXIgYXQgYSB0aW1lLlxuICAgICAgc2VlZCA9IHNlZWQgKyAnXFwwJztcbiAgICAgIHYgPSAwO1xuICAgICAgbGltaXQgPSBNYXRoLm1heChsaW1pdCwgc2VlZC5sZW5ndGgpO1xuICAgIH1cbiAgICAvLyBJbml0aWFsaXplIGNpcmN1bGFyIGFycmF5IGFuZCB3ZXlsIHZhbHVlLlxuICAgIGZvciAoaSA9IDAsIGogPSAtMzI7IGogPCBsaW1pdDsgKytqKSB7XG4gICAgICAvLyBQdXQgdGhlIHVuaWNvZGUgY2hhcmFjdGVycyBpbnRvIHRoZSBhcnJheSwgYW5kIHNodWZmbGUgdGhlbS5cbiAgICAgIGlmIChzZWVkKSB2IF49IHNlZWQuY2hhckNvZGVBdCgoaiArIDMyKSAlIHNlZWQubGVuZ3RoKTtcbiAgICAgIC8vIEFmdGVyIDMyIHNodWZmbGVzLCB0YWtlIHYgYXMgdGhlIHN0YXJ0aW5nIHcgdmFsdWUuXG4gICAgICBpZiAoaiA9PT0gMCkgdyA9IHY7XG4gICAgICB2IF49IHYgPDwgMTA7XG4gICAgICB2IF49IHYgPj4+IDE1O1xuICAgICAgdiBePSB2IDw8IDQ7XG4gICAgICB2IF49IHYgPj4+IDEzO1xuICAgICAgaWYgKGogPj0gMCkge1xuICAgICAgICB3ID0gKHcgKyAweDYxYzg4NjQ3KSB8IDA7ICAgICAvLyBXZXlsLlxuICAgICAgICB0ID0gKFhbaiAmIDEyN10gXj0gKHYgKyB3KSk7ICAvLyBDb21iaW5lIHhvciBhbmQgd2V5bCB0byBpbml0IGFycmF5LlxuICAgICAgICBpID0gKDAgPT0gdCkgPyBpICsgMSA6IDA7ICAgICAvLyBDb3VudCB6ZXJvZXMuXG4gICAgICB9XG4gICAgfVxuICAgIC8vIFdlIGhhdmUgZGV0ZWN0ZWQgYWxsIHplcm9lczsgbWFrZSB0aGUga2V5IG5vbnplcm8uXG4gICAgaWYgKGkgPj0gMTI4KSB7XG4gICAgICBYWyhzZWVkICYmIHNlZWQubGVuZ3RoIHx8IDApICYgMTI3XSA9IC0xO1xuICAgIH1cbiAgICAvLyBSdW4gdGhlIGdlbmVyYXRvciA1MTIgdGltZXMgdG8gZnVydGhlciBtaXggdGhlIHN0YXRlIGJlZm9yZSB1c2luZyBpdC5cbiAgICAvLyBGYWN0b3JpbmcgdGhpcyBhcyBhIGZ1bmN0aW9uIHNsb3dzIHRoZSBtYWluIGdlbmVyYXRvciwgc28gaXQgaXMganVzdFxuICAgIC8vIHVucm9sbGVkIGhlcmUuICBUaGUgd2V5bCBnZW5lcmF0b3IgaXMgbm90IGFkdmFuY2VkIHdoaWxlIHdhcm1pbmcgdXAuXG4gICAgaSA9IDEyNztcbiAgICBmb3IgKGogPSA0ICogMTI4OyBqID4gMDsgLS1qKSB7XG4gICAgICB2ID0gWFsoaSArIDM0KSAmIDEyN107XG4gICAgICB0ID0gWFtpID0gKChpICsgMSkgJiAxMjcpXTtcbiAgICAgIHYgXj0gdiA8PCAxMztcbiAgICAgIHQgXj0gdCA8PCAxNztcbiAgICAgIHYgXj0gdiA+Pj4gMTU7XG4gICAgICB0IF49IHQgPj4+IDEyO1xuICAgICAgWFtpXSA9IHYgXiB0O1xuICAgIH1cbiAgICAvLyBTdG9yaW5nIHN0YXRlIGFzIG9iamVjdCBtZW1iZXJzIGlzIGZhc3RlciB0aGFuIHVzaW5nIGNsb3N1cmUgdmFyaWFibGVzLlxuICAgIG1lLncgPSB3O1xuICAgIG1lLlggPSBYO1xuICAgIG1lLmkgPSBpO1xuICB9XG5cbiAgaW5pdChtZSwgc2VlZCk7XG59XG5cbmZ1bmN0aW9uIGNvcHkoZiwgdCkge1xuICB0LmkgPSBmLmk7XG4gIHQudyA9IGYudztcbiAgdC5YID0gZi5YLnNsaWNlKCk7XG4gIHJldHVybiB0O1xufTtcblxuZnVuY3Rpb24gaW1wbChzZWVkLCBvcHRzKSB7XG4gIGlmIChzZWVkID09IG51bGwpIHNlZWQgPSArKG5ldyBEYXRlKTtcbiAgdmFyIHhnID0gbmV3IFhvckdlbihzZWVkKSxcbiAgICAgIHN0YXRlID0gb3B0cyAmJiBvcHRzLnN0YXRlLFxuICAgICAgcHJuZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gKHhnLm5leHQoKSA+Pj4gMCkgLyAweDEwMDAwMDAwMDsgfTtcbiAgcHJuZy5kb3VibGUgPSBmdW5jdGlvbigpIHtcbiAgICBkbyB7XG4gICAgICB2YXIgdG9wID0geGcubmV4dCgpID4+PiAxMSxcbiAgICAgICAgICBib3QgPSAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwLFxuICAgICAgICAgIHJlc3VsdCA9ICh0b3AgKyBib3QpIC8gKDEgPDwgMjEpO1xuICAgIH0gd2hpbGUgKHJlc3VsdCA9PT0gMCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcHJuZy5pbnQzMiA9IHhnLm5leHQ7XG4gIHBybmcucXVpY2sgPSBwcm5nO1xuICBpZiAoc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUuWCkgY29weShzdGF0ZSwgeGcpO1xuICAgIHBybmcuc3RhdGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvcHkoeGcsIHt9KTsgfVxuICB9XG4gIHJldHVybiBwcm5nO1xufVxuXG5pZiAobW9kdWxlICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gaW1wbDtcbn0gZWxzZSBpZiAoZGVmaW5lICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gaW1wbDsgfSk7XG59IGVsc2Uge1xuICB0aGlzLnhvcjQwOTYgPSBpbXBsO1xufVxuXG59KShcbiAgdGhpcywgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2luZG93IG9iamVjdCBvciBnbG9iYWxcbiAgKHR5cGVvZiBtb2R1bGUpID09ICdvYmplY3QnICYmIG1vZHVsZSwgICAgLy8gcHJlc2VudCBpbiBub2RlLmpzXG4gICh0eXBlb2YgZGVmaW5lKSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZSAgIC8vIHByZXNlbnQgd2l0aCBhbiBBTUQgbG9hZGVyXG4pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xor4096.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorshift7.js":
/*!**************************************************!*\
  !*** ./node_modules/seedrandom/lib/xorshift7.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yc2hpZnQ3LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUIsd0JBQXdCO0FBQ3hCLHdCQUF3QjtBQUN4Qix3QkFBd0I7QUFDeEIsd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDLCtCQUErQjs7QUFFL0I7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixPQUFPO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsa0JBQWtCO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxTQUFTLHdCQUFNLElBQUksd0JBQVU7QUFDL0IsRUFBRSxtQ0FBTyxhQUFhLGNBQWM7QUFBQSxrR0FBQztBQUNyQyxFQUFFO0FBQ0Y7QUFDQTs7QUFFQSxDQUFDO0FBQ0Q7QUFDQSxFQUFFLEtBQTJCO0FBQzdCLEVBQUUsd0JBQXVDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL25vZGVfbW9kdWxlcy9zZWVkcmFuZG9tL2xpYi94b3JzaGlmdDcuanM/Y2FlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBIEphdmFzY3JpcHQgaW1wbGVtZW50YWlvbiBvZiB0aGUgXCJ4b3JzaGlmdDdcIiBhbGdvcml0aG0gYnlcbi8vIEZyYW7Dp29pcyBQYW5uZXRvbiBhbmQgUGllcnJlIEwnZWN1eWVyOlxuLy8gXCJPbiB0aGUgWG9yZ3NoaWZ0IFJhbmRvbSBOdW1iZXIgR2VuZXJhdG9yc1wiXG4vLyBodHRwOi8vc2FsdWMuZW5nci51Y29ubi5lZHUvcmVmcy9jcnlwdG8vcm5nL3Bhbm5ldG9uMDVvbnRoZXhvcnNoaWZ0LnBkZlxuXG4oZnVuY3Rpb24oZ2xvYmFsLCBtb2R1bGUsIGRlZmluZSkge1xuXG5mdW5jdGlvbiBYb3JHZW4oc2VlZCkge1xuICB2YXIgbWUgPSB0aGlzO1xuXG4gIC8vIFNldCB1cCBnZW5lcmF0b3IgZnVuY3Rpb24uXG4gIG1lLm5leHQgPSBmdW5jdGlvbigpIHtcbiAgICAvLyBVcGRhdGUgeG9yIGdlbmVyYXRvci5cbiAgICB2YXIgWCA9IG1lLngsIGkgPSBtZS5pLCB0LCB2LCB3O1xuICAgIHQgPSBYW2ldOyB0IF49ICh0ID4+PiA3KTsgdiA9IHQgXiAodCA8PCAyNCk7XG4gICAgdCA9IFhbKGkgKyAxKSAmIDddOyB2IF49IHQgXiAodCA+Pj4gMTApO1xuICAgIHQgPSBYWyhpICsgMykgJiA3XTsgdiBePSB0IF4gKHQgPj4+IDMpO1xuICAgIHQgPSBYWyhpICsgNCkgJiA3XTsgdiBePSB0IF4gKHQgPDwgNyk7XG4gICAgdCA9IFhbKGkgKyA3KSAmIDddOyB0ID0gdCBeICh0IDw8IDEzKTsgdiBePSB0IF4gKHQgPDwgOSk7XG4gICAgWFtpXSA9IHY7XG4gICAgbWUuaSA9IChpICsgMSkgJiA3O1xuICAgIHJldHVybiB2O1xuICB9O1xuXG4gIGZ1bmN0aW9uIGluaXQobWUsIHNlZWQpIHtcbiAgICB2YXIgaiwgdywgWCA9IFtdO1xuXG4gICAgaWYgKHNlZWQgPT09IChzZWVkIHwgMCkpIHtcbiAgICAgIC8vIFNlZWQgc3RhdGUgYXJyYXkgdXNpbmcgYSAzMi1iaXQgaW50ZWdlci5cbiAgICAgIHcgPSBYWzBdID0gc2VlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gU2VlZCBzdGF0ZSB1c2luZyBhIHN0cmluZy5cbiAgICAgIHNlZWQgPSAnJyArIHNlZWQ7XG4gICAgICBmb3IgKGogPSAwOyBqIDwgc2VlZC5sZW5ndGg7ICsraikge1xuICAgICAgICBYW2ogJiA3XSA9IChYW2ogJiA3XSA8PCAxNSkgXlxuICAgICAgICAgICAgKHNlZWQuY2hhckNvZGVBdChqKSArIFhbKGogKyAxKSAmIDddIDw8IDEzKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gRW5mb3JjZSBhbiBhcnJheSBsZW5ndGggb2YgOCwgbm90IGFsbCB6ZXJvZXMuXG4gICAgd2hpbGUgKFgubGVuZ3RoIDwgOCkgWC5wdXNoKDApO1xuICAgIGZvciAoaiA9IDA7IGogPCA4ICYmIFhbal0gPT09IDA7ICsraik7XG4gICAgaWYgKGogPT0gOCkgdyA9IFhbN10gPSAtMTsgZWxzZSB3ID0gWFtqXTtcblxuICAgIG1lLnggPSBYO1xuICAgIG1lLmkgPSAwO1xuXG4gICAgLy8gRGlzY2FyZCBhbiBpbml0aWFsIDI1NiB2YWx1ZXMuXG4gICAgZm9yIChqID0gMjU2OyBqID4gMDsgLS1qKSB7XG4gICAgICBtZS5uZXh0KCk7XG4gICAgfVxuICB9XG5cbiAgaW5pdChtZSwgc2VlZCk7XG59XG5cbmZ1bmN0aW9uIGNvcHkoZiwgdCkge1xuICB0LnggPSBmLnguc2xpY2UoKTtcbiAgdC5pID0gZi5pO1xuICByZXR1cm4gdDtcbn1cblxuZnVuY3Rpb24gaW1wbChzZWVkLCBvcHRzKSB7XG4gIGlmIChzZWVkID09IG51bGwpIHNlZWQgPSArKG5ldyBEYXRlKTtcbiAgdmFyIHhnID0gbmV3IFhvckdlbihzZWVkKSxcbiAgICAgIHN0YXRlID0gb3B0cyAmJiBvcHRzLnN0YXRlLFxuICAgICAgcHJuZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gKHhnLm5leHQoKSA+Pj4gMCkgLyAweDEwMDAwMDAwMDsgfTtcbiAgcHJuZy5kb3VibGUgPSBmdW5jdGlvbigpIHtcbiAgICBkbyB7XG4gICAgICB2YXIgdG9wID0geGcubmV4dCgpID4+PiAxMSxcbiAgICAgICAgICBib3QgPSAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwLFxuICAgICAgICAgIHJlc3VsdCA9ICh0b3AgKyBib3QpIC8gKDEgPDwgMjEpO1xuICAgIH0gd2hpbGUgKHJlc3VsdCA9PT0gMCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcHJuZy5pbnQzMiA9IHhnLm5leHQ7XG4gIHBybmcucXVpY2sgPSBwcm5nO1xuICBpZiAoc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUueCkgY29weShzdGF0ZSwgeGcpO1xuICAgIHBybmcuc3RhdGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvcHkoeGcsIHt9KTsgfVxuICB9XG4gIHJldHVybiBwcm5nO1xufVxuXG5pZiAobW9kdWxlICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gaW1wbDtcbn0gZWxzZSBpZiAoZGVmaW5lICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gaW1wbDsgfSk7XG59IGVsc2Uge1xuICB0aGlzLnhvcnNoaWZ0NyA9IGltcGw7XG59XG5cbn0pKFxuICB0aGlzLFxuICAodHlwZW9mIG1vZHVsZSkgPT0gJ29iamVjdCcgJiYgbW9kdWxlLCAgICAvLyBwcmVzZW50IGluIG5vZGUuanNcbiAgKHR5cGVvZiBkZWZpbmUpID09ICdmdW5jdGlvbicgJiYgZGVmaW5lICAgLy8gcHJlc2VudCB3aXRoIGFuIEFNRCBsb2FkZXJcbik7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xorshift7.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorwow.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xorwow.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yd293LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGFBQWEsYUFBYTtBQUMzQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQjtBQUNoRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUUsU0FBUyx3QkFBTSxJQUFJLHdCQUFVO0FBQy9CLEVBQUUsbUNBQU8sYUFBYSxjQUFjO0FBQUEsa0dBQUM7QUFDckMsRUFBRTtBQUNGO0FBQ0E7O0FBRUEsQ0FBQztBQUNEO0FBQ0EsRUFBRSxLQUEyQjtBQUM3QixFQUFFLHdCQUF1QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yd293LmpzP2E0OWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQSBKYXZhc2NyaXB0IGltcGxlbWVudGFpb24gb2YgdGhlIFwieG9yd293XCIgcHJuZyBhbGdvcml0aG0gYnlcbi8vIEdlb3JnZSBNYXJzYWdsaWEuICBTZWUgaHR0cDovL3d3dy5qc3RhdHNvZnQub3JnL3YwOC9pMTQvcGFwZXJcblxuKGZ1bmN0aW9uKGdsb2JhbCwgbW9kdWxlLCBkZWZpbmUpIHtcblxuZnVuY3Rpb24gWG9yR2VuKHNlZWQpIHtcbiAgdmFyIG1lID0gdGhpcywgc3Ryc2VlZCA9ICcnO1xuXG4gIC8vIFNldCB1cCBnZW5lcmF0b3IgZnVuY3Rpb24uXG4gIG1lLm5leHQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdCA9IChtZS54IF4gKG1lLnggPj4+IDIpKTtcbiAgICBtZS54ID0gbWUueTsgbWUueSA9IG1lLno7IG1lLnogPSBtZS53OyBtZS53ID0gbWUudjtcbiAgICByZXR1cm4gKG1lLmQgPSAobWUuZCArIDM2MjQzNyB8IDApKSArXG4gICAgICAgKG1lLnYgPSAobWUudiBeIChtZS52IDw8IDQpKSBeICh0IF4gKHQgPDwgMSkpKSB8IDA7XG4gIH07XG5cbiAgbWUueCA9IDA7XG4gIG1lLnkgPSAwO1xuICBtZS56ID0gMDtcbiAgbWUudyA9IDA7XG4gIG1lLnYgPSAwO1xuXG4gIGlmIChzZWVkID09PSAoc2VlZCB8IDApKSB7XG4gICAgLy8gSW50ZWdlciBzZWVkLlxuICAgIG1lLnggPSBzZWVkO1xuICB9IGVsc2Uge1xuICAgIC8vIFN0cmluZyBzZWVkLlxuICAgIHN0cnNlZWQgKz0gc2VlZDtcbiAgfVxuXG4gIC8vIE1peCBpbiBzdHJpbmcgc2VlZCwgdGhlbiBkaXNjYXJkIGFuIGluaXRpYWwgYmF0Y2ggb2YgNjQgdmFsdWVzLlxuICBmb3IgKHZhciBrID0gMDsgayA8IHN0cnNlZWQubGVuZ3RoICsgNjQ7IGsrKykge1xuICAgIG1lLnggXj0gc3Ryc2VlZC5jaGFyQ29kZUF0KGspIHwgMDtcbiAgICBpZiAoayA9PSBzdHJzZWVkLmxlbmd0aCkge1xuICAgICAgbWUuZCA9IG1lLnggPDwgMTAgXiBtZS54ID4+PiA0O1xuICAgIH1cbiAgICBtZS5uZXh0KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY29weShmLCB0KSB7XG4gIHQueCA9IGYueDtcbiAgdC55ID0gZi55O1xuICB0LnogPSBmLno7XG4gIHQudyA9IGYudztcbiAgdC52ID0gZi52O1xuICB0LmQgPSBmLmQ7XG4gIHJldHVybiB0O1xufVxuXG5mdW5jdGlvbiBpbXBsKHNlZWQsIG9wdHMpIHtcbiAgdmFyIHhnID0gbmV3IFhvckdlbihzZWVkKSxcbiAgICAgIHN0YXRlID0gb3B0cyAmJiBvcHRzLnN0YXRlLFxuICAgICAgcHJuZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gKHhnLm5leHQoKSA+Pj4gMCkgLyAweDEwMDAwMDAwMDsgfTtcbiAgcHJuZy5kb3VibGUgPSBmdW5jdGlvbigpIHtcbiAgICBkbyB7XG4gICAgICB2YXIgdG9wID0geGcubmV4dCgpID4+PiAxMSxcbiAgICAgICAgICBib3QgPSAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwLFxuICAgICAgICAgIHJlc3VsdCA9ICh0b3AgKyBib3QpIC8gKDEgPDwgMjEpO1xuICAgIH0gd2hpbGUgKHJlc3VsdCA9PT0gMCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcHJuZy5pbnQzMiA9IHhnLm5leHQ7XG4gIHBybmcucXVpY2sgPSBwcm5nO1xuICBpZiAoc3RhdGUpIHtcbiAgICBpZiAodHlwZW9mKHN0YXRlKSA9PSAnb2JqZWN0JykgY29weShzdGF0ZSwgeGcpO1xuICAgIHBybmcuc3RhdGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvcHkoeGcsIHt9KTsgfVxuICB9XG4gIHJldHVybiBwcm5nO1xufVxuXG5pZiAobW9kdWxlICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gaW1wbDtcbn0gZWxzZSBpZiAoZGVmaW5lICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gaW1wbDsgfSk7XG59IGVsc2Uge1xuICB0aGlzLnhvcndvdyA9IGltcGw7XG59XG5cbn0pKFxuICB0aGlzLFxuICAodHlwZW9mIG1vZHVsZSkgPT0gJ29iamVjdCcgJiYgbW9kdWxlLCAgICAvLyBwcmVzZW50IGluIG5vZGUuanNcbiAgKHR5cGVvZiBkZWZpbmUpID09ICdmdW5jdGlvbicgJiYgZGVmaW5lICAgLy8gcHJlc2VudCB3aXRoIGFuIEFNRCBsb2FkZXJcbik7XG5cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xorwow.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/seedrandom.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/seedrandom.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ( true && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = __webpack_require__(/*! crypto */ \"?d4c0\");\n  } catch (ex) {}\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/seedrandom.js\n");

/***/ }),

/***/ "./src/assessment/core.js":
/*!********************************!*\
  !*** ./src/assessment/core.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LT: () => (/* binding */ LT)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_activity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/activity */ \"./src/assessment/core/activity.js\");\n/* harmony import */ var _core_diagnostics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/diagnostics */ \"./src/assessment/core/diagnostics.js\");\n/* harmony import */ var _core_items__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/items */ \"./src/assessment/core/items.js\");\n/* harmony import */ var _core_player__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/player */ \"./src/assessment/core/player.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/questions */ \"./src/assessment/core/questions.js\");\n/* harmony import */ var _core_sections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core/sections */ \"./src/assessment/core/sections.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/logger */ \"./src/utils/logger.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n\n\n\n\nvar utils = {\n  utils: {\n    logger: _utils_logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n  }\n};\nvar LT = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _core_app__WEBPACK_IMPORTED_MODULE_0__), _core_items__WEBPACK_IMPORTED_MODULE_3__), _core_activity__WEBPACK_IMPORTED_MODULE_1__), _core_player__WEBPACK_IMPORTED_MODULE_4__), _core_questions__WEBPACK_IMPORTED_MODULE_5__), _core_sections__WEBPACK_IMPORTED_MODULE_6__), _core_diagnostics__WEBPACK_IMPORTED_MODULE_2__), utils);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9jb3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNVO0FBQ007QUFDWjtBQUNFO0FBQ007QUFDRjtBQUNQO0FBRXJDLElBQU1RLEtBQUssR0FBRztFQUNWQSxLQUFLLEVBQUU7SUFDSEQsTUFBTSxFQUFOQSxxREFBTUE7RUFDVjtBQUNKLENBQUM7QUFFTSxJQUFNRSxFQUFFLEdBQUFDLGFBQUEsQ0FBQUEsYUFBQSxDQUFBQSxhQUFBLENBQUFBLGFBQUEsQ0FBQUEsYUFBQSxDQUFBQSxhQUFBLENBQUFBLGFBQUEsQ0FBQUEsYUFBQSxLQUFRVixzQ0FBRyxHQUFLRyx3Q0FBSyxHQUFLRiwyQ0FBUSxHQUFLRyx5Q0FBTSxHQUFLQyw0Q0FBUyxHQUFLQywyQ0FBUSxHQUFLSiw4Q0FBVyxHQUFLTSxLQUFLLENBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vc3JjL2Fzc2Vzc21lbnQvY29yZS5qcz84NGE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuL2NvcmUvYXBwJztcbmltcG9ydCAqIGFzIGFjdGl2aXR5IGZyb20gJy4vY29yZS9hY3Rpdml0eSc7XG5pbXBvcnQgKiBhcyBkaWFnbm9zdGljcyBmcm9tICcuL2NvcmUvZGlhZ25vc3RpY3MnO1xuaW1wb3J0ICogYXMgaXRlbXMgZnJvbSAnLi9jb3JlL2l0ZW1zJztcbmltcG9ydCAqIGFzIHBsYXllciBmcm9tICcuL2NvcmUvcGxheWVyJztcbmltcG9ydCAqIGFzIHF1ZXN0aW9ucyBmcm9tICcuL2NvcmUvcXVlc3Rpb25zJztcbmltcG9ydCAqIGFzIHNlY3Rpb25zIGZyb20gJy4vY29yZS9zZWN0aW9ucyc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4uL3V0aWxzL2xvZ2dlcic7XG5cbmNvbnN0IHV0aWxzID0ge1xuICAgIHV0aWxzOiB7XG4gICAgICAgIGxvZ2dlcixcbiAgICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IExUID0geyAuLi5hcHAsIC4uLml0ZW1zLCAuLi5hY3Rpdml0eSwgLi4ucGxheWVyLCAuLi5xdWVzdGlvbnMsIC4uLnNlY3Rpb25zLCAuLi5kaWFnbm9zdGljcywgLi4udXRpbHMgfTtcbiJdLCJuYW1lcyI6WyJhcHAiLCJhY3Rpdml0eSIsImRpYWdub3N0aWNzIiwiaXRlbXMiLCJwbGF5ZXIiLCJxdWVzdGlvbnMiLCJzZWN0aW9ucyIsImxvZ2dlciIsInV0aWxzIiwiTFQiLCJfb2JqZWN0U3ByZWFkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assessment/core.js\n");

/***/ }),

/***/ "./src/assessment/core/activity.js":
/*!*****************************************!*\
  !*** ./src/assessment/core/activity.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   activity: () => (/* binding */ activity),\n/* harmony export */   activityId: () => (/* binding */ activityId),\n/* harmony export */   activitySubTitle: () => (/* binding */ activitySubTitle),\n/* harmony export */   activityTags: () => (/* binding */ activityTags),\n/* harmony export */   activityTemplateId: () => (/* binding */ activityTemplateId),\n/* harmony export */   activityTitle: () => (/* binding */ activityTitle),\n/* harmony export */   adaptiveType: () => (/* binding */ adaptiveType),\n/* harmony export */   annotationsConfig: () => (/* binding */ annotationsConfig),\n/* harmony export */   autoSaveConfig: () => (/* binding */ autoSaveConfig),\n/* harmony export */   elapsedTime: () => (/* binding */ elapsedTime),\n/* harmony export */   hasActivityTemplate: () => (/* binding */ hasActivityTemplate),\n/* harmony export */   hasAnnotations: () => (/* binding */ hasAnnotations),\n/* harmony export */   hasAnswerMasking: () => (/* binding */ hasAnswerMasking),\n/* harmony export */   hasAutoSave: () => (/* binding */ hasAutoSave),\n/* harmony export */   hasEvents: () => (/* binding */ hasEvents),\n/* harmony export */   hasItemPool: () => (/* binding */ hasItemPool),\n/* harmony export */   hasLineReader: () => (/* binding */ hasLineReader),\n/* harmony export */   hasResourceItems: () => (/* binding */ hasResourceItems),\n/* harmony export */   hasSections: () => (/* binding */ hasSections),\n/* harmony export */   hasShuffledItems: () => (/* binding */ hasShuffledItems),\n/* harmony export */   hasTryAgain: () => (/* binding */ hasTryAgain),\n/* harmony export */   isAdaptive: () => (/* binding */ isAdaptive),\n/* harmony export */   isResuming: () => (/* binding */ isResuming),\n/* harmony export */   itemBank: () => (/* binding */ itemBank),\n/* harmony export */   itemPool: () => (/* binding */ itemPool),\n/* harmony export */   maxTime: () => (/* binding */ maxTime),\n/* harmony export */   region: () => (/* binding */ region),\n/* harmony export */   resourceItems: () => (/* binding */ resourceItems),\n/* harmony export */   sessionId: () => (/* binding */ sessionId),\n/* harmony export */   state: () => (/* binding */ state),\n/* harmony export */   timeRemaining: () => (/* binding */ timeRemaining),\n/* harmony export */   totalItems: () => (/* binding */ totalItems),\n/* harmony export */   userId: () => (/* binding */ userId)\n/* harmony export */ });\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _sections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sections */ \"./src/assessment/core/sections.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/logger */ \"./src/utils/logger.js\");\n\n\n\n\n/**\n * Everything relating to the activity currently\n * loaded by Items API.\n * @module Assessment/Activity\n */\n\n/**\n * The activity configuration object, including anything\n * overridden at runtime if using activity templates.\n * @since 0.1.0\n * @returns {object}\n */\nfunction activity() {\n  return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getActivity();\n}\n\n/**\n * The activity id used for this activity instance\n * used to group related sessions.\n * @since 0.1.0\n * @returns {string}\n */\nfunction activityId() {\n  return activity().activity_id;\n}\n\n/**\n * The `activity_template_id` if templates are used.\n * Returns '' if templates aren't being used.\n * @since 0.1.0\n * @returns {string}\n */\nfunction activityTemplateId() {\n  return activity().activity_template_id;\n}\n\n/**\n * The visible title from the configuration object.\n * @since 0.1.0\n * @returns {string}\n */\nfunction activityTitle() {\n  return activity().config.title;\n}\n\n/**\n * The visible subtitle from the configuration object.\n * @since 0.1.0\n * @returns {string}\n */\nfunction activitySubTitle() {\n  return activity().config.subtitle;\n}\n\n/**\n * All tags that have been set against items in the activity.\n * Requires `retrieve_tags` to be set to `true` in the\n * Items API configuration.\n * @since 2.9.0\n * @returns {array}\n */\nfunction activityTags() {\n  return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getTags();\n}\n\n/**\n * The adaptive type as defined in the configuration.\n * Returns '' if the activity isn't adaptive.\n * @since 0.1.0\n * @returns {string}\n */\nfunction adaptiveType() {\n  if (isAdaptive() && activity().adaptive.hasOwnProperty('type')) {\n    return activity().adaptive.type;\n  } else {\n    return '';\n  }\n}\n\n/**\n * The annotations configuration object.\n * @since 0.1.0\n * @returns {object}\n */\nfunction annotationsConfig() {\n  var _activity;\n  return hasAnnotations() && (_activity = activity()) !== null && _activity !== void 0 && (_activity = _activity.config) !== null && _activity !== void 0 && _activity.annotations_api_init_options ? activity().config.annotations_api_init_options : {};\n}\n\n/**\n * The auto-save configuration object. Returns `true` or an\n * object based on what was in the configuration.\n * @since 0.1.0\n * @returns {boolean | object}\n */\nfunction autoSaveConfig() {\n  var _a$config;\n  var a = activity();\n  return a !== null && a !== void 0 && (_a$config = a.config) !== null && _a$config !== void 0 && (_a$config = _a$config.navigation) !== null && _a$config !== void 0 && _a$config.auto_save ? a.config.navigation.auto_save : {};\n}\n\n/**\n * The current elapsed time for the session. Returns whether\n * the timer is visible or not.\n * @since 2.6.0\n * @returns {number}\n */\nfunction elapsedTime() {\n  return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getTime();\n}\n\n/**\n * Whether this activity was loaded from an activity template.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasActivityTemplate() {\n  return activity().hasOwnProperty('activity_template_id');\n}\n\n/**\n * Whether annotations have been configured with this activity.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasAnnotations() {\n  var _a$config2, _a$config3;\n  var a = activity();\n  return Boolean((a === null || a === void 0 || (_a$config2 = a.config) === null || _a$config2 === void 0 ? void 0 : _a$config2.annotations) === true || (a === null || a === void 0 || (_a$config3 = a.config) === null || _a$config3 === void 0 ? void 0 : _a$config3.annotations_api_init_options));\n}\n\n/**\n * Whether this activity contains answer masking enabled.\n * @since 2.15.0\n * @returns {boolean}\n */\nfunction hasAnswerMasking() {\n  return !!document.querySelector('.test-answer-masking');\n}\n\n/**\n * Whether auto-save is configured with this activity.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasAutoSave() {\n  var a = activity();\n  return a.hasOwnProperty('config') && a.config.hasOwnProperty('navigation') && a.config.navigation.hasOwnProperty('auto_save') && a.config.navigation.auto_save !== false;\n}\n\n/**\n * Whether items have been shuffled within this activity.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasShuffledItems() {\n  var _activity2;\n  return Boolean((_activity2 = activity()) === null || _activity2 === void 0 || (_activity2 = _activity2.config) === null || _activity2 === void 0 || (_activity2 = _activity2.configuration) === null || _activity2 === void 0 ? void 0 : _activity2.shuffle_items);\n}\n\n/**\n * Whether events have been configured with this activity.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasEvents() {\n  var a = activity();\n  return a.hasOwnProperty('events') && a.events !== false;\n}\n\n/**\n * Whether an item pool has been configured with this activity.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasItemPool() {\n  var a = activity();\n  return a.hasOwnProperty('item_pool_id');\n}\n\n/**\n * Whether this activity contains the line reader at the player level.\n * @since 2.15.0\n * @returns {boolean}\n */\nfunction hasLineReader() {\n  return !!document.querySelector('.lrn_linereader-toggle');\n}\n\n/**\n * Whether this activity contains resource item(s).\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasResourceItems() {\n  var _activity3;\n  return Boolean((_activity3 = activity()) === null || _activity3 === void 0 || (_activity3 = _activity3.config) === null || _activity3 === void 0 || (_activity3 = _activity3.navigation) === null || _activity3 === void 0 ? void 0 : _activity3.resource_items);\n}\n\n/**\n * Whether this activity contains sections.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction hasSections() {\n  return activity().hasOwnProperty('sections');\n}\n\n/**\n * Whether the activity has try again enabled.\n * @since 1.4.0\n * @returns {boolean}\n */\nfunction hasTryAgain() {\n  var _activity4;\n  return (_activity4 = activity()) === null || _activity4 === void 0 ? void 0 : _activity4.dynamic_items.hasOwnProperty('try_again');\n}\n\n/**\n * Whether this activity is adaptive.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isAdaptive() {\n  return activity().hasOwnProperty('adaptive');\n}\n\n/**\n * Whether the user is resuming the session.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isResuming() {\n  return activity().existing_session;\n}\n\n/**\n * The global `organisation_id` used for this activity instance.\n * @since 0.1.0\n * @returns {string}\n */\nfunction itemBank() {\n  var _activity5;\n  return (_activity5 = activity()) === null || _activity5 === void 0 ? void 0 : _activity5.organisation_id;\n}\n\n/**\n * The `item_pool_id` used for this activity instance.\n * @since 0.1.0\n * @returns {string}\n */\nfunction itemPool() {\n  var _activity6;\n  return (_activity6 = activity()) === null || _activity6 === void 0 ? void 0 : _activity6.item_pool_id;\n}\n\n/**\n * The maximum time allowed for this session. If `0`, it\n * means unlimited time.\n * @since 2.6.0\n * @returns {number}\n */\nfunction maxTime() {\n  var _activity7;\n  return (_activity7 = activity()) !== null && _activity7 !== void 0 && (_activity7 = _activity7.config) !== null && _activity7 !== void 0 && (_activity7 = _activity7.time) !== null && _activity7 !== void 0 && _activity7.max_time ? activity().config.time.max_time : 0;\n}\n\n/**\n * Which UI region the session was set up with. Values include:\n * - `main`\n * - `horizontal`\n * - `horizontal-fixed`\n *\n * `undefined` will mean that no `regions` key was found in the\n * Items API configuration, meaning the player defaults to the\n * legacy UI region (not recommended).\n * @since 1.1.0\n * @returns {string}\n */\nfunction region() {\n  var _activity8;\n  return (_activity8 = activity()) === null || _activity8 === void 0 || (_activity8 = _activity8.config) === null || _activity8 === void 0 ? void 0 : _activity8.regions;\n}\n\n/**\n * The resource item references used for this activity instance.\n * @since 0.1.0\n * @returns {array}\n */\nfunction resourceItems() {\n  var _activity9;\n  return (_activity9 = activity()) === null || _activity9 === void 0 || (_activity9 = _activity9.config) === null || _activity9 === void 0 || (_activity9 = _activity9.navigation) === null || _activity9 === void 0 ? void 0 : _activity9.resource_items;\n}\n\n/**\n * The `session_id` used for this activity instance.\n * @since 0.1.0\n * @returns {string}\n */\nfunction sessionId() {\n  var _activity10;\n  return (_activity10 = activity()) === null || _activity10 === void 0 ? void 0 : _activity10.session_id;\n}\n\n/**\n * The current `state` of this activity instance. Possible\n * values:\n *  - `initial`\n *  - `resume`\n *  - `review`\n *  - `preview`\n * @since 0.1.0\n * @returns {string}\n */\nfunction state() {\n  var _activity11;\n  var s;\n  switch ((_activity11 = activity()) === null || _activity11 === void 0 ? void 0 : _activity11.state) {\n    case undefined:\n      s = 'initial';\n      break;\n    default:\n      s = activity().state;\n      break;\n  }\n  return s;\n}\n\n/**\n * The time remaining in the session. If `max_time` hasn't\n * been set, the session is unlimited, so this returns `null`.\n * @since 2.6.0\n * @returns {number|null}\n */\nfunction timeRemaining() {\n  return maxTime() === 0 ? null : maxTime() - elapsedTime();\n}\n\n/**\n * The total number of items in the activity, including\n * items within sections if relevant.\n * @since 0.1.0\n * @returns {number}\n */\nfunction totalItems() {\n  if (hasSections()) {\n    var numItems = 0;\n    var allSections = _sections__WEBPACK_IMPORTED_MODULE_1__.sections();\n    for (var i = 0; i < allSections.length; i++) {\n      numItems += allSections[i].items.length;\n    }\n    return numItems;\n  } else if (isAdaptive()) {\n    if (activity().hasOwnProperty('items')) {\n      return activity().items.length;\n    } else {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info('This is an adaptive session, no items array found');\n      return 0;\n    }\n  } else {\n    return activity().items.length;\n  }\n}\n\n/**\n * The `user_id` as defined in the configuration.\n * @since 0.1.0\n * @returns {string}\n */\nfunction userId() {\n  var _activity12;\n  return (_activity12 = activity()) === null || _activity12 === void 0 ? void 0 : _activity12.user_id;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/core/activity.js\n");

/***/ }),

/***/ "./src/assessment/core/app.js":
/*!************************************!*\
  !*** ./src/assessment/core/app.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   annotationsApp: () => (/* binding */ annotationsApp),\n/* harmony export */   appInstance: () => (/* binding */ appInstance),\n/* harmony export */   assessApp: () => (/* binding */ assessApp),\n/* harmony export */   eventsApp: () => (/* binding */ eventsApp),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   questionsApp: () => (/* binding */ questionsApp)\n/* harmony export */ });\n/* harmony import */ var _diagnostics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./diagnostics */ \"./src/assessment/core/diagnostics.js\");\n/* harmony import */ var _questions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./questions */ \"./src/assessment/core/questions.js\");\n\n\n\n/**\n * Learnosity Toolkit constructor module.\n * @module Assessment/App\n */\n\nvar state = {};\n\n/**\n * Constructor method for Learnosity Toolkit.\n * @since 0.1.0\n * @param {object} app - Items API app instance\n * @example\n * // Declare and set your variable with the Items API LearnosityItems.init() method\n * const itemsApp = LearnosityItems.init(signedConfigObject);\n *\n * // Pass that app instance to the Toolkit constructor in the Items API readyListener()\n * import { LT } from '[path/to/tookit/index]';\n * LT.init(itemsApp);\n *\n * // Can be handy in the global scope for development\n * window.LT = LT;\n */\nfunction init(app) {\n  state.app = app;\n  setupListeners();\n}\n\n/**\n * Returns the Items API app instance that the host page declared.\n * @since 0.1.0\n * @returns {object}\n */\nfunction appInstance() {\n  return state.app;\n}\n\n/**\n * The Annotations API app instance, or `null` if not loaded.\n * @since 0.1.0\n * @returns {object | null}\n */\nfunction annotationsApp() {\n  return appInstance().annotationsApp() !== undefined ? appInstance().annotationsApp() : null;\n}\n\n/**\n * The Assess API app instance, or `null` if not loaded.\n * @since 0.1.0\n * @returns {object | null}\n */\nfunction assessApp() {\n  return appInstance().assessApp();\n}\n\n/**\n * The Events API app instance, or `null` if not loaded.\n * @since 0.1.0\n * @returns {object | null}\n */\nfunction eventsApp() {\n  return appInstance().eventsApp();\n}\n\n/**\n * The Questions API app instance, or `null` if not loaded.\n * @since 0.1.0\n * @returns {object | null}\n */\nfunction questionsApp() {\n  return appInstance().questionsApp();\n}\n\n/**\n * Sets up item and question listeners to pass to the diagnostics module.\n * Should not be called externally.\n * @since 0.1.0\n * @ignore\n */\nfunction setupListeners() {\n  // Sends all Items and Assess API events for handling.\n  state.app.on('all', function (e) {\n    (0,_diagnostics__WEBPACK_IMPORTED_MODULE_0__.handleEvent)(e);\n  });\n\n  // Sends Questions API events for handling.\n  state.app.on('item:load', function () {\n    var response_ids = (0,_questions__WEBPACK_IMPORTED_MODULE_1__.questionResponseIds)();\n    response_ids.forEach(function (id) {\n      var question = state.app.question(id);\n      ['changed', 'beforeValidate', 'rendered', 'validated'].forEach(function (event) {\n        question.on(event, function () {\n          return (0,_diagnostics__WEBPACK_IMPORTED_MODULE_0__.handleEvent)(event);\n        });\n      });\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9jb3JlL2FwcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE0QztBQUNNOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNRSxLQUFLLEdBQUcsQ0FBQyxDQUFDOztBQUVoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7RUFDdEJGLEtBQUssQ0FBQ0UsR0FBRyxHQUFHQSxHQUFHO0VBQ2ZDLGNBQWMsQ0FBQyxDQUFDO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxXQUFXQSxDQUFBLEVBQUc7RUFDMUIsT0FBT0osS0FBSyxDQUFDRSxHQUFHO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTRyxjQUFjQSxDQUFBLEVBQUc7RUFDN0IsT0FBT0QsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsY0FBYyxDQUFDLENBQUMsS0FBS0MsU0FBUyxHQUFHRixXQUFXLENBQUMsQ0FBQyxDQUFDQyxjQUFjLENBQUMsQ0FBQyxHQUFHLElBQUk7QUFDL0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNFLFNBQVNBLENBQUEsRUFBRztFQUN4QixPQUFPSCxXQUFXLENBQUMsQ0FBQyxDQUFDRyxTQUFTLENBQUMsQ0FBQztBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0MsU0FBU0EsQ0FBQSxFQUFHO0VBQ3hCLE9BQU9KLFdBQVcsQ0FBQyxDQUFDLENBQUNJLFNBQVMsQ0FBQyxDQUFDO0FBQ3BDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxZQUFZQSxDQUFBLEVBQUc7RUFDM0IsT0FBT0wsV0FBVyxDQUFDLENBQUMsQ0FBQ0ssWUFBWSxDQUFDLENBQUM7QUFDdkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU04sY0FBY0EsQ0FBQSxFQUFHO0VBQ3RCO0VBQ0FILEtBQUssQ0FBQ0UsR0FBRyxDQUFDUSxFQUFFLENBQUMsS0FBSyxFQUFFLFVBQUFDLENBQUMsRUFBSTtJQUNyQmIseURBQVcsQ0FBQ2EsQ0FBQyxDQUFDO0VBQ2xCLENBQUMsQ0FBQzs7RUFFRjtFQUNBWCxLQUFLLENBQUNFLEdBQUcsQ0FBQ1EsRUFBRSxDQUFDLFdBQVcsRUFBRSxZQUFNO0lBQzVCLElBQU1FLFlBQVksR0FBR2IsK0RBQW1CLENBQUMsQ0FBQztJQUUxQ2EsWUFBWSxDQUFDQyxPQUFPLENBQUMsVUFBQUMsRUFBRSxFQUFJO01BQ3ZCLElBQU1DLFFBQVEsR0FBR2YsS0FBSyxDQUFDRSxHQUFHLENBQUNhLFFBQVEsQ0FBQ0QsRUFBRSxDQUFDO01BRXZDLENBQUMsU0FBUyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQ0QsT0FBTyxDQUFDLFVBQUFHLEtBQUssRUFBSTtRQUNwRUQsUUFBUSxDQUFDTCxFQUFFLENBQUNNLEtBQUssRUFBRTtVQUFBLE9BQU1sQix5REFBVyxDQUFDa0IsS0FBSyxDQUFDO1FBQUEsRUFBQztNQUNoRCxDQUFDLENBQUM7SUFDTixDQUFDLENBQUM7RUFDTixDQUFDLENBQUM7QUFDTiIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9zcmMvYXNzZXNzbWVudC9jb3JlL2FwcC5qcz85MWRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhbmRsZUV2ZW50IH0gZnJvbSAnLi9kaWFnbm9zdGljcyc7XG5pbXBvcnQgeyBxdWVzdGlvblJlc3BvbnNlSWRzIH0gZnJvbSAnLi9xdWVzdGlvbnMnO1xuXG4vKipcbiAqIExlYXJub3NpdHkgVG9vbGtpdCBjb25zdHJ1Y3RvciBtb2R1bGUuXG4gKiBAbW9kdWxlIEFzc2Vzc21lbnQvQXBwXG4gKi9cblxuY29uc3Qgc3RhdGUgPSB7fTtcblxuLyoqXG4gKiBDb25zdHJ1Y3RvciBtZXRob2QgZm9yIExlYXJub3NpdHkgVG9vbGtpdC5cbiAqIEBzaW5jZSAwLjEuMFxuICogQHBhcmFtIHtvYmplY3R9IGFwcCAtIEl0ZW1zIEFQSSBhcHAgaW5zdGFuY2VcbiAqIEBleGFtcGxlXG4gKiAvLyBEZWNsYXJlIGFuZCBzZXQgeW91ciB2YXJpYWJsZSB3aXRoIHRoZSBJdGVtcyBBUEkgTGVhcm5vc2l0eUl0ZW1zLmluaXQoKSBtZXRob2RcbiAqIGNvbnN0IGl0ZW1zQXBwID0gTGVhcm5vc2l0eUl0ZW1zLmluaXQoc2lnbmVkQ29uZmlnT2JqZWN0KTtcbiAqXG4gKiAvLyBQYXNzIHRoYXQgYXBwIGluc3RhbmNlIHRvIHRoZSBUb29sa2l0IGNvbnN0cnVjdG9yIGluIHRoZSBJdGVtcyBBUEkgcmVhZHlMaXN0ZW5lcigpXG4gKiBpbXBvcnQgeyBMVCB9IGZyb20gJ1twYXRoL3RvL3Rvb2tpdC9pbmRleF0nO1xuICogTFQuaW5pdChpdGVtc0FwcCk7XG4gKlxuICogLy8gQ2FuIGJlIGhhbmR5IGluIHRoZSBnbG9iYWwgc2NvcGUgZm9yIGRldmVsb3BtZW50XG4gKiB3aW5kb3cuTFQgPSBMVDtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXQoYXBwKSB7XG4gICAgc3RhdGUuYXBwID0gYXBwO1xuICAgIHNldHVwTGlzdGVuZXJzKCk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgSXRlbXMgQVBJIGFwcCBpbnN0YW5jZSB0aGF0IHRoZSBob3N0IHBhZ2UgZGVjbGFyZWQuXG4gKiBAc2luY2UgMC4xLjBcbiAqIEByZXR1cm5zIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBJbnN0YW5jZSgpIHtcbiAgICByZXR1cm4gc3RhdGUuYXBwO1xufVxuXG4vKipcbiAqIFRoZSBBbm5vdGF0aW9ucyBBUEkgYXBwIGluc3RhbmNlLCBvciBgbnVsbGAgaWYgbm90IGxvYWRlZC5cbiAqIEBzaW5jZSAwLjEuMFxuICogQHJldHVybnMge29iamVjdCB8IG51bGx9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhbm5vdGF0aW9uc0FwcCgpIHtcbiAgICByZXR1cm4gYXBwSW5zdGFuY2UoKS5hbm5vdGF0aW9uc0FwcCgpICE9PSB1bmRlZmluZWQgPyBhcHBJbnN0YW5jZSgpLmFubm90YXRpb25zQXBwKCkgOiBudWxsO1xufVxuXG4vKipcbiAqIFRoZSBBc3Nlc3MgQVBJIGFwcCBpbnN0YW5jZSwgb3IgYG51bGxgIGlmIG5vdCBsb2FkZWQuXG4gKiBAc2luY2UgMC4xLjBcbiAqIEByZXR1cm5zIHtvYmplY3QgfCBudWxsfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXNzQXBwKCkge1xuICAgIHJldHVybiBhcHBJbnN0YW5jZSgpLmFzc2Vzc0FwcCgpO1xufVxuXG4vKipcbiAqIFRoZSBFdmVudHMgQVBJIGFwcCBpbnN0YW5jZSwgb3IgYG51bGxgIGlmIG5vdCBsb2FkZWQuXG4gKiBAc2luY2UgMC4xLjBcbiAqIEByZXR1cm5zIHtvYmplY3QgfCBudWxsfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXZlbnRzQXBwKCkge1xuICAgIHJldHVybiBhcHBJbnN0YW5jZSgpLmV2ZW50c0FwcCgpO1xufVxuXG4vKipcbiAqIFRoZSBRdWVzdGlvbnMgQVBJIGFwcCBpbnN0YW5jZSwgb3IgYG51bGxgIGlmIG5vdCBsb2FkZWQuXG4gKiBAc2luY2UgMC4xLjBcbiAqIEByZXR1cm5zIHtvYmplY3QgfCBudWxsfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcXVlc3Rpb25zQXBwKCkge1xuICAgIHJldHVybiBhcHBJbnN0YW5jZSgpLnF1ZXN0aW9uc0FwcCgpO1xufVxuXG4vKipcbiAqIFNldHMgdXAgaXRlbSBhbmQgcXVlc3Rpb24gbGlzdGVuZXJzIHRvIHBhc3MgdG8gdGhlIGRpYWdub3N0aWNzIG1vZHVsZS5cbiAqIFNob3VsZCBub3QgYmUgY2FsbGVkIGV4dGVybmFsbHkuXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gc2V0dXBMaXN0ZW5lcnMoKSB7XG4gICAgLy8gU2VuZHMgYWxsIEl0ZW1zIGFuZCBBc3Nlc3MgQVBJIGV2ZW50cyBmb3IgaGFuZGxpbmcuXG4gICAgc3RhdGUuYXBwLm9uKCdhbGwnLCBlID0+IHtcbiAgICAgICAgaGFuZGxlRXZlbnQoZSk7XG4gICAgfSk7XG5cbiAgICAvLyBTZW5kcyBRdWVzdGlvbnMgQVBJIGV2ZW50cyBmb3IgaGFuZGxpbmcuXG4gICAgc3RhdGUuYXBwLm9uKCdpdGVtOmxvYWQnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlX2lkcyA9IHF1ZXN0aW9uUmVzcG9uc2VJZHMoKTtcblxuICAgICAgICByZXNwb25zZV9pZHMuZm9yRWFjaChpZCA9PiB7XG4gICAgICAgICAgICBjb25zdCBxdWVzdGlvbiA9IHN0YXRlLmFwcC5xdWVzdGlvbihpZCk7XG5cbiAgICAgICAgICAgIFsnY2hhbmdlZCcsICdiZWZvcmVWYWxpZGF0ZScsICdyZW5kZXJlZCcsICd2YWxpZGF0ZWQnXS5mb3JFYWNoKGV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICBxdWVzdGlvbi5vbihldmVudCwgKCkgPT4gaGFuZGxlRXZlbnQoZXZlbnQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJoYW5kbGVFdmVudCIsInF1ZXN0aW9uUmVzcG9uc2VJZHMiLCJzdGF0ZSIsImluaXQiLCJhcHAiLCJzZXR1cExpc3RlbmVycyIsImFwcEluc3RhbmNlIiwiYW5ub3RhdGlvbnNBcHAiLCJ1bmRlZmluZWQiLCJhc3Nlc3NBcHAiLCJldmVudHNBcHAiLCJxdWVzdGlvbnNBcHAiLCJvbiIsImUiLCJyZXNwb25zZV9pZHMiLCJmb3JFYWNoIiwiaWQiLCJxdWVzdGlvbiIsImV2ZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assessment/core/app.js\n");

/***/ }),

/***/ "./src/assessment/core/diagnostics.js":
/*!********************************************!*\
  !*** ./src/assessment/core/diagnostics.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   diagnostics: () => (/* binding */ diagnostics),\n/* harmony export */   filterEvent: () => (/* binding */ filterEvent),\n/* harmony export */   handleEvent: () => (/* binding */ handleEvent),\n/* harmony export */   listen: () => (/* binding */ listen)\n/* harmony export */ });\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _activity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./activity */ \"./src/assessment/core/activity.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/logger */ \"./src/utils/logger.js\");\n/* harmony import */ var _dist_version_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../dist/version.js */ \"./dist/version.js\");\n\n\n\n\n\n/**\n * Diagnostic/metadata information for Items API.\n * @module Assessment/Diagnostics\n */\n\nvar state = {\n  events: {\n    broadcast: false,\n    listenFor: 'item'\n  }\n};\n\n/**\n * Returns an object of diagnostic information about\n * the current session.\n * @since 0.1.0\n * @returns {object}\n * @example\n *  // Sample returned object\n *  {\n *      \"apps\": {\n *          \"annotations\": {\n *              \"app\": {},\n *              \"config\": true,\n *              \"enabled\": true\n *          },\n *          \"assess\": {\n *              \"app\": {}\n *          },\n *          \"events\": {\n *              \"app\": null,\n *              \"enabled\": false\n *          },\n *          \"items\": {\n *              \"app\": {},\n *              \"metadata\": {\n *                  \"items_api_version\": \"v1.118.3\"\n *              }\n *          },\n *          \"questions\": {\n *              \"app\": {}\n *          }\n *      },\n *      \"activity\": {\n *          \"activity\": \"items-api-demo\",\n *          \"autoSave\": {\n *              \"config\": {\n *                  \"save_interval_duration\": 300\n *              },\n *              \"enabled\": true\n *          },\n *          \"itemBank\": 6,\n *          \"session\": \"f85afe9c-342e-4363-8d70-ad3c665566c0\",\n *          \"state\": \"initial\",\n *          \"type\": \"submit_practice\",\n *          \"user\": \"labs-site\"\n *      },\n *      \"versions\": {\n *          \"requested\": \"v2023.2.LTS\",\n *          \"mapped\": \"v2.197\",\n *          \"concrete\": \"v2.197.5\",\n *          \"server\": \"v2023.2.LTS\",\n *          \"assets\": \"v2.197.5\"\n *      }\n *  }\n */\nfunction diagnostics() {\n  /* global LearnosityApp */\n  var v = window.LearnosityApp ? LearnosityApp.versions : {};\n  var d = {\n    apps: {\n      annotations: {\n        app: _app__WEBPACK_IMPORTED_MODULE_0__.annotationsApp(),\n        config: _activity__WEBPACK_IMPORTED_MODULE_1__.annotationsConfig(),\n        enabled: _activity__WEBPACK_IMPORTED_MODULE_1__.hasAnnotations()\n      },\n      assess: {\n        app: _app__WEBPACK_IMPORTED_MODULE_0__.assessApp()\n      },\n      events: {\n        app: _app__WEBPACK_IMPORTED_MODULE_0__.eventsApp(),\n        enabled: _activity__WEBPACK_IMPORTED_MODULE_1__.hasEvents()\n      },\n      items: {\n        app: _app__WEBPACK_IMPORTED_MODULE_0__.appInstance(),\n        metadata: _activity__WEBPACK_IMPORTED_MODULE_1__.activity().config.metadata\n      },\n      questions: {\n        app: _app__WEBPACK_IMPORTED_MODULE_0__.questionsApp()\n      }\n    },\n    activity: {\n      activity: _activity__WEBPACK_IMPORTED_MODULE_1__.activityId(),\n      activityTemplate: _activity__WEBPACK_IMPORTED_MODULE_1__.activityTemplateId(),\n      autoSave: {\n        config: _activity__WEBPACK_IMPORTED_MODULE_1__.autoSaveConfig(),\n        enabled: _activity__WEBPACK_IMPORTED_MODULE_1__.hasAutoSave()\n      },\n      itemBank: _activity__WEBPACK_IMPORTED_MODULE_1__.itemBank(),\n      itemPool: _activity__WEBPACK_IMPORTED_MODULE_1__.itemPool(),\n      session: _activity__WEBPACK_IMPORTED_MODULE_1__.sessionId(),\n      state: _activity__WEBPACK_IMPORTED_MODULE_1__.state(),\n      type: _activity__WEBPACK_IMPORTED_MODULE_1__.activity().type,\n      user: _activity__WEBPACK_IMPORTED_MODULE_1__.userId()\n    },\n    LT: {\n      version: _dist_version_js__WEBPACK_IMPORTED_MODULE_3__.version\n    },\n    versions: v\n  };\n  return d;\n}\n\n/**\n * Which event(s) you want to listen for on the console.\n * You must call `listen()` first to start broadcasting.\n *\n * Pass any of the following:\n * - exact event (https://reference.learnosity.com/items-api/events) or;\n * - `'*'` for all events or;\n * - left or right wildcards via `*`\n * @since 0.1.0\n * @param {string} event\n * @example\n * LT.listen();\n * LT.filterEvent('item*');\n */\nfunction filterEvent(event) {\n  var regex = /^[a-zA-Z:*]*$/;\n  if (regex.test(event)) {\n    state.events.listenFor = event;\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn('Invalid event type');\n  }\n}\n\n/**\n * Accepts an event when triggered, optionally write to the console.\n * This is triggered internally so should not be called directly.\n * @since 0.1.0\n * @param {string} event\n * @ignore\n */\nfunction handleEvent(event) {\n  if (state.events.broadcast) {\n    var eventPattern = state.events.listenFor;\n    var eventListeningFor = eventPattern.replaceAll('*', '');\n    if (eventPattern.length === 1 && eventPattern === '*' || eventPattern === 'all') {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info(event);\n    } else if (eventPattern.startsWith('*') && !eventPattern.endsWith('*')) {\n      if (event.endsWith(eventListeningFor)) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info(event);\n      }\n    } else if (eventPattern.endsWith('*') && !eventPattern.startsWith('*')) {\n      if (event.startsWith(eventListeningFor)) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info(event);\n      }\n    } else if (eventPattern.startsWith('*') && eventPattern.endsWith('*')) {\n      if (event.includes(eventListeningFor)) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info(event);\n      }\n    } else {\n      if (event.startsWith(eventListeningFor)) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info(event);\n      }\n    }\n  }\n}\n\n/**\n * Enables or disabled any console logging of events.\n * Defaults to `true`, turn off by passing a falsy.\n * @since 0.1.0\n * @param {boolean=} status\n */\nfunction listen() {\n  var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  state.events.broadcast = Boolean(status);\n  if (Boolean(status)) {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info(\"\\uD83D\\uDC42 listening for '\".concat(state.events.listenFor, \"'\"));\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info('🚫👂 not listening');\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/core/diagnostics.js\n");

/***/ }),

/***/ "./src/assessment/core/items.js":
/*!**************************************!*\
  !*** ./src/assessment/core/items.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   flag: () => (/* binding */ flag),\n/* harmony export */   isDynamicItem: () => (/* binding */ isDynamicItem),\n/* harmony export */   isFirstItem: () => (/* binding */ isFirstItem),\n/* harmony export */   isFlagged: () => (/* binding */ isFlagged),\n/* harmony export */   isItemFullyAttempted: () => (/* binding */ isItemFullyAttempted),\n/* harmony export */   isLastItem: () => (/* binding */ isLastItem),\n/* harmony export */   isMaskingEnabled: () => (/* binding */ isMaskingEnabled),\n/* harmony export */   item: () => (/* binding */ item),\n/* harmony export */   itemAttemptStatus: () => (/* binding */ itemAttemptStatus),\n/* harmony export */   itemByResponseId: () => (/* binding */ itemByResponseId),\n/* harmony export */   itemElement: () => (/* binding */ itemElement),\n/* harmony export */   itemPosition: () => (/* binding */ itemPosition),\n/* harmony export */   itemReference: () => (/* binding */ itemReference),\n/* harmony export */   itemTags: () => (/* binding */ itemTags)\n/* harmony export */ });\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _activity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./activity */ \"./src/assessment/core/activity.js\");\n/* harmony import */ var _questions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./questions */ \"./src/assessment/core/questions.js\");\n/* harmony import */ var _sections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sections */ \"./src/assessment/core/sections.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n\n\n\n\n\n/**\n * Everything relating to the items in the activity.\n * @module Assessment/Items\n */\n\n/**\n * The dynamic object for the current item. Useful when\n * using dynamic content with try again.\n * https://reference.learnosity.com/items-api/methods/item/dynamic\n * @since 1.4.0\n * @returns {object}\n */\nfunction dynamic() {\n  var reference = itemReference();\n  return _app__WEBPACK_IMPORTED_MODULE_0__.assessApp().item(reference).dynamic || {};\n}\n\n/**\n * Toggles the `user_flagged` state on the current item.\n * @since 1.4.0\n */\nfunction flag() {\n  var reference = itemReference();\n  _app__WEBPACK_IMPORTED_MODULE_0__.assessApp().item(reference).flag();\n}\n\n/**\n * Whether the current item has dynamic content.\n * @since 1.4.0\n * @returns {boolean}\n */\nfunction isDynamicItem() {\n  var _item;\n  return (_item = item()) === null || _item === void 0 ? void 0 : _item.source.hasOwnProperty('data_table_seed');\n}\n\n/**\n * Whether the current item is the first item in the activity.\n * This ignores sections, so will be a global check.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isFirstItem() {\n  var reference;\n  if (_activity__WEBPACK_IMPORTED_MODULE_1__.hasSections()) {\n    reference = _typeof(_sections__WEBPACK_IMPORTED_MODULE_3__.sections()[0].items[0]) === 'object' ? _sections__WEBPACK_IMPORTED_MODULE_3__.sections()[0].items[0].reference : _sections__WEBPACK_IMPORTED_MODULE_3__.sections()[0].items[0];\n    return reference === item().reference;\n  } else {\n    reference = _typeof(_activity__WEBPACK_IMPORTED_MODULE_1__.activity().items[0]) === 'object' ? _activity__WEBPACK_IMPORTED_MODULE_1__.activity().items[0].reference : _activity__WEBPACK_IMPORTED_MODULE_1__.activity().items[0];\n    return reference === item().reference;\n  }\n}\n\n/**\n * Whether the current item is the last item in the activity.\n * This ignores sections, so will be a global check.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isLastItem() {\n  return item().is_last_item;\n}\n\n/**\n * Whether the current item has been flagged by the user.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isFlagged() {\n  return item().user_flagged;\n}\n\n/**\n * Checks whether the entire item has been fully attempted.\n * Returns `false` if _all_ possible responses haven't been\n * attempted (eg on cloze types). Handles multi-part items.\n * @since 0.1.0\n * @param {string} reference Optionally pass an exact item reference.\n * @returns {boolean}\n */\nfunction isItemFullyAttempted(reference) {\n  var itemQuestions;\n  var attempted;\n  var r;\n  if (reference) {\n    itemQuestions = _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getItems()[reference].questions;\n  } else {\n    itemQuestions = _questions__WEBPACK_IMPORTED_MODULE_2__.questions();\n  }\n  if (Array.isArray(itemQuestions) && itemQuestions.length) {\n    for (var i = 0; i < itemQuestions.length; i++) {\n      var q = itemQuestions[i];\n      r = _questions__WEBPACK_IMPORTED_MODULE_2__.questionResponse(q.response_id);\n      if (r) {\n        if (q.hasOwnProperty('metadata') && q.metadata.hasOwnProperty('valid_response_count')) {\n          if (Array.isArray(r.value)) {\n            var undefinedValues = r.value.filter(function (v) {\n              return v === undefined;\n            });\n            if (undefinedValues.length) {\n              // A single question wasn't fully attempted\n              return false;\n            }\n            var nullValues = r.value.filter(function (v) {\n              return v === null;\n            });\n            if (nullValues.length) {\n              // A single question wasn't fully attempted\n              return false;\n            }\n          }\n        }\n        attempted = true;\n      } else {\n        // We found at least one question with no response object\n        return false;\n      }\n    }\n  } else {\n    attempted = true; // Technically not correct, but avoids logic problems by the caller\n  }\n  return attempted;\n}\n\n/**\n * Whether the current item has answer masking enabled.\n * @since 0.4.0\n * @returns {boolean}\n */\nfunction isMaskingEnabled() {\n  return Boolean(document.querySelector('.lrn-masking'));\n}\n\n/**\n * JSON object for the current item.\n * @since 0.1.0\n * @param {string} reference Optionally pass an exact item reference.\n * @returns {object} An item JSON object.\n */\nfunction item(reference) {\n  if (reference) {\n    return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getItems()[reference];\n  }\n  return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getCurrentItem();\n}\n\n/**\n * Whether the current item has been attempted. Return value can be:\n *  - `not_attempted`\n *  - `fully_attempted`\n *  - `partially_attempted`\n *\n * Partially attempted items may be where there are 2+ questions\n * on the item and only 1 has been attempted.\n *\n * Note that if a question accepts multiple responses, eg multiple\n * dropdown elements, this method will return `fully_attempted` even\n * if not all responses have been attempted. If you want to check _all_\n * responses have been attempted use `isItemFullyAttempted()`.\n * @since 0.1.0\n * @returns {string}\n */\nfunction itemAttemptStatus() {\n  return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getCurrentItem().attempt_status;\n}\n\n/**\n * Returns an item object by response id.\n * @since 1.1.0\n * @param {string} response_id\n * @returns {object} An item JSON object.\n */\nfunction itemByResponseId(response_id) {\n  var items = _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getItems();\n  var item;\n  for (var ref in items) {\n    if (items[ref].response_ids.includes(response_id)) {\n      item = items[ref];\n      break;\n    }\n  }\n  return item;\n}\n\n/**\n * The current item DOM element.\n * @since 0.4.0\n * @returns {object} HTML DOM element\n * ```\n * <div data-reference=\"[item-reference]\" class=\"learnosity-item lrn-scrollable-container item lrn-assess-item\">\n *   ...\n * </div>\n * ```\n */\nfunction itemElement() {\n  return document.querySelector(\"div[data-reference='\".concat(itemReference(), \"']\"));\n}\n\n/**\n * The current item position, 1-based (not 0-based), in the activity.\n * This ignores sections, so returns the global item position.\n * @since 0.1.0\n * @returns {number}\n */\nfunction itemPosition() {\n  return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().assessApp().getItemPosition(itemReference()) + 1;\n}\n\n/**\n * The reference of the current item.\n * @since 0.1.0\n * @returns {string}\n */\nfunction itemReference() {\n  return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getCurrentItem().reference;\n}\n\n/**\n * All tags that have been set against the current item.\n * Requires `retrieve_tags` to be set to `true` in the\n * Items API configuration.\n * @since 2.9.0\n * @returns {array}\n */\nfunction itemTags(reference) {\n  var tags = _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getTags();\n  var itemRef = reference || itemReference();\n  return tags[itemRef] || [];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/core/items.js\n");

/***/ }),

/***/ "./src/assessment/core/player.js":
/*!***************************************!*\
  !*** ./src/assessment/core/player.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   answerMasking: () => (/* binding */ answerMasking),\n/* harmony export */   dialog: () => (/* binding */ dialog),\n/* harmony export */   hideDialog: () => (/* binding */ hideDialog),\n/* harmony export */   isResponsiveMode: () => (/* binding */ isResponsiveMode),\n/* harmony export */   isReviewScreen: () => (/* binding */ isReviewScreen),\n/* harmony export */   lineReader: () => (/* binding */ lineReader),\n/* harmony export */   navigate: () => (/* binding */ navigate),\n/* harmony export */   next: () => (/* binding */ next),\n/* harmony export */   previous: () => (/* binding */ previous),\n/* harmony export */   review: () => (/* binding */ review),\n/* harmony export */   submit: () => (/* binding */ submit)\n/* harmony export */ });\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./items */ \"./src/assessment/core/items.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/logger */ \"./src/utils/logger.js\");\n\n\n\n\n/**\n * Everything relating to the assessment player.\n * @module Assessment/Player\n */\n\nvar state = {\n  answerMasking: {\n    enabled: null\n  },\n  lineReader: {\n    enabled: null,\n    id: null\n  }\n};\n\n/**\n * Shows or hides the player answer masking tool. Answer masking has to be enabled in\n * Items API configuration for this to work.\n * @since 2.15.0\n * @param {boolean} action - Whether to show (`true`) or hide (`false`).\n */\nfunction answerMasking(action) {\n  if (state.answerMasking.enabled === null) {\n    var buttonElement = document.querySelector('.test-answer-masking');\n    if (buttonElement) {\n      state.answerMasking.enabled = true;\n    } else {\n      state.answerMasking.enabled = false;\n    }\n  }\n  if (state.answerMasking.enabled) {\n    if (action !== undefined) {\n      _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().questionsApp().masking(action);\n    }\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn('Answer masking is not enabled in the Items API configuration.');\n  }\n}\n\n/**\n * Renders an Items API custom dialog.\n * @since 0.1.0\n * @param {object} config - Dialog configuration\n * @see https://help.learnosity.com/hc/en-us/articles/360000755558-Using-Custom-Dialogs-During-Assessments\n * @example\n * LT.dialog({\n *     \"header\": \"My heading\",\n *     \"body\":  \"Custom body with <strong>html</strong> support\",\n *     \"buttons\": [\n *         {\n *             \"button_id\": \"my_primary_button\",\n *             \"label\": \"My Primary Button\",\n *             \"is_primary\": true\n *         },\n *         {\n *             \"button_id\": \"my_standard_button\",\n *             \"label\": \"My Standard Button\",\n *             \"is_primary\": false\n *         }\n *     ]\n * });\n */\nfunction dialog(config) {\n  _app__WEBPACK_IMPORTED_MODULE_0__.assessApp().dialogs().custom.show(config);\n}\n\n/**\n * Hides a custom dialog.\n * @since 1.1.0\n */\nfunction hideDialog() {\n  _app__WEBPACK_IMPORTED_MODULE_0__.assessApp().dialogs().custom.hide();\n}\n\n/**\n * Checks whether the player is in responsive mode. This will be either the\n * small or medium breakpoints. See more https://help.learnosity.com/hc/en-us/articles/360000758337-Customizing-the-Assessment-Player-experience-with-User-Interface-Regions#responsive-behavior\n * @since 1.2.0\n * @returns {boolean}\n */\nfunction isResponsiveMode() {\n  return Boolean(document.querySelector('.has-menu-region'));\n}\n\n/**\n * Check that the review screen has been loaded.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isReviewScreen() {\n  var loaded = false;\n  // The API event fires when loading the panel. We need a delay to\n  // detect that this particular panel has loaded.\n  setTimeout(function () {\n    if (document.getElementsByClassName('review-screen')[0].getAttribute('aria-hidden') === null) {\n      loaded = true;\n    }\n    return loaded;\n  }, 500);\n}\n\n/**\n * Shows or hides the player line reader. The line reader has to be enabled in\n * Items API configuration for this to work.\n * @since 2.15.0\n * @param {string=} action - Whether to `toggle` (default), `show` or `hide` the line reader.\n */\nfunction lineReader(action) {\n  if (state.lineReader.enabled === null) {\n    var buttonElement = document.querySelector('.lrn_linereader-toggle');\n    if (buttonElement) {\n      state.lineReader.enabled = true;\n      var dataAttributeValue = buttonElement.querySelector('[data-lrn-widget-container]').getAttribute('data-lrn-widget-container');\n      var uniqueValue = dataAttributeValue.match(/\\d+$/);\n      if (uniqueValue) {\n        state.lineReader.id = uniqueValue[0];\n      } else {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn('Could not find the line reader unique id.');\n      }\n    } else {\n      state.lineReader.enabled = false;\n    }\n  }\n  if (state.lineReader.enabled && state.lineReader.id !== null) {\n    var _lineReader = _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().features()[\"lrn-assessapp-feature_\".concat(state.lineReader.id)];\n    switch (action) {\n      case 'show':\n        _lineReader.show();\n        break;\n      case 'hide':\n        _lineReader.hide();\n        break;\n      default:\n        _lineReader.toggle();\n    }\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn('Line reader is not enabled in the Items API configuration.');\n  }\n}\n\n/**\n * Generic function to call API navigation methods. Supports:\n *  - `previous`\n *  - `next`\n *  - `review`\n *  - `submit`\n *  - Number (0-based) representing the item index\n *\n * Internally this calls `next()`, `previous()`, `review()`, or `goto()`\n * and `submit()`.\n * @since 0.1.0\n * @param {string} target\n */\nfunction navigate(target) {\n  switch (target) {\n    case 'previous':\n      _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().items().previous();\n      break;\n    case 'next':\n      if (!_items__WEBPACK_IMPORTED_MODULE_1__.isLastItem()) {\n        _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().items().next();\n      }\n      break;\n    case 'review':\n      // Allow opening and closing the `Review progress` modal.\n      if (document.getElementsByClassName('review-screen')[0].getAttribute('aria-hidden') === null) {\n        _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().dialogs().reviewScreen.hide();\n      } else {\n        _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().dialogs().reviewScreen.show();\n      }\n      break;\n    case 'submit':\n      var submitSettings = {\n        show_submit_confirmation: true,\n        show_submit_ui: true,\n        success: function success() {\n          alert('Test saved!');\n        },\n        error: function error(event) {\n          alert('Test submit failed...check browser log');\n          _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('Submission failed: ', event);\n        }\n      };\n      _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().submit(submitSettings);\n      break;\n    default:\n      if (typeof Number(target) === 'number' && Number(target) >= 0) {\n        _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().items()[\"goto\"](Number(target));\n      } else {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn(\"Invalid target (\".concat(target, \")\"));\n      }\n  }\n}\n\n/**\n * Navigates to the next item. No-op if on\n * the last item.\n * @since 0.1.0\n */\nfunction next() {\n  navigate('next');\n}\n\n/**\n * Navigates to the previous item. No-op if on\n * item #1.\n * @since 0.1.0\n */\nfunction previous() {\n  navigate('previous');\n}\n\n/**\n * Toggles the review screen.\n * @since 0.1.0\n */\nfunction review() {\n  navigate('review');\n}\n\n/**\n * Submits the session.\n * @since 0.1.0\n */\nfunction submit() {\n  navigate('submit');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/core/player.js\n");

/***/ }),

/***/ "./src/assessment/core/questions.js":
/*!******************************************!*\
  !*** ./src/assessment/core/questions.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasCheckAnswer: () => (/* binding */ hasCheckAnswer),\n/* harmony export */   isAutoScorable: () => (/* binding */ isAutoScorable),\n/* harmony export */   question: () => (/* binding */ question),\n/* harmony export */   questionInstance: () => (/* binding */ questionInstance),\n/* harmony export */   questionResponse: () => (/* binding */ questionResponse),\n/* harmony export */   questionResponseIds: () => (/* binding */ questionResponseIds),\n/* harmony export */   questionScore: () => (/* binding */ questionScore),\n/* harmony export */   questions: () => (/* binding */ questions)\n/* harmony export */ });\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./items */ \"./src/assessment/core/items.js\");\n/* harmony import */ var _activity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./activity */ \"./src/assessment/core/activity.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/logger */ \"./src/utils/logger.js\");\n\n\n\n\n\n/**\n * Everything relating to questions currently\n * loaded by Items API.\n * @module Assessment/Questions\n */\n\n/**\n * Checks whether the \"Check Answer\" button is enabled for the\n * current question, including if enabled via activity override.\n * @since 2.11.0\n * @param {string=} response_id\n * @returns {boolean}\n */\nfunction hasCheckAnswer(response_id) {\n  var _activity;\n  if (!isAutoScorable(response_id)) {\n    return false;\n  }\n  var hasActivityOverride = ((_activity = (0,_activity__WEBPACK_IMPORTED_MODULE_2__.activity)()) === null || _activity === void 0 || (_activity = _activity.config) === null || _activity === void 0 || (_activity = _activity.questions_api_init_options) === null || _activity === void 0 ? void 0 : _activity.attribute_overrides) && (0,_activity__WEBPACK_IMPORTED_MODULE_2__.activity)().config.questions_api_init_options.attribute_overrides.hasOwnProperty('instant_feedback') && typeof (0,_activity__WEBPACK_IMPORTED_MODULE_2__.activity)().config.questions_api_init_options.attribute_overrides.instant_feedback === 'boolean';\n  var q = question(response_id);\n  if (hasActivityOverride) {\n    return (0,_activity__WEBPACK_IMPORTED_MODULE_2__.activity)().config.questions_api_init_options.attribute_overrides.instant_feedback;\n  }\n  return q.hasOwnProperty('instant_feedback') && typeof q.instant_feedback === 'boolean' ? q.instant_feedback : false;\n}\n\n/**\n * Checks whether the question is auto-scorable. This includes\n * questions that are technically auto-scorable but don't have\n * a validation object set (including when the validation is\n * ignored in Items API configuration).\n * @since 2.11.0\n * @param {string=} response_id\n * @returns {boolean}\n */\nfunction isAutoScorable(response_id) {\n  var check = questionInstance(response_id).checkValidation();\n  return check.has_validation;\n}\n\n/**\n * Returns the question JSON on the current item.\n *\n * If the item is multi-part, pass `response_id` to return\n * the desired question. This argument will also look across\n * all items for the requested `response_id`.\n *\n * Returns {} if no question was found on the current item.\n * @since 0.1.0\n * @param {string=} response_id\n * @returns {object} A question JSON object.\n */\nfunction question(response_id) {\n  var id = response_id ? response_id : questionResponseIds()[0];\n  if (id) {\n    return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().question(id).getQuestion();\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Question not found (index \".concat(id, \")\"));\n    return {};\n  }\n}\n\n/**\n * Returns the question app instance on the current item.\n *\n * If the item is multi-part, pass `response_id` to return the\n * desired question.\n * @since 0.4.0\n * @param {string=} response_id\n * @returns {object} A question app instance.\n */\nfunction questionInstance(response_id) {\n  var id = response_id ? response_id : questionResponseIds()[0];\n  if (id) {\n    return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().question(id);\n  } else {\n    return {};\n  }\n}\n\n/**\n * Returns all question JSON on the current item.\n *\n * Returns [] if no questions were found.\n * @since 0.1.0\n * @returns {array}\n */\nfunction questions() {\n  return _items__WEBPACK_IMPORTED_MODULE_1__.item().questions;\n}\n\n/**\n * A response object for a question on the\n * current item. Defaults to the first question.\n *\n * Pass `response_id` if you want a different question\n * response returned in the case of a multi-part item.\n *\n * Returns {} if no questions found on the item.\n * @since 0.1.0\n * @param {string=} response_id\n * @returns {object} The response object for the question, null if no attempts yet.\n */\nfunction questionResponse(response_id) {\n  var id = response_id ? response_id : questionResponseIds()[0];\n  if (id) {\n    return response(id);\n  } else {\n    return {};\n  }\n}\n\n/**\n * Array of `response_id` string values for all questions on the current item.\n * @since 0.1.0\n * @returns {array}\n */\nfunction questionResponseIds() {\n  return questions().map(function (r) {\n    return r.response_id;\n  });\n}\n\n/**\n * The score object for a question on the current item.\n * Defaults to the first question.\n *\n * Pass `response_id` if you want a different question\n * response returned in the case of a multi-part item.\n *\n * Returns {} if no questions found on the item, or a\n * non-autoscoreable question.\n * @since 0.1.0\n * @param {string=} response_id\n * @returns {object} The score object for the question.\n */\nfunction questionScore(response_id) {\n  var id = response_id ? response_id : questionResponseIds()[0];\n  if (id) {\n    return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getScores()[id] || {};\n  } else {\n    return {};\n  }\n}\n\n/**\n * A response object for a single question on the current item.\n *\n * Returns {} if a response isn't found.\n * @since 0.1.0\n * @param {string} response_id\n * @returns {object | null} The response object for the question\n * @ignore\n */\nfunction response(response_id) {\n  var r = _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().question(response_id);\n  if (r) {\n    return _app__WEBPACK_IMPORTED_MODULE_0__.appInstance().question(response_id).getResponse();\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Response not found \".concat(response_id));\n    return undefined;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/core/questions.js\n");

/***/ }),

/***/ "./src/assessment/core/sections.js":
/*!*****************************************!*\
  !*** ./src/assessment/core/sections.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isFirstItemInSection: () => (/* binding */ isFirstItemInSection),\n/* harmony export */   isLastItemInSection: () => (/* binding */ isLastItemInSection),\n/* harmony export */   section: () => (/* binding */ section),\n/* harmony export */   sectionHasShuffledItems: () => (/* binding */ sectionHasShuffledItems),\n/* harmony export */   sectionIndex: () => (/* binding */ sectionIndex),\n/* harmony export */   sectionItemPosition: () => (/* binding */ sectionItemPosition),\n/* harmony export */   sections: () => (/* binding */ sections),\n/* harmony export */   totalItemsInSection: () => (/* binding */ totalItemsInSection)\n/* harmony export */ });\n/* harmony import */ var _activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activity */ \"./src/assessment/core/activity.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./items */ \"./src/assessment/core/items.js\");\n\n\n\n/**\n * Everything relating to any sections defined\n * in the activity.\n * @module Assessment/Sections\n */\n\n/**\n * Whether the current item is the first in this section.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isFirstItemInSection() {\n  return sectionItemPosition() === 1;\n}\n\n/**\n * Whether the current item is the last in this section.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction isLastItemInSection() {\n  return sectionItemPosition() === totalItemsInSection();\n}\n\n/**\n * The current section of the activity.\n *\n * Returns {} if sections aren't being used.\n * @since 0.1.0\n * @returns {object}\n */\nfunction section() {\n  if (_activity__WEBPACK_IMPORTED_MODULE_0__.hasSections()) {\n    var currentRef = _items__WEBPACK_IMPORTED_MODULE_1__.itemReference();\n    var allSections = sections();\n    var _section = -1;\n    var found = false;\n    for (var s = 0; s < allSections.length; s++) {\n      if (found) {\n        break;\n      }\n      ++_section;\n      for (var i = 0; i < allSections[s].items.length; i++) {\n        if (currentRef === allSections[s].items[i].reference) {\n          found = true;\n          break;\n        }\n      }\n    }\n    return sections()[_section];\n  } else {\n    return {};\n  }\n}\n\n/**\n * Whether items have been shuffled within this section.\n * @since 0.1.0\n * @returns {boolean}\n */\nfunction sectionHasShuffledItems() {\n  var _section2;\n  return Boolean((_section2 = section()) === null || _section2 === void 0 || (_section2 = _section2.config) === null || _section2 === void 0 || (_section2 = _section2.configuration) === null || _section2 === void 0 ? void 0 : _section2.shuffle_items);\n}\n\n/**\n * The index of the current section, 1-based.\n *\n * Returns 0 if sections aren't being used.\n * @since 0.1.0\n * @returns {number}\n */\nfunction sectionIndex() {\n  if (_activity__WEBPACK_IMPORTED_MODULE_0__.hasSections()) {\n    var currentRef = _items__WEBPACK_IMPORTED_MODULE_1__.itemReference();\n    var _sections = _sections();\n    var _section3 = 0;\n    var found = false;\n    for (var s = 0; s < _sections.length; s++) {\n      if (found) {\n        break;\n      }\n      ++_section3;\n      for (var i = 0; i < _sections[s].items.length; i++) {\n        if (currentRef === _sections[s].items[i].reference) {\n          found = true;\n          break;\n        }\n      }\n    }\n    return _section3;\n  } else {\n    return 0;\n  }\n}\n\n/**\n * The item position in the current section.\n *\n * Returns `null` if the activity isn't using sections.\n * @since 0.1.0\n * @returns {number|null}\n */\nfunction sectionItemPosition() {\n  var currentRef = _items__WEBPACK_IMPORTED_MODULE_1__.itemReference();\n  var currentSection = section();\n  var itemPos = 0;\n  if (!Object.keys(currentSection).length) {\n    return null;\n  }\n  for (var i = 0; i < currentSection.items.length; i++) {\n    ++itemPos;\n    if (currentRef === currentSection.items[i].reference) {\n      break;\n    }\n  }\n  return itemPos;\n}\n\n/**\n * An array of section objects.\n *\n * Returns [] if sections aren't being used.\n * @since 0.1.0\n * @returns {array}\n */\nfunction sections() {\n  if (_activity__WEBPACK_IMPORTED_MODULE_0__.hasSections()) {\n    return _activity__WEBPACK_IMPORTED_MODULE_0__.activity().sections;\n  } else {\n    return [];\n  }\n}\n\n/**\n * The total number of items in the current section.\n *\n * Returns `null` if sections aren't being used.\n * @since 0.1.0\n * @returns {number|null}\n */\nfunction totalItemsInSection() {\n  var _section4;\n  return ((_section4 = section()) === null || _section4 === void 0 || (_section4 = _section4.items) === null || _section4 === void 0 ? void 0 : _section4.length) || null;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/core/sections.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/aria/ariaCountOnNav.js":
/*!************************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/aria/ariaCountOnNav.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_activity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/activity */ \"./src/assessment/core/activity.js\");\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Listens for the item load event and appends\n * ` of {totalItems}` to the aria-label for the\n * previous and next buttons.\n * @module Extensions/Assessment/ariaCountOnNav\n */\n\n/**\n * Executes on item load to add custom label.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.ariaCountOnNav.run();\n * @since 0.3.0\n */\nfunction run() {\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n    var numItems = _core_activity__WEBPACK_IMPORTED_MODULE_1__.totalItems();\n    var elPrevious = Array.from(document.getElementsByClassName('item-prev'));\n    var elNext = Array.from(document.getElementsByClassName('item-next'));\n    var elNav = elPrevious.concat(elNext);\n    for (var i = 0; i < elNav.length; i++) {\n      var attr = elNav[i].getAttribute('aria-label');\n      elNav[i].setAttribute('aria-live', attr + ' of ' + numItems);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9leHRlbnNpb25zL2FjY2Vzc2liaWxpdHkvYXJpYS9hcmlhQ291bnRPbk5hdi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDVTs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTRSxHQUFHQSxDQUFBLEVBQUc7RUFDbEJGLGtEQUFlLENBQUMsQ0FBQyxDQUFDSSxFQUFFLENBQUMsV0FBVyxFQUFFLFlBQU07SUFDcEMsSUFBTUMsUUFBUSxHQUFHSixzREFBbUIsQ0FBQyxDQUFDO0lBQ3RDLElBQU1NLFVBQVUsR0FBR0MsS0FBSyxDQUFDQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0Msc0JBQXNCLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0UsSUFBTUMsTUFBTSxHQUFHSixLQUFLLENBQUNDLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxzQkFBc0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN2RSxJQUFNRSxLQUFLLEdBQUdOLFVBQVUsQ0FBQ08sTUFBTSxDQUFDRixNQUFNLENBQUM7SUFFdkMsS0FBSyxJQUFJRyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLEtBQUssQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtNQUNuQyxJQUFNRSxJQUFJLEdBQUdKLEtBQUssQ0FBQ0UsQ0FBQyxDQUFDLENBQUNHLFlBQVksQ0FBQyxZQUFZLENBQUM7TUFDaERMLEtBQUssQ0FBQ0UsQ0FBQyxDQUFDLENBQUNJLFlBQVksQ0FBQyxXQUFXLEVBQUVGLElBQUksR0FBRyxNQUFNLEdBQUdaLFFBQVEsQ0FBQztJQUNoRTtFQUNKLENBQUMsQ0FBQztBQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL3NyYy9hc3Nlc3NtZW50L2V4dGVuc2lvbnMvYWNjZXNzaWJpbGl0eS9hcmlhL2FyaWFDb3VudE9uTmF2LmpzP2ZhODciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXBwIGZyb20gJy4uLy4uLy4uL2NvcmUvYXBwJztcbmltcG9ydCAqIGFzIGFjdGl2aXR5IGZyb20gJy4uLy4uLy4uL2NvcmUvYWN0aXZpdHknO1xuXG4vKipcbiAqIEV4dGVuc2lvbnMgYWRkIHNwZWNpZmljIGZ1bmN0aW9uYWxpdHkgdG8gSXRlbXMgQVBJLlxuICogVGhleSByZWx5IG9uIG1vZHVsZXMgd2l0aGluIExUIGJlaW5nIGF2YWlsYWJsZS5cbiAqXG4gKiAtLVxuICpcbiAqIExpc3RlbnMgZm9yIHRoZSBpdGVtIGxvYWQgZXZlbnQgYW5kIGFwcGVuZHNcbiAqIGAgb2Yge3RvdGFsSXRlbXN9YCB0byB0aGUgYXJpYS1sYWJlbCBmb3IgdGhlXG4gKiBwcmV2aW91cyBhbmQgbmV4dCBidXR0b25zLlxuICogQG1vZHVsZSBFeHRlbnNpb25zL0Fzc2Vzc21lbnQvYXJpYUNvdW50T25OYXZcbiAqL1xuXG4vKipcbiAqIEV4ZWN1dGVzIG9uIGl0ZW0gbG9hZCB0byBhZGQgY3VzdG9tIGxhYmVsLlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IExUIH0gZnJvbSAnQGNhc3Bpbmd1cy9sdC9zcmMvYXNzZXNzbWVudC9pbmRleCc7XG4gKlxuICogTFQuaW5pdChpdGVtc0FwcCk7IC8vIFNldCB1cCBMVCB3aXRoIHRoZSBJdGVtcyBBUEkgYXBwbGljYXRpb24gaW5zdGFuY2UgdmFyaWFibGVcbiAqIExULmV4dGVuc2lvbnMuYXJpYUNvdW50T25OYXYucnVuKCk7XG4gKiBAc2luY2UgMC4zLjBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1bigpIHtcbiAgICBhcHAuYXBwSW5zdGFuY2UoKS5vbignaXRlbTpsb2FkJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBudW1JdGVtcyA9IGFjdGl2aXR5LnRvdGFsSXRlbXMoKTtcbiAgICAgICAgY29uc3QgZWxQcmV2aW91cyA9IEFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnaXRlbS1wcmV2JykpO1xuICAgICAgICBjb25zdCBlbE5leHQgPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2l0ZW0tbmV4dCcpKTtcbiAgICAgICAgY29uc3QgZWxOYXYgPSBlbFByZXZpb3VzLmNvbmNhdChlbE5leHQpO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxOYXYubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGF0dHIgPSBlbE5hdltpXS5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKTtcbiAgICAgICAgICAgIGVsTmF2W2ldLnNldEF0dHJpYnV0ZSgnYXJpYS1saXZlJywgYXR0ciArICcgb2YgJyArIG51bUl0ZW1zKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbImFwcCIsImFjdGl2aXR5IiwicnVuIiwiYXBwSW5zdGFuY2UiLCJvbiIsIm51bUl0ZW1zIiwidG90YWxJdGVtcyIsImVsUHJldmlvdXMiLCJBcnJheSIsImZyb20iLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJlbE5leHQiLCJlbE5hdiIsImNvbmNhdCIsImkiLCJsZW5ndGgiLCJhdHRyIiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/aria/ariaCountOnNav.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/columnResizer.js":
/*!*********************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/columnResizer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/items */ \"./src/assessment/core/items.js\");\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Adds a UI border in between the left and right columns (for\n * items with 2 columns) providing the ability for the end user\n * to resize the layout by dragging the element left or right.\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/resize.gif\" alt=\"\" width=\"900\"></p>\n * @module Extensions/Assessment/columnResizer\n */\n\nvar state = {\n  renderedCss: false,\n  resize: {\n    triggered: false\n  }\n};\n\n/**\n * Sets up an item load listener to add a UI element allowing\n * users to drag to resize the column divider.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.columnResizer.run();\n * @since 0.5.0\n */\nfunction run() {\n  state.renderedCss || injectCSS();\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n    setupResizer();\n  });\n  window.addEventListener('resize', debounce(setupResizer, 250));\n}\n\n/**\n * Adds the UI element to resize the 2-columns.\n *\n * Does nothing on a single column item.\n *\n * Doesn't render if in responsive mode.\n * @since 0.5.0\n * @ignore\n */\nfunction setupResizer() {\n  var elItem = _core_items__WEBPACK_IMPORTED_MODULE_1__.itemElement();\n  var elColumns = elItem.querySelectorAll('[class^=\"col-\"]');\n  var hasResizer = Boolean(elItem.querySelector('.lrn-resizer'));\n  var isResponsiveMode = Boolean(document.querySelector('.lrn-layout-single-column'));\n\n  // Only add the resizable UI if we have 2 columns\n  if (elColumns.length === 2) {\n    if (!isResponsiveMode && !hasResizer) {\n      var elResizer = document.createElement('div');\n      elResizer.setAttribute('tooltip', 'Click and hold to drag column width');\n      // elResizer.setAttribute('tabindex', '0');\n      var elTab = document.createElement('span');\n      elTab.innerHTML = '↤ ↦';\n      elResizer.classList.add('lrn-resizer');\n      elColumns[0].classList.add('lrn-column-left');\n      elColumns[1].classList.add('lrn-column-right');\n      elResizer.append(elTab);\n      elColumns[0].after(elResizer);\n    } else if (isResponsiveMode && hasResizer) {\n      clearResizer(elItem, elColumns);\n    }\n    doResize(elItem);\n  }\n}\n\n/**\n * Removes resizer UI element and width attribute\n * from the left column.\n * @since 0.5.0\n * @ignore\n */\nfunction clearResizer(elItem, elColumns) {\n  var elResizer = elItem.querySelector('.lrn-resizer');\n  if (elResizer) {\n    elResizer.remove();\n  }\n  elColumns[0].removeAttribute('style');\n  window.dispatchEvent(new Event('resize'));\n}\n\n/**\n * JavaScript logic for the column resize feature.\n * @since 0.5.0\n * @ignore\n */\nfunction doResize(elItem) {\n  var resizable = function resizable(elResizer) {\n    var prevSibling = elResizer.previousElementSibling;\n    var x = 0;\n    var prevSiblingWidth = 0;\n    var handleInteractionStart = function handleInteractionStart(e) {\n      if (e instanceof MouseEvent) {\n        x = e.clientX;\n      } else {\n        x = e.targetTouches[0].clientX;\n      }\n      var rect = prevSibling.getBoundingClientRect();\n      prevSiblingWidth = rect.width;\n\n      // Mouse events\n      document.addEventListener('mousemove', handleInteractionMove);\n      document.addEventListener('mouseup', _handleInteractionEnd);\n\n      // Touch events\n      document.addEventListener('touchmove', handleInteractionMove);\n      document.addEventListener('touchend', _handleInteractionEnd);\n    };\n    var handleInteractionMove = function handleInteractionMove(e) {\n      var dx;\n      if (e instanceof MouseEvent) {\n        dx = e.clientX - x;\n      } else {\n        dx = e.targetTouches[0].clientX - x;\n      }\n      var w = (prevSiblingWidth + dx) * 100 / elResizer.parentNode.getBoundingClientRect().width;\n      if (w >= 10 && w <= 90) {\n        prevSibling.style.width = w + '%';\n      }\n    };\n    var _handleInteractionEnd = function handleInteractionEnd() {\n      // Mouse events\n      document.removeEventListener('mousemove', handleInteractionMove);\n      document.removeEventListener('mouseup', _handleInteractionEnd);\n\n      // Touch events\n      document.removeEventListener('touchmove', handleInteractionMove);\n      document.removeEventListener('touchend', _handleInteractionEnd);\n    };\n    elResizer.addEventListener('mousedown', handleInteractionStart);\n    elResizer.addEventListener('touchstart', handleInteractionStart);\n  };\n  var elResizer = elItem.querySelector('.lrn-resizer');\n  if (elResizer) {\n    resizable(elResizer);\n  }\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 0.5.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity column resizer styles */\\n.lrn-resizer {\\n    background-color: #e8e8e8;\\n    cursor: grab;\\n    width: 3px;\\n    padding: 0;\\n    position: relative;\\n}\\n.lrn-resizer span {\\n    position: relative;\\n    width: 45px;\\n    height: 30px;\\n    border: 1px solid #e4e4e4;\\n    left: -22px;\\n    border-radius: 3px;\\n    cursor: grab;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: 1.5em;\\n    z-index: 2;\\n    padding-bottom: 3px;\\n    color: #444;\\n\\n    -webkit-user-select: none;\\n    user-select: none;\\n\\n    background: rgb(233,233,233);\\n    background: linear-gradient(0deg, rgba(233,233,233,1) 0%, rgba(250,250,250,1) 51%, rgba(238,238,238,1) 100%);\\n}\\n.row {\\n    display: flex;\\n}\\n.col-xs-6.lrn-column-left {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 5em;\\n    overflow: hidden;\\n}\\n.col-xs-6.lrn-column-right {\\n    display: flex;\\n\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 5em;\\n    overflow: hidden;\\n}\\n.lrn-column-left .lrn_widget,\\n.lrn-column-right .lrn_widget {\\n    padding: 1.5em;\\n}\\n@media (max-width: 650px) {\\n    .lrn-resizer {\\n        display: none;\\n    }\\n}\\n\";\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}\n\n/**\n * Generic debounce function.\n * @param {*} func\n * @param {number} wait\n * @since 0.5.0\n * @ignore\n */\nfunction debounce(func, wait) {\n  var _this = this;\n  if (!state.resize.triggered) {\n    state.resize.triggered = true;\n    func.apply(this);\n  }\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      state.resize.triggered = false;\n      func.apply(_this, args);\n    }, wait);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/columnResizer.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/hideAlternatives.js":
/*!************************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/hideAlternatives.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/questions */ \"./src/assessment/core/questions.js\");\n/* harmony import */ var _utils_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/dom */ \"./src/utils/dom.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/logger */ \"./src/utils/logger.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! seedrandom */ \"./node_modules/seedrandom/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash-es */ \"./node_modules/lodash-es/shuffle.js\");\n\n\n\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Hides a number of MCQ distractors/alternatives, that aren't\n * the correct answer, as an accommodation capability for\n * students wanting to avoid cognitive load.\n * @module Extensions/Assessment/hideAlternatives\n */\n\n/**\n * Sets up an item load listener to hide distractor(s).\n * @param {number=} num The number of MCQ options to hide. Defaults to `1`.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.hideAlternatives.run();\n * @since 0.3.0\n */\nfunction run(num) {\n  var numToHide = num || 1;\n  var qt = 'mcq'; // Limited to MCQ only (see targeted classnames when hiding options)\n  var logPrefix = 'LRN Hide Alternatives:';\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n    var qs = _core_questions__WEBPACK_IMPORTED_MODULE_1__.questions();\n    Object.values(qs).forEach(function (question) {\n      if (question.type === qt) {\n        if (isSingleResponseMode(question)) {\n          if (hasValidNumToHide(question, numToHide)) {\n            if (hasValidationObject(question)) {\n              if (hasCorrectAnswers(question.validation)) {\n                // Create a question options list excluding the correct answer\n                var optionsList = [];\n                var correctAnswers = getCorrectAnswers(question.validation);\n                Object.values(correctAnswers).forEach(function (answer) {\n                  Object.values(question.options).forEach(function (option) {\n                    if (answer !== option.value) {\n                      optionsList.push(String(option.value));\n                    }\n                  });\n                });\n\n                // Shuffle the options list\n                var optionsToHide = [];\n                for (var j = 0; j < numToHide; j++) {\n                  optionsToHide.push(shuffleArrayWithSeed(optionsList, question.response_id)[j]);\n                }\n                // Hide the option(s)\n                (0,_utils_dom__WEBPACK_IMPORTED_MODULE_2__.waitForElement)(question.response_id, function (responseParent) {\n                  if (!responseParent) {\n                    return; // Ensure responseParent is valid\n                  }\n                  var responsesEl = responseParent.getElementsByClassName('lrn_mcqgroup');\n                  if (responsesEl.length === 0) {\n                    return; // Ensure the element exists\n                  }\n                  for (var i = 0; i < responsesEl[0].children.length; i++) {\n                    var inputEl = responsesEl[0].children[i].getElementsByClassName('lrn-input');\n                    if (inputEl.length === 0) {\n                      continue; // Ensure input exists\n                    }\n                    for (var _i = 0, _optionsToHide = optionsToHide; _i < _optionsToHide.length; _i++) {\n                      var val = _optionsToHide[_i];\n                      if (inputEl[0].getAttribute('value') === val) {\n                        responsesEl[0].children[i].style.display = 'none';\n                      }\n                    }\n                  }\n                });\n              } else {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info(logPrefix, 'No correct answer found in validation object');\n              }\n            } else {\n              _utils_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info(logPrefix, ' No validation object found');\n            }\n          } else {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info(logPrefix, 'Invalid number of options to hide:', numToHide);\n          }\n        } else {\n          _utils_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info(logPrefix, 'Only supports single response mode');\n        }\n      }\n    });\n  });\n}\n\n/**\n * @param {object} question The question JSON object to inspect\n * @return {boolean} Whether the question was set up with single responses\n * @since 0.3.0\n * @ignore\n */\nfunction isSingleResponseMode(question) {\n  return !question.multiple_responses || question.multiple_responses === false;\n}\n\n/**\n * @param {object} question The question JSON object to inspect\n * @return {boolean} Whether the caller passes a correct number of options to hide\n * @since 0.3.0\n * @ignore\n */\nfunction hasValidNumToHide(question, num) {\n  return question.options.length - num > 1;\n}\n\n/**\n * @param {object} question The question JSON object to inspect\n * @return {boolean} Whether the object contains a `validation` key\n * @since 0.3.0\n * @ignore\n */\nfunction hasValidationObject(question) {\n  return 'validation' in question ? question.validation : false;\n}\n\n/**\n * @param {object} validation The question validation object to inspect\n * @return {boolean} Whether the object contains a `validation` key\n * @since 0.3.0\n * @ignore\n */\nfunction hasCorrectAnswers(validation) {\n  return Boolean(validation.valid_response.value && validation.valid_response.value.length);\n}\n\n/**\n * @param {object} validation The question validation object\n * @return {array} The correct responses as set by the author\n * @since 0.3.0\n * @ignore\n */\nfunction getCorrectAnswers(validation) {\n  return validation.valid_response.value;\n}\n\n/**\n * Utility function to randomise an array with a seed.\n * @param {array} arr Array to randomise\n * @param {string} seed\n * @returns array\n */\nfunction shuffleArrayWithSeed(arr, seed) {\n  var prng = seedrandom__WEBPACK_IMPORTED_MODULE_4___default()(seed);\n  return (0,lodash_es__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(arr.map(function (value) {\n    return {\n      value: value,\n      sort: prng()\n    };\n  })).sort(function (a, b) {\n    return a.sort - b.sort;\n  }).map(function (_ref) {\n    var value = _ref.value;\n    return value;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/hideAlternatives.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/keyboardShortcuts.js":
/*!*************************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/keyboardShortcuts.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/items */ \"./src/assessment/core/items.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/questions */ \"./src/assessment/core/questions.js\");\n/* harmony import */ var platform_detect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! platform-detect */ \"./node_modules/platform-detect/index.js\");\n/* harmony import */ var platform_detect__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(platform_detect__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var mousetrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mousetrap */ \"./node_modules/mousetrap/mousetrap.js\");\n/* harmony import */ var mousetrap__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(mousetrap__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _utils_validation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/validation */ \"./src/utils/validation.js\");\n\n\n\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Enables keyboard shortcuts to perform an action against\n * a question or on the assessment player.\n * @module Extensions/Assessment/keyboardShortcuts\n */\n\nvar state = {\n  supportedPlatforms: ['chromeos', 'macos', 'windows']\n};\n\n/**\n * Sets up listeners to enable item or player keyboard shortcuts.\n *\n * Supports:\n *  - setting an MCQ response on items with a single MC questions, not multi-part.\n *  - enabling answer masking mode.\n *  - setting a mask on MCQ possible responses.\n *  - toggle flagging of an item.\n *\n * All listeners will fire when you call `run()`. Pass a custom\n * map if you want to remove any shortcuts.\n *\n * See example section below for bindings.\n * @param {object=} map A map of keyboard shortcut options.\n * ```\n * // Default configuration:\n * {\n *     global: [\n *         {\n *             bindings: {\n *                 chromeos: ['ctrl+shift+v'],\n *                 macos: ['command+shift+v'],\n *                 windows: ['ctrl+shift+v'],\n *             },\n *             type: 'item.flag',\n *         },\n *         {\n *             bindings: {\n *                 chromeos: ['ctrl+alt+0'],\n *                 macos: ['command+option+0'],\n *                 windows: ['ctrl+alt+0'],\n *             },\n *             type: 'masking.enable',\n *         },\n *     ],\n *     item: [\n *         {\n *             bindings: {\n *                 chromeos: ['ctrl+shift+1', 'ctrl+shift+2', 'ctrl+shift+3', 'ctrl+shift+4', 'ctrl+shift+5', 'ctrl+shift+6'],\n *                 macos: ['command+ctrl+1', 'command+ctrl+2', 'command+ctrl+3', 'command+ctrl+4', 'command+ctrl+5', 'command+ctrl+6'],\n *                 windows: ['ctrl+shift+1', 'ctrl+shift+2', 'ctrl+shift+3', 'ctrl+shift+4', 'ctrl+shift+5', 'ctrl+shift+6'],\n *             },\n *             restrictTo: ['mcq'],\n *             type: 'response.set',\n *         },\n *         {\n *             bindings: {\n *                 chromeos: ['ctrl+alt+1', 'ctrl+alt+2', 'ctrl+alt+3', 'ctrl+alt+4', 'ctrl+alt+5', 'ctrl+alt+6'],\n *                 macos: ['command+option+1', 'command+option+2', 'command+option+3', 'command+option+4', 'command+option+5', 'command+option+6'],\n *                 windows: ['ctrl+alt+1', 'ctrl+alt+2', 'ctrl+alt+3', 'ctrl+alt+4', 'ctrl+alt+5', 'ctrl+alt+6'],\n *             },\n *             type: 'response.mask',\n *         },\n *     ],\n * };\n * ```\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.keyboardShortcuts.run();\n * @since 0.4.0\n */\nfunction run() {\n  var map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultBindings();\n  var currentPlatform = getPlatform();\n  state.bindings = map;\n  if (currentPlatform) {\n    overrideCallback();\n\n    // Global (player wide) bindings\n    if (state.bindings.hasOwnProperty('global') && Array.isArray(state.bindings.global)) {\n      state.bindings.global.forEach(function (obj) {\n        if (obj.hasOwnProperty('type')) {\n          switch (obj.type) {\n            case 'item.flag':\n              toggleFlag(obj.bindings[currentPlatform]);\n              break;\n            case 'masking.enable':\n              enableMasking(obj.bindings[currentPlatform]);\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n\n    // Per item bindings\n    if (state.bindings.hasOwnProperty('item') && Array.isArray(state.bindings.item)) {\n      _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n        state.bindings.item.forEach(function (obj) {\n          if (obj.hasOwnProperty('type')) {\n            switch (obj.type) {\n              case 'response.mask':\n                setResponseMask(obj.bindings[currentPlatform]);\n                break;\n              case 'response.set':\n                setMcqOption(obj.bindings[currentPlatform]);\n                break;\n              default:\n                break;\n            }\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * Enables masking mode for a single question on the active\n * item (if supported).\n * @param {object} bindings Platform specific bindings for this action.\n * @since 0.4.0\n * @ignore\n */\nfunction enableMasking(bindings) {\n  var q = _core_questions__WEBPACK_IMPORTED_MODULE_2__.questionInstance();\n  if (!(0,_utils_validation__WEBPACK_IMPORTED_MODULE_5__.isEmptyObject)(q) && q.isMaskable()) {\n    mousetrap__WEBPACK_IMPORTED_MODULE_4__.bind(bindings, function () {\n      _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().questionsApp().masking(!_core_items__WEBPACK_IMPORTED_MODULE_1__.isMaskingEnabled());\n    });\n  } else {\n    // Ignoring items with more than one question\n  }\n}\n\n/**\n * The default key bindings object.\n * @returns {object}\n * @since 0.4.0\n * @ignore\n */\nfunction getDefaultBindings() {\n  return {\n    global: [{\n      bindings: {\n        chromeos: ['ctrl+shift+v'],\n        macos: ['command+shift+v'],\n        windows: ['ctrl+shift+v']\n      },\n      type: 'item.flag'\n    }, {\n      bindings: {\n        chromeos: ['ctrl+alt+0'],\n        macos: ['command+option+0'],\n        windows: ['ctrl+alt+0']\n      },\n      type: 'masking.enable'\n    }],\n    item: [{\n      bindings: {\n        chromeos: ['ctrl+shift+1', 'ctrl+shift+2', 'ctrl+shift+3', 'ctrl+shift+4', 'ctrl+shift+5', 'ctrl+shift+6'],\n        macos: ['command+ctrl+1', 'command+ctrl+2', 'command+ctrl+3', 'command+ctrl+4', 'command+ctrl+5', 'command+ctrl+6'],\n        windows: ['ctrl+shift+1', 'ctrl+shift+2', 'ctrl+shift+3', 'ctrl+shift+4', 'ctrl+shift+5', 'ctrl+shift+6']\n      },\n      restrictTo: ['mcq'],\n      type: 'response.set'\n    }, {\n      bindings: {\n        chromeos: ['ctrl+alt+1', 'ctrl+alt+2', 'ctrl+alt+3', 'ctrl+alt+4', 'ctrl+alt+5', 'ctrl+alt+6'],\n        macos: ['command+option+1', 'command+option+2', 'command+option+3', 'command+option+4', 'command+option+5', 'command+option+6'],\n        windows: ['ctrl+alt+1', 'ctrl+alt+2', 'ctrl+alt+3', 'ctrl+alt+4', 'ctrl+alt+5', 'ctrl+alt+6']\n      },\n      type: 'response.mask'\n    }]\n  };\n}\n\n/**\n * Checks to see whether the user platform is supported\n * for keyboard shortcuts. Eg we won't support touch\n * platforms.\n * @returns {boolean}\n * @since 0.4.0\n * @ignore\n */\nfunction getPlatform() {\n  var currentPlatform;\n  state.supportedPlatforms.forEach(function (p) {\n    if (platform_detect__WEBPACK_IMPORTED_MODULE_3__[p]) {\n      currentPlatform = p;\n    }\n  });\n  return currentPlatform;\n}\n\n/**\n * Override the default stop callback method of mousetrap\n * because if the focus is on an MCQ element (radio or\n * checkbox) we still want to fire an event if the user\n * chooses a different option.\n * @since 0.4.0\n * @ignore\n */\nfunction overrideCallback() {\n  mousetrap__WEBPACK_IMPORTED_MODULE_4__.prototype.stopCallback = function (e, element) {\n    var activeEl = document.activeElement;\n\n    // We don't stop if focus is on a radio button\n    if (activeEl.getAttribute('type') === 'radio' || activeEl.getAttribute('type') === 'checkbox') {\n      return false;\n    }\n\n    // if the element has the class \"mousetrap\" then no need to stop\n    if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n      return false;\n    }\n\n    // stop for input, select, and textarea\n    return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.contentEditable && element.contentEditable == 'true';\n  };\n}\n\n/**\n * Manually clicks an MCQ possible response.\n * @param {object} bindings Platform specific bindings for this action.\n * @since 0.4.0\n * @ignore\n */\nfunction setMcqOption(bindings) {\n  var qs = _core_questions__WEBPACK_IMPORTED_MODULE_2__.questions();\n  var numMCQs = 0;\n  qs.forEach(function (q) {\n    if (q.type === 'mcq') {\n      numMCQs++;\n    }\n  });\n  if (numMCQs === 1) {\n    Object.values(qs).forEach(function (question) {\n      if (question.type === 'mcq') {\n        mousetrap__WEBPACK_IMPORTED_MODULE_4__.bind(bindings, function (e) {\n          var _question$options;\n          if (((_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.length) >= e.key) {\n            var domWrapper = document.getElementById(\"\".concat(question.response_id));\n            var domOptions = domWrapper.querySelectorAll('.lrn-input');\n            domOptions[e.key - 1].click();\n          }\n        });\n      }\n    });\n  } else {\n    // Ignoring items with more than one MCQ\n  }\n}\n\n/**\n * Manually masks a possible response.\n * @param {object} bindings Platform specific bindings for this action.\n * @since 0.4.0\n * @ignore\n */\nfunction setResponseMask(bindings) {\n  var qs = _core_questions__WEBPACK_IMPORTED_MODULE_2__.questions();\n  var numMCQs = 0;\n  qs.forEach(function (q) {\n    if (q.type === 'mcq') {\n      numMCQs++;\n    }\n  });\n  if (numMCQs === 1) {\n    Object.values(qs).forEach(function (question) {\n      if (question.type === 'mcq') {\n        mousetrap__WEBPACK_IMPORTED_MODULE_4__.bind(bindings, function (e, combo) {\n          if (_core_items__WEBPACK_IMPORTED_MODULE_1__.isMaskingEnabled()) {\n            var _question$options2;\n            var index = Number(combo.at(-1));\n            if (((_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : _question$options2.length) >= index) {\n              var domWrapper = _core_items__WEBPACK_IMPORTED_MODULE_1__.itemElement();\n              var domOptions = domWrapper.querySelectorAll('.lrn-mcq-option');\n              var elMask = domOptions[index - 1].querySelector('.lrn-mask');\n              if (elMask) {\n                elMask.click();\n              }\n            }\n          }\n        });\n      }\n    });\n  } else {\n    // Ignoring items with more than one MCQ\n  }\n}\n\n/**\n * Manually toggles the item flag button.\n * @param {object} bindings Platform specific bindings for this action.\n * @since 0.4.0\n * @ignore\n */\nfunction toggleFlag(bindings) {\n  mousetrap__WEBPACK_IMPORTED_MODULE_4__.bind(bindings, _core_items__WEBPACK_IMPORTED_MODULE_1__.flag);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/keyboardShortcuts.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/magnifier.js":
/*!*****************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/magnifier.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run),\n/* harmony export */   setupButtons: () => (/* binding */ setupButtons),\n/* harmony export */   toggle: () => (/* binding */ toggle)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/items */ \"./src/assessment/core/items.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/logger */ \"./src/utils/logger.js\");\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Allows the end-user to launch a magnifier to move around\n * the screen and zoom in on whatever content they move it\n * on top of.\n *\n * TODO:\n *  - make movable via keyboard\n *\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/magnifier.png\" alt=\"\" width=\"800\"></p>\n * @module Extensions/Assessment/magnifier\n */\n\nvar LOG_LEVEL = 'ERROR';\nvar state = {\n  _initialised: false,\n  magnifier: null\n};\n\n/**\n * Initialises the screen magnifier.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.magnifier.run();\n *\n * Options argument to override defaults which are:\n * {\n *     zoom: 4,\n *     shape: 'square',\n *     width: 310,\n *     height: 310,\n * }\n * @param {object} options Optional config object to override defaults\n * @since 0.7.0\n */\nfunction run(options) {\n  if (!state._initialised) {\n    if (!options) {\n      options = {\n        zoom: 4,\n        shape: 'square',\n        width: 350,\n        height: 350\n      };\n    }\n    state.magnifier = new HTMLMagnifier(options);\n    state._initialised = true;\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Magnifier already initialised, ignoring run();', LOG_LEVEL);\n  }\n}\n\n/**\n * Sets up listeners on custom buttons to toggle the magnifier.\n * @param {string} classname CSS class value of the element to launch the magnifier\n * @since 2.16.0\n */\nfunction setupButtons() {\n  var classname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'lrn__magnifier';\n  var elButtons = document.querySelectorAll(\".\".concat(classname));\n  elButtons.forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      state.magnifier.toggle();\n    });\n  });\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', checkImageContent());\n}\n\n/**\n * Toggle visibility of the magnifier.\n * @since 2.16.0\n */\nfunction toggle() {\n  state.magnifier.toggle();\n}\nfunction HTMLMagnifier(options) {\n  var _this = this;\n  _this.options = Object.assign({\n    zoom: 2,\n    shape: 'square',\n    width: 200,\n    height: 200\n  }, options);\n  var magnifierTemplate = \"<div class=\\\"magnifier\\\" style=\\\"display: none;position: fixed;overflow: hidden;background-color: white;border: 1px solid #555;border-radius: 4px;z-index:10000;\\\">\\n                                <div class=\\\"magnifier-content\\\" style=\\\"top: 0px;left: 0px;margin-left: 0px;margin-top: 0px;overflow: visible;position: absolute;display: block;transform-origin: left top;-moz-transform-origin: left top;-ms-transform-origin: left top;-webkit-transform-origin: left top;-o-transform-origin: left top;user-select: none;-moz-user-select: none;-webkit-user-select: none;padding-top: 0px\\\"></div>\\n                                <div class=\\\"magnifier-glass\\\" style=\\\"position: absolute;top: 0px;left: 0px;width: 100%;height: 100%;opacity: 0.0;-ms-filter: alpha(opacity=0);background-color: white;cursor: move;\\\"></div>\\n                            </div>\";\n  var magnifier, magnifierContent;\n  var observerObj;\n  var syncTimeout;\n  var isVisible = false;\n  var magnifierBody;\n  var events = {};\n  document.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n      if (_this.isVisible()) {\n        _this.hide();\n      }\n    }\n  });\n  function setPosition(element, left, top) {\n    element.style.left = \"\".concat(left, \"px\");\n    element.style.top = \"\".concat(top, \"px\");\n  }\n  function setDimensions(element, width, height) {\n    element.style.width = \"\".concat(width, \"px\");\n    element.style.height = \"\".concat(height, \"px\");\n  }\n  function setupMagnifier() {\n    switch (_this.options.shape) {\n      case 'square':\n        setDimensions(magnifier, _this.options.width, _this.options.height);\n        break;\n      case 'circle':\n        setDimensions(magnifier, _this.options.width, _this.options.height);\n        magnifier.style.borderRadius = '50%';\n        break;\n    }\n    magnifierContent.style.WebkitTransform = magnifierContent.style.MozTransform = magnifierContent.style.OTransform = magnifierContent.style.MsTransform = magnifierContent.style.transform = \"scale(\".concat(_this.options.zoom, \")\");\n  }\n  function isDescendant(parent, child) {\n    var node = child;\n    while (node != null) {\n      if (node == parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  }\n  function syncContent() {\n    if (isVisible) {\n      prepareContent();\n      syncViewport();\n      syncScrollBars();\n    }\n  }\n  function syncContentQueued() {\n    if (isVisible) {\n      window.clearTimeout(syncTimeout);\n      syncTimeout = window.setTimeout(syncContent, 100);\n    }\n  }\n  function domChanged() {\n    if (isVisible) {\n      syncContentQueued();\n    }\n  }\n  function unBindDOMObserver() {\n    if (observerObj) {\n      observerObj.disconnect();\n      observerObj = null;\n    }\n    if (document.removeEventListener) {\n      document.removeEventListener('DOMNodeInserted', domChanged, false);\n      document.removeEventListener('DOMNodeRemoved', domChanged, false);\n    }\n  }\n  function triggerEvent(event, data) {\n    var handlers = events[event];\n    if (handlers) {\n      for (var i = 0; i < handlers.length; i++) {\n        handlers[i].call(_this, data);\n      }\n    }\n  }\n  function syncViewport() {\n    var x1 = magnifier.offsetLeft;\n    var y1 = magnifier.offsetTop;\n    var x2 = document.body.scrollLeft;\n    var y2 = document.body.scrollTop;\n    var left = -x1 * _this.options.zoom - x2 * _this.options.zoom;\n    var top = -y1 * _this.options.zoom - y2 * _this.options.zoom;\n    setPosition(magnifierContent, left, top);\n    triggerEvent('viewPortChanged', magnifierBody);\n  }\n  function removeSelectors(container, selector) {\n    var elements = container.querySelectorAll(selector);\n    if (elements.length > 0) {\n      for (var i = 0; i < elements.length; i++) {\n        elements[i].parentNode.removeChild(elements[i]);\n      }\n    }\n  }\n  function prepareContent() {\n    magnifierContent.innerHTML = '';\n    var bodyOriginal = document.body;\n    var bodyCopy = bodyOriginal.cloneNode(true);\n    var color = bodyOriginal.style.backgroundColor;\n    if (color) {\n      magnifier.css('background-color', color);\n    }\n    bodyCopy.style.cursor = 'auto';\n    bodyCopy.style.paddingTop = '0px';\n    bodyCopy.setAttribute('unselectable', 'on');\n    var canvasOriginal = bodyOriginal.querySelectorAll('canvas');\n    var canvasCopy = bodyCopy.querySelectorAll('canvas');\n    if (canvasOriginal.length > 0) {\n      if (canvasOriginal.length === canvasCopy.length) {\n        for (var i = 0; i < canvasOriginal.length; i++) {\n          var ctx = canvasCopy[i].getContext('2d');\n          ctx.drawImage(canvasOriginal[i], 0, 0);\n        }\n      }\n    }\n    removeSelectors(bodyCopy, 'script');\n    removeSelectors(bodyCopy, 'audio');\n    removeSelectors(bodyCopy, 'video');\n    removeSelectors(bodyCopy, '.magnifier');\n    triggerEvent('prepareContent', bodyCopy);\n    magnifierContent.appendChild(bodyCopy);\n    var width = document.body.clientWidth;\n    var height = document.body.clientHeight;\n    setDimensions(magnifierContent, width, height);\n    magnifierBody = magnifierContent.querySelector('body');\n    triggerEvent('contentUpdated', magnifierBody);\n  }\n  function initScrollBars() {\n    triggerEvent('initScrollBars', magnifierBody);\n  }\n  function syncScroll(ctrl) {\n    var selectors = [];\n    if (ctrl.getAttribute) {\n      if (ctrl.getAttribute('id')) {\n        selectors.push('#' + ctrl.getAttribute('id'));\n      }\n      if (ctrl.className) {\n        selectors.push('.' + ctrl.className.split(' ').join('.'));\n      }\n      for (var i = 0; i < selectors.length; i++) {\n        var t = magnifierBody.querySelectorAll(selectors[i]);\n        if (t.length == 1) {\n          t[0].scrollTop = ctrl.scrollTop;\n          t[0].scrollLeft = ctrl.scrollLeft;\n          return true;\n        }\n      }\n    } else if (ctrl == document) {\n      syncViewport();\n    }\n    return false;\n  }\n  function syncScrollBars(e) {\n    if (isVisible) {\n      if (e && e.target) {\n        syncScroll(e.target);\n      } else {\n        var scrolled = [];\n        var elements = document.querySelectorAll('div');\n        for (var i = 0; i < elements.length; i++) {\n          if (elements[i].scrollTop > 0) {\n            scrolled.push(elements[i]);\n          }\n        }\n        for (var _i = 0; _i < scrolled.length; _i++) {\n          if (!isDescendant(magnifier, scrolled[_i])) {\n            syncScroll(scrolled[_i]);\n          }\n        }\n      }\n      triggerEvent('syncScrollBars', magnifierBody);\n    }\n  }\n  function makeDraggable(ctrl, options) {\n    var _this = this;\n    var dragObject = null;\n    var dragHandler = null;\n    options = options || {};\n    options.exclude = ['INPUT', 'TEXTAREA', 'SELECT', 'A', 'BUTTON'];\n    if (options.handler) {\n      dragHandler = ctrl.querySelector(options.handler);\n    } else {\n      dragHandler = ctrl;\n    }\n    function setPosition(element, left, top) {\n      element.style.left = \"\".concat(left, \"px\");\n      element.style.top = \"\".concat(top, \"px\");\n    }\n    var pos_y, pos_x, ofs_x, ofs_y;\n    ctrl.style.cursor = 'move';\n    function downHandler(e) {\n      var target = e.target || e.srcElement;\n      var parent = target.parentNode;\n      if (target && options.exclude.indexOf(target.tagName.toUpperCase()) == -1) {\n        if (!parent || options.exclude.indexOf(parent.tagName.toUpperCase()) == -1) {\n          // img in a\n          dragObject = ctrl;\n          var pageX = e.pageX || e.touches[0].pageX;\n          var pageY = e.pageY || e.touches[0].pageY;\n          ofs_x = dragObject.getBoundingClientRect().left - dragObject.offsetLeft;\n          ofs_y = dragObject.getBoundingClientRect().top - dragObject.offsetTop;\n          pos_x = pageX - (dragObject.getBoundingClientRect().left + document.body.scrollLeft);\n          pos_y = pageY - (dragObject.getBoundingClientRect().top + document.body.scrollTop);\n          e.preventDefault();\n        }\n      }\n    }\n    function moveHandler(e) {\n      if (dragObject !== null) {\n        var pageX = e.pageX || e.touches[0].pageX;\n        var pageY = e.pageY || e.touches[0].pageY;\n        var left = pageX - pos_x - ofs_x - document.body.scrollLeft;\n        var top = pageY - pos_y - ofs_y - document.body.scrollTop;\n        setPosition(dragObject, left, top);\n        if (options.ondrag) {\n          options.ondrag.call(e);\n        }\n      }\n    }\n    function upHandler() {\n      if (dragObject !== null) {\n        dragObject = null;\n      }\n    }\n    var events = [{\n      target: dragHandler,\n      types: ['mousedown', 'touchstart'],\n      handler: downHandler\n    }, {\n      target: window,\n      types: ['mousemove', 'touchmove'],\n      handler: moveHandler\n    }, {\n      target: window,\n      types: ['mouseup', 'touchend'],\n      handler: upHandler\n    }];\n    events.forEach(function (_ref) {\n      var target = _ref.target,\n        types = _ref.types,\n        handler = _ref.handler;\n      types.forEach(function (type) {\n        return target.addEventListener(type, handler);\n      });\n    });\n    return _this;\n  }\n  function init() {\n    var div = document.createElement('div');\n    div.innerHTML = magnifierTemplate;\n    magnifier = div.querySelector('.magnifier');\n    document.body.appendChild(magnifier);\n    magnifierContent = magnifier.querySelector('.magnifier-content');\n    if (window.addEventListener) {\n      window.addEventListener('resize', syncContent, false);\n      window.addEventListener('scroll', syncScrollBars, true);\n    }\n    makeDraggable(magnifier, {\n      ondrag: syncViewport\n    });\n  }\n  _this.setZoom = function (value) {\n    _this.options.zoom = value;\n    setupMagnifier();\n  };\n  _this.setShape = function (shape, width, height) {\n    _this.options.shape = shape;\n    if (width) {\n      _this.options.width = width;\n    }\n    if (height) {\n      _this.options.height = height;\n    }\n    setupMagnifier();\n  };\n  _this.setWidth = function (value) {\n    _this.options.width = value;\n    setupMagnifier();\n  };\n  _this.setHeight = function (value) {\n    _this.options.height = value;\n    setupMagnifier();\n  };\n  _this.getZoom = function () {\n    return _this.options.zoom;\n  };\n  _this.getShape = function () {\n    return _this.options.shape;\n  };\n  _this.getWidth = function () {\n    return _this.options.width;\n  };\n  _this.getHeight = function () {\n    return _this.options.height;\n  };\n  _this.isVisible = function () {\n    return isVisible;\n  };\n  _this.on = function (event, callback) {\n    events[event] = events[event] || [];\n    events[event].push(callback);\n  };\n  _this.syncScrollBars = function () {\n    syncScrollBars();\n  };\n  _this.syncContent = function () {\n    syncContentQueued();\n  };\n  _this.hide = function () {\n    unBindDOMObserver();\n    magnifierContent.innerHTML = '';\n    magnifier.style.display = 'none';\n    isVisible = false;\n  };\n  _this.show = function (event) {\n    var left, top;\n    if (event) {\n      left = event.pageX - 175;\n      top = event.pageY - 175;\n    } else {\n      left = 200;\n      top = 200;\n    }\n    setupMagnifier();\n    prepareContent();\n    setPosition(magnifier, left, top);\n    magnifier.style.display = '';\n    syncViewport();\n    syncScrollBars();\n    initScrollBars();\n    // bindDOMObserver();\n    isVisible = true;\n  };\n  _this.toggle = function () {\n    if (_this.isVisible()) {\n      _this.hide();\n    } else {\n      _this.show();\n    }\n  };\n  init();\n  return _this;\n}\nfunction checkImageContent() {\n  var elItem = _core_items__WEBPACK_IMPORTED_MODULE_1__.itemElement();\n  var elImages = elItem.querySelectorAll('img');\n  if (elImages) {\n    elImages.forEach(function (img) {\n      img.addEventListener('click', function (e) {\n        if (!state.magnifier.isVisible()) {\n          state.magnifier.show(e);\n        }\n      });\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/magnifier.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/mcqLabelPrefix.js":
/*!**********************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/mcqLabelPrefix.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/logger */ \"./src/utils/logger.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/questions */ \"./src/assessment/core/questions.js\");\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Adds a prefix to all multiple-choice labels (correct\n * answer and distractors).\n *\n * Ignores block UI and radio button under option.\n *\n * Supports\n *  - multi-select MCQs\n *  - shuffle responses\n *  - columns\n *\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/mcqprefix.png\" alt=\"\" width=\"660\"></p>\n * @module Extensions/Assessment/mcqLabelPrefix\n */\n\nvar state = {\n  chosenMask: 'upperAlpha',\n  prefixMask: {\n    lowerAlpha: 97,\n    upperAlpha: 65,\n    numeric: 49\n  },\n  explicitPrefixes: [],\n  renderedCss: false,\n  suffix: '.'\n};\n\n/**\n * Sets up an item load listener to add a prefix to all\n * MCQ possible response labels.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.mcqLabelPrefix.run();\n * @param {string} mask Which mask pattern to use. Supports `upperAlpha` (default), `lowerAlpha`, and `numeric`.\n * @param {string} suffix Any suffix you want added to the label prefix. Defaults to `.`.\n * @param {array} prefixes Array of custom string prefixes to use.\n * @since 0.6.0\n */\nfunction run() {\n  var mask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'upperAlpha';\n  var suffix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';\n  var prefixes = arguments.length > 2 ? arguments[2] : undefined;\n  if (state.prefixMask.hasOwnProperty(mask)) {\n    state.chosenMask = mask;\n  }\n  if (suffix && typeof suffix === 'string') {\n    state.suffix = suffix;\n  }\n  if (prefixes && Array.isArray(prefixes)) {\n    state.explicitPrefixes = prefixes;\n  }\n  state.renderedCss || injectCSS();\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n    addPrefix(_core_questions__WEBPACK_IMPORTED_MODULE_2__.questions());\n  });\n}\n\n/**\n *\n * @param {array} q Array of questions, if any, on the current item\n * @since 0.6.0\n * @ignore\n */\nfunction addPrefix(itemQuestions) {\n  var asciiStart = state.prefixMask[state.chosenMask];\n  var suffix = state.suffix;\n  try {\n    var _iterator = _createForOfIteratorHelper(itemQuestions),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _q$ui_style, _q$ui_style2;\n        var q = _step.value;\n        if (q.type === 'mcq' && (q === null || q === void 0 || (_q$ui_style = q.ui_style) === null || _q$ui_style === void 0 ? void 0 : _q$ui_style.type) !== 'block' && (q === null || q === void 0 || (_q$ui_style2 = q.ui_style) === null || _q$ui_style2 === void 0 ? void 0 : _q$ui_style2.type) !== 'horizontal-input-bottom') {\n          var r = q.response_id;\n          var elOptions = document.getElementById(r).querySelectorAll('.lrn-mcq-option');\n          var responseIndex = 0;\n          var _iterator2 = _createForOfIteratorHelper(elOptions),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var o = _step2.value;\n              var elLabels = o.querySelector('.lrn-possible-answer').children;\n              var elExistingPrefixes = o.querySelector('.lrn-prefix-label');\n              // If we haven't already printed prefixes\n              if (!elExistingPrefixes) {\n                var prefixValue = void 0;\n                // Check whether we're using a prefix mask or an explicit set of prefixes\n                if (Array.isArray(state.explicitPrefixes) && state.explicitPrefixes.length && typeof state.explicitPrefixes[responseIndex] === 'string') {\n                  prefixValue = state.explicitPrefixes[responseIndex];\n                } else {\n                  prefixValue = String.fromCharCode(asciiStart + responseIndex);\n                }\n                for (var i = 0; i < elLabels.length; i++) {\n                  var p = document.createElement('span');\n                  p.classList.add('lrn-prefix-label');\n                  p.append(\"\".concat(prefixValue).concat(suffix));\n                  elLabels[i].prepend(p);\n                }\n                responseIndex++;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } catch (err) {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(err);\n  }\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 0.6.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity MCQ label prefix styles */\\n.lrn-prefix-label {\\n    padding-right: 15px;\\n    font-weight: 500;\\n}\\n@media (max-width: 750px) {\\n    .lrn-prefix-label {\\n        padding-right: 10px;\\n    }\\n}\\n@media (max-width: 650px) {\\n    .lrn-prefix-label {\\n        padding-right: 5px;\\n    }\\n}\\n\";\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/mcqLabelPrefix.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/pageOverlay.js":
/*!*******************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/pageOverlay.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   halt: () => (/* binding */ halt),\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Adds a semi-transparent overlay on top of the entire page.\n * This is for users who have sensitivity to bright light,\n * high contrast, or blue light.\n *\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/pageoverlay.png\" alt=\"\" width=\"860\"></p>\n * @module Extensions/Assessment/pageOverlay\n */\n\nvar state = {\n  color: 'rgba(250, 170, 140, 0.5)',\n  renderedCss: false,\n  zindex: 99999\n};\n\n/**\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.pageOverlay.run();\n * @param {string=} customColor A custom color value to use for the overlay. Recommend rgba. Defaults to rgba(250, 170, 140, 0.5)\n * @param {number=} customZIndex A custom z-index value to use for the overlay. Defaults to 99999.\n * @since 0.9.0\n */\nfunction run(customColor, customZIndex) {\n  if (customColor && typeof customColor === 'string') {\n    state.color = customColor;\n  }\n  if (customZIndex && typeof customZIndex === 'number') {\n    state.zindex = customZIndex;\n  }\n  var elOverlayExists = document.querySelector('.lrn__overlay');\n  if (!elOverlayExists) {\n    var elOverlay = document.createElement('div');\n    elOverlay.classList.add('lrn__overlay');\n    document.querySelector('body').append(elOverlay);\n  }\n  state.renderedCss || injectCSS();\n}\n\n/**\n * Turns off the page overlay.\n * @since 0.9.0\n */\nfunction halt() {\n  var elOverlay = document.querySelector('.lrn__overlay');\n  if (elOverlay) {\n    elOverlay.remove();\n  }\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 0.9.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity page overlay styles */\\n.lrn__overlay {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: \".concat(state.color, \";\\n    z-index: \").concat(state.zindex, \";\\n    pointer-events: none;\\n}\\n\");\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9leHRlbnNpb25zL2FjY2Vzc2liaWxpdHkvdXgvcGFnZU92ZXJsYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUc7RUFDVkMsS0FBSyxFQUFFLDBCQUEwQjtFQUNqQ0MsV0FBVyxFQUFFLEtBQUs7RUFDbEJDLE1BQU0sRUFBRTtBQUNaLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxHQUFHQSxDQUFDQyxXQUFXLEVBQUVDLFlBQVksRUFBRTtFQUMzQyxJQUFJRCxXQUFXLElBQUksT0FBT0EsV0FBVyxLQUFLLFFBQVEsRUFBRTtJQUNoREwsS0FBSyxDQUFDQyxLQUFLLEdBQUdJLFdBQVc7RUFDN0I7RUFDQSxJQUFJQyxZQUFZLElBQUksT0FBT0EsWUFBWSxLQUFLLFFBQVEsRUFBRTtJQUNsRE4sS0FBSyxDQUFDRyxNQUFNLEdBQUdHLFlBQVk7RUFDL0I7RUFFQSxJQUFNQyxlQUFlLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGVBQWUsQ0FBQztFQUUvRCxJQUFJLENBQUNGLGVBQWUsRUFBRTtJQUNsQixJQUFNRyxTQUFTLEdBQUdGLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLEtBQUssQ0FBQztJQUUvQ0QsU0FBUyxDQUFDRSxTQUFTLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7SUFDdkNMLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDSyxNQUFNLENBQUNKLFNBQVMsQ0FBQztFQUNwRDtFQUVBVixLQUFLLENBQUNFLFdBQVcsSUFBSWEsU0FBUyxDQUFDLENBQUM7QUFDcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxJQUFJQSxDQUFBLEVBQUc7RUFDbkIsSUFBTU4sU0FBUyxHQUFHRixRQUFRLENBQUNDLGFBQWEsQ0FBQyxlQUFlLENBQUM7RUFDekQsSUFBSUMsU0FBUyxFQUFFO0lBQ1hBLFNBQVMsQ0FBQ08sTUFBTSxDQUFDLENBQUM7RUFDdEI7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0YsU0FBU0EsQ0FBQSxFQUFHO0VBQ2pCLElBQU1HLE9BQU8sR0FBR1YsUUFBUSxDQUFDRyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQy9DLElBQU1RLEdBQUcsMktBQUFDLE1BQUEsQ0FRV3BCLEtBQUssQ0FBQ0MsS0FBSyxzQkFBQW1CLE1BQUEsQ0FDcEJwQixLQUFLLENBQUNHLE1BQU0sc0NBRzFCO0VBRUdlLE9BQU8sQ0FBQ0csV0FBVyxHQUFHRixHQUFHO0VBQ3pCWCxRQUFRLENBQUNjLElBQUksQ0FBQ1IsTUFBTSxDQUFDSSxPQUFPLENBQUM7RUFFN0JsQixLQUFLLENBQUNFLFdBQVcsR0FBRyxJQUFJO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL3NyYy9hc3Nlc3NtZW50L2V4dGVuc2lvbnMvYWNjZXNzaWJpbGl0eS91eC9wYWdlT3ZlcmxheS5qcz8xZGQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZW5zaW9ucyBhZGQgc3BlY2lmaWMgZnVuY3Rpb25hbGl0eSB0byBJdGVtcyBBUEkuXG4gKiBUaGV5IHJlbHkgb24gbW9kdWxlcyB3aXRoaW4gTFQgYmVpbmcgYXZhaWxhYmxlLlxuICpcbiAqIC0tXG4gKlxuICogQWRkcyBhIHNlbWktdHJhbnNwYXJlbnQgb3ZlcmxheSBvbiB0b3Agb2YgdGhlIGVudGlyZSBwYWdlLlxuICogVGhpcyBpcyBmb3IgdXNlcnMgd2hvIGhhdmUgc2Vuc2l0aXZpdHkgdG8gYnJpZ2h0IGxpZ2h0LFxuICogaGlnaCBjb250cmFzdCwgb3IgYmx1ZSBsaWdodC5cbiAqXG4gKiA8cD48aW1nIHNyYz1cImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9taWNoYWVsc2hhcm1hbi9MVC9tYWluL3NyYy9hc3NldHMvaW1hZ2VzL3BhZ2VvdmVybGF5LnBuZ1wiIGFsdD1cIlwiIHdpZHRoPVwiODYwXCI+PC9wPlxuICogQG1vZHVsZSBFeHRlbnNpb25zL0Fzc2Vzc21lbnQvcGFnZU92ZXJsYXlcbiAqL1xuXG5jb25zdCBzdGF0ZSA9IHtcbiAgICBjb2xvcjogJ3JnYmEoMjUwLCAxNzAsIDE0MCwgMC41KScsXG4gICAgcmVuZGVyZWRDc3M6IGZhbHNlLFxuICAgIHppbmRleDogOTk5OTksXG59O1xuXG4vKipcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBMVCB9IGZyb20gJ0BjYXNwaW5ndXMvbHQvc3JjL2Fzc2Vzc21lbnQvaW5kZXgnO1xuICpcbiAqIExULmluaXQoaXRlbXNBcHApOyAvLyBTZXQgdXAgTFQgd2l0aCB0aGUgSXRlbXMgQVBJIGFwcGxpY2F0aW9uIGluc3RhbmNlIHZhcmlhYmxlXG4gKiBMVC5leHRlbnNpb25zLnBhZ2VPdmVybGF5LnJ1bigpO1xuICogQHBhcmFtIHtzdHJpbmc9fSBjdXN0b21Db2xvciBBIGN1c3RvbSBjb2xvciB2YWx1ZSB0byB1c2UgZm9yIHRoZSBvdmVybGF5LiBSZWNvbW1lbmQgcmdiYS4gRGVmYXVsdHMgdG8gcmdiYSgyNTAsIDE3MCwgMTQwLCAwLjUpXG4gKiBAcGFyYW0ge251bWJlcj19IGN1c3RvbVpJbmRleCBBIGN1c3RvbSB6LWluZGV4IHZhbHVlIHRvIHVzZSBmb3IgdGhlIG92ZXJsYXkuIERlZmF1bHRzIHRvIDk5OTk5LlxuICogQHNpbmNlIDAuOS4wXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBydW4oY3VzdG9tQ29sb3IsIGN1c3RvbVpJbmRleCkge1xuICAgIGlmIChjdXN0b21Db2xvciAmJiB0eXBlb2YgY3VzdG9tQ29sb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHN0YXRlLmNvbG9yID0gY3VzdG9tQ29sb3I7XG4gICAgfVxuICAgIGlmIChjdXN0b21aSW5kZXggJiYgdHlwZW9mIGN1c3RvbVpJbmRleCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgc3RhdGUuemluZGV4ID0gY3VzdG9tWkluZGV4O1xuICAgIH1cblxuICAgIGNvbnN0IGVsT3ZlcmxheUV4aXN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5scm5fX292ZXJsYXknKTtcblxuICAgIGlmICghZWxPdmVybGF5RXhpc3RzKSB7XG4gICAgICAgIGNvbnN0IGVsT3ZlcmxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgICAgIGVsT3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdscm5fX292ZXJsYXknKTtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmFwcGVuZChlbE92ZXJsYXkpO1xuICAgIH1cblxuICAgIHN0YXRlLnJlbmRlcmVkQ3NzIHx8IGluamVjdENTUygpO1xufVxuXG4vKipcbiAqIFR1cm5zIG9mZiB0aGUgcGFnZSBvdmVybGF5LlxuICogQHNpbmNlIDAuOS4wXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYWx0KCkge1xuICAgIGNvbnN0IGVsT3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5scm5fX292ZXJsYXknKTtcbiAgICBpZiAoZWxPdmVybGF5KSB7XG4gICAgICAgIGVsT3ZlcmxheS5yZW1vdmUoKTtcbiAgICB9XG59XG5cbi8qKlxuICogSW5qZWN0cyB0aGUgbmVjZXNzYXJ5IENTUyB0byB0aGUgaGVhZGVyXG4gKiBAc2luY2UgMC45LjBcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gaW5qZWN0Q1NTKCkge1xuICAgIGNvbnN0IGVsU3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIGNvbnN0IGNzcyA9IGBcbi8qIExlYXJub3NpdHkgcGFnZSBvdmVybGF5IHN0eWxlcyAqL1xuLmxybl9fb3ZlcmxheSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3N0YXRlLmNvbG9yfTtcbiAgICB6LWluZGV4OiAke3N0YXRlLnppbmRleH07XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5gO1xuXG4gICAgZWxTdHlsZS50ZXh0Q29udGVudCA9IGNzcztcbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZChlbFN0eWxlKTtcblxuICAgIHN0YXRlLnJlbmRlcmVkQ3NzID0gdHJ1ZTtcbn1cbiJdLCJuYW1lcyI6WyJzdGF0ZSIsImNvbG9yIiwicmVuZGVyZWRDc3MiLCJ6aW5kZXgiLCJydW4iLCJjdXN0b21Db2xvciIsImN1c3RvbVpJbmRleCIsImVsT3ZlcmxheUV4aXN0cyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImVsT3ZlcmxheSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJhcHBlbmQiLCJpbmplY3RDU1MiLCJoYWx0IiwicmVtb3ZlIiwiZWxTdHlsZSIsImNzcyIsImNvbmNhdCIsInRleHRDb250ZW50IiwiaGVhZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/pageOverlay.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/resetResponse.js":
/*!*********************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/resetResponse.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/logger */ \"./src/utils/logger.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/questions */ \"./src/assessment/core/questions.js\");\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Resets a question by clearing (resetting) the UI\n * and setting the `attempted` status to false.\n *\n * Supports all question types, however we set to multiple choice (`mcq`) by default.\n * If you want all types, pass `['*']` as the second argument.\n * If you want a subset, pass an array of type alias' as the second argument.\n * See the `type` property for each type here https://reference.learnosity.com/questions-api/questiontypes\n *\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/resetresponse.gif\" alt=\"\" width=\"600\"></p>\n * @module Extensions/Assessment/resetResponse\n */\n\nvar state = {\n  \"class\": 'lrn__resetResponse',\n  label: 'Reset question',\n  renderedCss: false,\n  types: ['mcq']\n};\n\n/**\n * Sets up an item load listener and injects a reset response button\n * to the UI at the bottom of each configured question on the item.\n *\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.resetResponse.run();\n * @param {string} label A custom label to use for the reset button.\n * @param {array} type Which question types to support. `['*']` for all types.\n * @since 0.8.0\n */\nfunction run(customLabel, customTypes) {\n  if (customLabel && typeof customLabel === 'string') {\n    state.label = customLabel;\n  }\n  if (customTypes && Array.isArray(customTypes)) {\n    state.types = customTypes;\n  }\n  state.renderedCss || injectCSS();\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n    setupResetUI();\n  });\n}\n\n/**\n * Injects a custom button to supported types.\n * Adds an event listener on click.\n * @since 0.8.0\n * @ignore\n */\nfunction setupResetUI() {\n  var itemQuestions = _core_questions__WEBPACK_IMPORTED_MODULE_2__.questions();\n\n  // Add a reset UI to each supported question type on the item\n  try {\n    var _iterator = _createForOfIteratorHelper(itemQuestions),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var q = _step.value;\n        if (state.types.includes('*') || state.types.includes(q.type)) {\n          var r = q.response_id;\n          var elQuestion = document.getElementById(r);\n          var elResponse = elQuestion.querySelector('.lrn_response');\n          var elResetUI = elQuestion.querySelector(\".\".concat(state[\"class\"]));\n          if (!elResetUI) {\n            elResponse.append(getResetUI());\n            elResetUI = elQuestion.querySelector(\".\".concat(state[\"class\"]));\n            elResetUI.addEventListener('click', resetResponse);\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } catch (err) {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(err);\n  }\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 0.8.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity reset question styles */\\n.lrn .lrn_btn.\".concat(state[\"class\"], \" {\\n    margin-top: 1em;\\n    margin-bottom: 0.5em;\\n    clear: both;\\n    display: block;\\n}\\n\");\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}\n\n/**\n * Generates the HTML for the UI to reset a question.\n * @since 0.8.0\n * @ignore\n * @returns {object} HTML of reset UI element\n */\nfunction getResetUI() {\n  var elWrapper = document.createElement('button');\n  var elLabel = document.createElement('span');\n  elWrapper.classList.add('lds-btn', 'lds-btn-secondary', 'lrn_btn', state[\"class\"]);\n  elLabel.append(state.label);\n  elWrapper.append(elLabel);\n  return elWrapper;\n}\n\n/**\n * Calls resetResponse() on the question instance\n * @param {object} e Question instance where the button was clicked\n * @since 0.8.0\n * @ignore\n */\nfunction resetResponse(e) {\n  var elQuestion = e.srcElement.closest('.lrn_widget');\n  var responseId = elQuestion.getAttribute('id');\n  var questionInstance = _core_app__WEBPACK_IMPORTED_MODULE_0__.questionsApp().question(responseId);\n  questionInstance.resetResponse();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9leHRlbnNpb25zL2FjY2Vzc2liaWxpdHkvdXgvcmVzZXRSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlDO0FBQ0s7QUFDTTs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNRyxLQUFLLEdBQUc7RUFDVixTQUFPLG9CQUFvQjtFQUMzQkMsS0FBSyxFQUFFLGdCQUFnQjtFQUN2QkMsV0FBVyxFQUFFLEtBQUs7RUFDbEJDLEtBQUssRUFBRSxDQUFDLEtBQUs7QUFDakIsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNDLEdBQUdBLENBQUNDLFdBQVcsRUFBRUMsV0FBVyxFQUFFO0VBQzFDLElBQUlELFdBQVcsSUFBSSxPQUFPQSxXQUFXLEtBQUssUUFBUSxFQUFFO0lBQ2hETCxLQUFLLENBQUNDLEtBQUssR0FBR0ksV0FBVztFQUM3QjtFQUNBLElBQUlDLFdBQVcsSUFBSUMsS0FBSyxDQUFDQyxPQUFPLENBQUNGLFdBQVcsQ0FBQyxFQUFFO0lBQzNDTixLQUFLLENBQUNHLEtBQUssR0FBR0csV0FBVztFQUM3QjtFQUVBTixLQUFLLENBQUNFLFdBQVcsSUFBSU8sU0FBUyxDQUFDLENBQUM7RUFFaENaLGtEQUFlLENBQUMsQ0FBQyxDQUFDYyxFQUFFLENBQUMsV0FBVyxFQUFFLFlBQU07SUFDcENDLFlBQVksQ0FBQyxDQUFDO0VBQ2xCLENBQUMsQ0FBQztBQUNOOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNBLFlBQVlBLENBQUEsRUFBRztFQUNwQixJQUFNQyxhQUFhLEdBQUdkLHNEQUFrQixDQUFDLENBQUM7O0VBRTFDO0VBQ0EsSUFBSTtJQUFBLElBQUFnQixTQUFBLEdBQUFDLDBCQUFBLENBQ2dCSCxhQUFhO01BQUFJLEtBQUE7SUFBQTtNQUE3QixLQUFBRixTQUFBLENBQUFHLENBQUEsTUFBQUQsS0FBQSxHQUFBRixTQUFBLENBQUFJLENBQUEsSUFBQUMsSUFBQSxHQUErQjtRQUFBLElBQXBCQyxDQUFDLEdBQUFKLEtBQUEsQ0FBQUssS0FBQTtRQUNSLElBQUl0QixLQUFLLENBQUNHLEtBQUssQ0FBQ29CLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSXZCLEtBQUssQ0FBQ0csS0FBSyxDQUFDb0IsUUFBUSxDQUFDRixDQUFDLENBQUNHLElBQUksQ0FBQyxFQUFFO1VBQzNELElBQU1DLENBQUMsR0FBR0osQ0FBQyxDQUFDSyxXQUFXO1VBQ3ZCLElBQU1DLFVBQVUsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUNKLENBQUMsQ0FBQztVQUM3QyxJQUFNSyxVQUFVLEdBQUdILFVBQVUsQ0FBQ0ksYUFBYSxDQUFDLGVBQWUsQ0FBQztVQUM1RCxJQUFJQyxTQUFTLEdBQUdMLFVBQVUsQ0FBQ0ksYUFBYSxLQUFBRSxNQUFBLENBQUtqQyxLQUFLLFNBQU0sQ0FBRSxDQUFDO1VBQzNELElBQUksQ0FBQ2dDLFNBQVMsRUFBRTtZQUNaRixVQUFVLENBQUNJLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUMvQkgsU0FBUyxHQUFHTCxVQUFVLENBQUNJLGFBQWEsS0FBQUUsTUFBQSxDQUFLakMsS0FBSyxTQUFNLENBQUUsQ0FBQztZQUN2RGdDLFNBQVMsQ0FBQ0ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFQyxhQUFhLENBQUM7VUFDdEQ7UUFDSjtNQUNKO0lBQUMsU0FBQUMsR0FBQTtNQUFBdkIsU0FBQSxDQUFBd0IsQ0FBQSxDQUFBRCxHQUFBO0lBQUE7TUFBQXZCLFNBQUEsQ0FBQXlCLENBQUE7SUFBQTtFQUNMLENBQUMsQ0FBQyxPQUFPRixHQUFHLEVBQUU7SUFDVnhDLHFEQUFNLENBQUMyQyxLQUFLLENBQUNILEdBQUcsQ0FBQztFQUNyQjtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTN0IsU0FBU0EsQ0FBQSxFQUFHO0VBQ2pCLElBQU1pQyxPQUFPLEdBQUdkLFFBQVEsQ0FBQ2UsYUFBYSxDQUFDLE9BQU8sQ0FBQztFQUMvQyxJQUFNQyxHQUFHLDhEQUFBWCxNQUFBLENBRUdqQyxLQUFLLFNBQU0sb0dBTTFCO0VBRUcwQyxPQUFPLENBQUNHLFdBQVcsR0FBR0QsR0FBRztFQUN6QmhCLFFBQVEsQ0FBQ2tCLElBQUksQ0FBQ1osTUFBTSxDQUFDUSxPQUFPLENBQUM7RUFFN0IxQyxLQUFLLENBQUNFLFdBQVcsR0FBRyxJQUFJO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNpQyxVQUFVQSxDQUFBLEVBQUc7RUFDbEIsSUFBTVksU0FBUyxHQUFHbkIsUUFBUSxDQUFDZSxhQUFhLENBQUMsUUFBUSxDQUFDO0VBQ2xELElBQU1LLE9BQU8sR0FBR3BCLFFBQVEsQ0FBQ2UsYUFBYSxDQUFDLE1BQU0sQ0FBQztFQUU5Q0ksU0FBUyxDQUFDRSxTQUFTLENBQUNDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFbEQsS0FBSyxTQUFNLENBQUM7RUFDL0VnRCxPQUFPLENBQUNkLE1BQU0sQ0FBQ2xDLEtBQUssQ0FBQ0MsS0FBSyxDQUFDO0VBQzNCOEMsU0FBUyxDQUFDYixNQUFNLENBQUNjLE9BQU8sQ0FBQztFQUV6QixPQUFPRCxTQUFTO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNWLGFBQWFBLENBQUNFLENBQUMsRUFBRTtFQUN0QixJQUFNWixVQUFVLEdBQUdZLENBQUMsQ0FBQ1ksVUFBVSxDQUFDQyxPQUFPLENBQUMsYUFBYSxDQUFDO0VBQ3RELElBQU1DLFVBQVUsR0FBRzFCLFVBQVUsQ0FBQzJCLFlBQVksQ0FBQyxJQUFJLENBQUM7RUFDaEQsSUFBTUMsZ0JBQWdCLEdBQUcxRCxtREFBZ0IsQ0FBQyxDQUFDLENBQUNFLFFBQVEsQ0FBQ3NELFVBQVUsQ0FBQztFQUNoRUUsZ0JBQWdCLENBQUNsQixhQUFhLENBQUMsQ0FBQztBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9zcmMvYXNzZXNzbWVudC9leHRlbnNpb25zL2FjY2Vzc2liaWxpdHkvdXgvcmVzZXRSZXNwb25zZS5qcz9kNWFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuLi8uLi8uLi9jb3JlL2FwcCc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL2xvZ2dlcic7XG5pbXBvcnQgKiBhcyBxdWVzdGlvbiBmcm9tICcuLi8uLi8uLi9jb3JlL3F1ZXN0aW9ucyc7XG5cbi8qKlxuICogRXh0ZW5zaW9ucyBhZGQgc3BlY2lmaWMgZnVuY3Rpb25hbGl0eSB0byBJdGVtcyBBUEkuXG4gKiBUaGV5IHJlbHkgb24gbW9kdWxlcyB3aXRoaW4gTFQgYmVpbmcgYXZhaWxhYmxlLlxuICpcbiAqIC0tXG4gKlxuICogUmVzZXRzIGEgcXVlc3Rpb24gYnkgY2xlYXJpbmcgKHJlc2V0dGluZykgdGhlIFVJXG4gKiBhbmQgc2V0dGluZyB0aGUgYGF0dGVtcHRlZGAgc3RhdHVzIHRvIGZhbHNlLlxuICpcbiAqIFN1cHBvcnRzIGFsbCBxdWVzdGlvbiB0eXBlcywgaG93ZXZlciB3ZSBzZXQgdG8gbXVsdGlwbGUgY2hvaWNlIChgbWNxYCkgYnkgZGVmYXVsdC5cbiAqIElmIHlvdSB3YW50IGFsbCB0eXBlcywgcGFzcyBgWycqJ11gIGFzIHRoZSBzZWNvbmQgYXJndW1lbnQuXG4gKiBJZiB5b3Ugd2FudCBhIHN1YnNldCwgcGFzcyBhbiBhcnJheSBvZiB0eXBlIGFsaWFzJyBhcyB0aGUgc2Vjb25kIGFyZ3VtZW50LlxuICogU2VlIHRoZSBgdHlwZWAgcHJvcGVydHkgZm9yIGVhY2ggdHlwZSBoZXJlIGh0dHBzOi8vcmVmZXJlbmNlLmxlYXJub3NpdHkuY29tL3F1ZXN0aW9ucy1hcGkvcXVlc3Rpb250eXBlc1xuICpcbiAqIDxwPjxpbWcgc3JjPVwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21pY2hhZWxzaGFybWFuL0xUL21haW4vc3JjL2Fzc2V0cy9pbWFnZXMvcmVzZXRyZXNwb25zZS5naWZcIiBhbHQ9XCJcIiB3aWR0aD1cIjYwMFwiPjwvcD5cbiAqIEBtb2R1bGUgRXh0ZW5zaW9ucy9Bc3Nlc3NtZW50L3Jlc2V0UmVzcG9uc2VcbiAqL1xuXG5jb25zdCBzdGF0ZSA9IHtcbiAgICBjbGFzczogJ2xybl9fcmVzZXRSZXNwb25zZScsXG4gICAgbGFiZWw6ICdSZXNldCBxdWVzdGlvbicsXG4gICAgcmVuZGVyZWRDc3M6IGZhbHNlLFxuICAgIHR5cGVzOiBbJ21jcSddLFxufTtcblxuLyoqXG4gKiBTZXRzIHVwIGFuIGl0ZW0gbG9hZCBsaXN0ZW5lciBhbmQgaW5qZWN0cyBhIHJlc2V0IHJlc3BvbnNlIGJ1dHRvblxuICogdG8gdGhlIFVJIGF0IHRoZSBib3R0b20gb2YgZWFjaCBjb25maWd1cmVkIHF1ZXN0aW9uIG9uIHRoZSBpdGVtLlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBMVCB9IGZyb20gJ0BjYXNwaW5ndXMvbHQvc3JjL2Fzc2Vzc21lbnQvaW5kZXgnO1xuICpcbiAqIExULmluaXQoaXRlbXNBcHApOyAvLyBTZXQgdXAgTFQgd2l0aCB0aGUgSXRlbXMgQVBJIGFwcGxpY2F0aW9uIGluc3RhbmNlIHZhcmlhYmxlXG4gKiBMVC5leHRlbnNpb25zLnJlc2V0UmVzcG9uc2UucnVuKCk7XG4gKiBAcGFyYW0ge3N0cmluZ30gbGFiZWwgQSBjdXN0b20gbGFiZWwgdG8gdXNlIGZvciB0aGUgcmVzZXQgYnV0dG9uLlxuICogQHBhcmFtIHthcnJheX0gdHlwZSBXaGljaCBxdWVzdGlvbiB0eXBlcyB0byBzdXBwb3J0LiBgWycqJ11gIGZvciBhbGwgdHlwZXMuXG4gKiBAc2luY2UgMC44LjBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1bihjdXN0b21MYWJlbCwgY3VzdG9tVHlwZXMpIHtcbiAgICBpZiAoY3VzdG9tTGFiZWwgJiYgdHlwZW9mIGN1c3RvbUxhYmVsID09PSAnc3RyaW5nJykge1xuICAgICAgICBzdGF0ZS5sYWJlbCA9IGN1c3RvbUxhYmVsO1xuICAgIH1cbiAgICBpZiAoY3VzdG9tVHlwZXMgJiYgQXJyYXkuaXNBcnJheShjdXN0b21UeXBlcykpIHtcbiAgICAgICAgc3RhdGUudHlwZXMgPSBjdXN0b21UeXBlcztcbiAgICB9XG5cbiAgICBzdGF0ZS5yZW5kZXJlZENzcyB8fCBpbmplY3RDU1MoKTtcblxuICAgIGFwcC5hcHBJbnN0YW5jZSgpLm9uKCdpdGVtOmxvYWQnLCAoKSA9PiB7XG4gICAgICAgIHNldHVwUmVzZXRVSSgpO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIEluamVjdHMgYSBjdXN0b20gYnV0dG9uIHRvIHN1cHBvcnRlZCB0eXBlcy5cbiAqIEFkZHMgYW4gZXZlbnQgbGlzdGVuZXIgb24gY2xpY2suXG4gKiBAc2luY2UgMC44LjBcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gc2V0dXBSZXNldFVJKCkge1xuICAgIGNvbnN0IGl0ZW1RdWVzdGlvbnMgPSBxdWVzdGlvbi5xdWVzdGlvbnMoKTtcblxuICAgIC8vIEFkZCBhIHJlc2V0IFVJIHRvIGVhY2ggc3VwcG9ydGVkIHF1ZXN0aW9uIHR5cGUgb24gdGhlIGl0ZW1cbiAgICB0cnkge1xuICAgICAgICBmb3IgKGNvbnN0IHEgb2YgaXRlbVF1ZXN0aW9ucykge1xuICAgICAgICAgICAgaWYgKHN0YXRlLnR5cGVzLmluY2x1ZGVzKCcqJykgfHwgc3RhdGUudHlwZXMuaW5jbHVkZXMocS50eXBlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHIgPSBxLnJlc3BvbnNlX2lkO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVsUXVlc3Rpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChyKTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbFJlc3BvbnNlID0gZWxRdWVzdGlvbi5xdWVyeVNlbGVjdG9yKCcubHJuX3Jlc3BvbnNlJyk7XG4gICAgICAgICAgICAgICAgbGV0IGVsUmVzZXRVSSA9IGVsUXVlc3Rpb24ucXVlcnlTZWxlY3RvcihgLiR7c3RhdGUuY2xhc3N9YCk7XG4gICAgICAgICAgICAgICAgaWYgKCFlbFJlc2V0VUkpIHtcbiAgICAgICAgICAgICAgICAgICAgZWxSZXNwb25zZS5hcHBlbmQoZ2V0UmVzZXRVSSgpKTtcbiAgICAgICAgICAgICAgICAgICAgZWxSZXNldFVJID0gZWxRdWVzdGlvbi5xdWVyeVNlbGVjdG9yKGAuJHtzdGF0ZS5jbGFzc31gKTtcbiAgICAgICAgICAgICAgICAgICAgZWxSZXNldFVJLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmVzZXRSZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihlcnIpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBJbmplY3RzIHRoZSBuZWNlc3NhcnkgQ1NTIHRvIHRoZSBoZWFkZXJcbiAqIEBzaW5jZSAwLjguMFxuICogQGlnbm9yZVxuICovXG5mdW5jdGlvbiBpbmplY3RDU1MoKSB7XG4gICAgY29uc3QgZWxTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgY29uc3QgY3NzID0gYFxuLyogTGVhcm5vc2l0eSByZXNldCBxdWVzdGlvbiBzdHlsZXMgKi9cbi5scm4gLmxybl9idG4uJHtzdGF0ZS5jbGFzc30ge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICBjbGVhcjogYm90aDtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cbmA7XG5cbiAgICBlbFN0eWxlLnRleHRDb250ZW50ID0gY3NzO1xuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kKGVsU3R5bGUpO1xuXG4gICAgc3RhdGUucmVuZGVyZWRDc3MgPSB0cnVlO1xufVxuXG4vKipcbiAqIEdlbmVyYXRlcyB0aGUgSFRNTCBmb3IgdGhlIFVJIHRvIHJlc2V0IGEgcXVlc3Rpb24uXG4gKiBAc2luY2UgMC44LjBcbiAqIEBpZ25vcmVcbiAqIEByZXR1cm5zIHtvYmplY3R9IEhUTUwgb2YgcmVzZXQgVUkgZWxlbWVudFxuICovXG5mdW5jdGlvbiBnZXRSZXNldFVJKCkge1xuICAgIGNvbnN0IGVsV3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IGVsTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG5cbiAgICBlbFdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnbGRzLWJ0bicsICdsZHMtYnRuLXNlY29uZGFyeScsICdscm5fYnRuJywgc3RhdGUuY2xhc3MpO1xuICAgIGVsTGFiZWwuYXBwZW5kKHN0YXRlLmxhYmVsKTtcbiAgICBlbFdyYXBwZXIuYXBwZW5kKGVsTGFiZWwpO1xuXG4gICAgcmV0dXJuIGVsV3JhcHBlcjtcbn1cblxuLyoqXG4gKiBDYWxscyByZXNldFJlc3BvbnNlKCkgb24gdGhlIHF1ZXN0aW9uIGluc3RhbmNlXG4gKiBAcGFyYW0ge29iamVjdH0gZSBRdWVzdGlvbiBpbnN0YW5jZSB3aGVyZSB0aGUgYnV0dG9uIHdhcyBjbGlja2VkXG4gKiBAc2luY2UgMC44LjBcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gcmVzZXRSZXNwb25zZShlKSB7XG4gICAgY29uc3QgZWxRdWVzdGlvbiA9IGUuc3JjRWxlbWVudC5jbG9zZXN0KCcubHJuX3dpZGdldCcpO1xuICAgIGNvbnN0IHJlc3BvbnNlSWQgPSBlbFF1ZXN0aW9uLmdldEF0dHJpYnV0ZSgnaWQnKTtcbiAgICBjb25zdCBxdWVzdGlvbkluc3RhbmNlID0gYXBwLnF1ZXN0aW9uc0FwcCgpLnF1ZXN0aW9uKHJlc3BvbnNlSWQpO1xuICAgIHF1ZXN0aW9uSW5zdGFuY2UucmVzZXRSZXNwb25zZSgpO1xufVxuIl0sIm5hbWVzIjpbImFwcCIsImxvZ2dlciIsInF1ZXN0aW9uIiwic3RhdGUiLCJsYWJlbCIsInJlbmRlcmVkQ3NzIiwidHlwZXMiLCJydW4iLCJjdXN0b21MYWJlbCIsImN1c3RvbVR5cGVzIiwiQXJyYXkiLCJpc0FycmF5IiwiaW5qZWN0Q1NTIiwiYXBwSW5zdGFuY2UiLCJvbiIsInNldHVwUmVzZXRVSSIsIml0ZW1RdWVzdGlvbnMiLCJxdWVzdGlvbnMiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsIl9zdGVwIiwicyIsIm4iLCJkb25lIiwicSIsInZhbHVlIiwiaW5jbHVkZXMiLCJ0eXBlIiwiciIsInJlc3BvbnNlX2lkIiwiZWxRdWVzdGlvbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJlbFJlc3BvbnNlIiwicXVlcnlTZWxlY3RvciIsImVsUmVzZXRVSSIsImNvbmNhdCIsImFwcGVuZCIsImdldFJlc2V0VUkiLCJhZGRFdmVudExpc3RlbmVyIiwicmVzZXRSZXNwb25zZSIsImVyciIsImUiLCJmIiwiZXJyb3IiLCJlbFN0eWxlIiwiY3JlYXRlRWxlbWVudCIsImNzcyIsInRleHRDb250ZW50IiwiaGVhZCIsImVsV3JhcHBlciIsImVsTGFiZWwiLCJjbGFzc0xpc3QiLCJhZGQiLCJzcmNFbGVtZW50IiwiY2xvc2VzdCIsInJlc3BvbnNlSWQiLCJnZXRBdHRyaWJ1dGUiLCJxdWVzdGlvbkluc3RhbmNlIiwicXVlc3Rpb25zQXBwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/resetResponse.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/toggleTimer.js":
/*!*******************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/toggleTimer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run),\n/* harmony export */   toggle: () => (/* binding */ toggle)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_activity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/activity */ \"./src/assessment/core/activity.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/logger */ \"./src/utils/logger.js\");\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Allows the end-user to toggle visibility of the timer,\n * leaving the clock icon only. This can reduce test anxiety.\n *\n * Note: this does not work on the smallest (mobile) breakpoint\n * because that is a separate layout that doesn't include the\n * clock icon. It's a future TODO to rectify this extension\n * in the narrowest layout.\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/toggletimer.gif\" alt=\"Animated gif showing the toggle timer feature\" width=\"900\"></p>\n * @module Extensions/Assessment/toggleTimer\n */\n\nvar state = {\n  _initialised: false,\n  elTimerWrapper: null,\n  forceRenderTimer: false,\n  renderedCss: false\n};\n\n/**\n * Wraps clock and timer elements inside a button. Adds a\n * click event to toggle the timer.\n *\n * By passing `showTimerLimit`, you can force render the timer\n * in the final moments. Will force render one time only, if\n * the user hides the timer again we don't force render.\n *\n * @param {number} showTimerLimit The clock value to force render the timer element.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.toggleTimer.run();\n * @since 2.6.0\n */\nfunction run() {\n  var showTimerLimit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60;\n  if (!state._initialised) {\n    var elLrnResponsiveWrapper = document.querySelector('.lrn-sm');\n    state.elTimerWrapper = document.querySelector('.lrn-timer-wrapper');\n    if (elLrnResponsiveWrapper && state.elTimerWrapper) {\n      state.renderedCss || injectCSS();\n      state._initialised = true;\n      var childElements = Array.from(state.elTimerWrapper.children);\n      var elTimerButton = document.createElement('button');\n      elTimerButton.classList.add('lrn_btn', 'lt__timer-button');\n      elTimerButton.setAttribute('type', 'button');\n      elTimerButton.setAttribute('aria-label', \"\".concat(state.elTimerWrapper.getAttribute('aria-label'), \", click to toggle visibility of the timer.\"));\n      state.elTimerWrapper.innerHTML = '';\n      state.elTimerWrapper.appendChild(elTimerButton);\n      childElements.forEach(function (child) {\n        elTimerButton.appendChild(child);\n      });\n      elTimerButton.addEventListener('click', function () {\n        toggle();\n      });\n      _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('time:change', function () {\n        var timeRemaining = _core_activity__WEBPACK_IMPORTED_MODULE_1__.timeRemaining();\n        if (!state.forceRenderTimer && typeof timeRemaining === 'number' && timeRemaining <= Number(showTimerLimit) && state.elTimerWrapper.classList.contains('lt__timer-hide')) {\n          state.forceRenderTimer = true;\n          state.elTimerWrapper.classList.remove('lt__timer-hide');\n          _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].info(\"Force show the timer limit (\".concat(showTimerLimit, \") reached.\"));\n        }\n      });\n    } else {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn('Timer wrapper, or `lrn-sm`, not found');\n    }\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Toggle timer already initialised, ignoring run();');\n  }\n}\n\n/**\n * Toggles the timer visibility. Assumes run() has been called.\n * @since 2.6.0\n */\nfunction toggle() {\n  state.elTimerWrapper.classList.toggle('lt__timer-hide');\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 2.6.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity toggle timer styles */\\n.lrn.lrn-assess .lrn-region:not(.lrn-items-region) .lrn_btn.lt__timer-button {\\n    font-size: inherit;\\n}\\n\\n.lrn-assess .lrn_btn.lt__timer-button .timer {\\n    padding: 8px;\\n    height: 29px;\\n    position: relative;\\n    top: -4px;\\n}\\n\\n.lrn.lrn-assess .lt__timer-wrapper.lt__timer-hide .lrn_btn.lt__timer-button .timer .clock:before {\\n    padding-right: 0;\\n}\\n\\n.lrn-timer-wrapper.lt__timer-hide .lt__timer-button .timer > *:not(.clock) {\\n    display: none;\\n}\\n\";\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/toggleTimer.js\n");

/***/ }),

/***/ "./src/assessment/extensions/accessibility/ux/whiteNoise/index.js":
/*!************************************************************************!*\
  !*** ./src/assessment/extensions/accessibility/ux/whiteNoise/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   launchPlayer: () => (/* binding */ launchPlayer),\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/player */ \"./src/assessment/core/player.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../utils/logger */ \"./src/utils/logger.js\");\n/* harmony import */ var howler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! howler */ \"./node_modules/howler/dist/howler.js\");\n/* harmony import */ var howler__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(howler__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Renders an audio player that the end-user can use\n * to play white noise sounds. Helps for some users\n * with focus and concentration.\n *\n * By default the player renders inside a custom dialog\n * from Items API. This is the simplest set up, just call\n * `run()` and add something like the following to your\n * Items API config object (the essential piece is the\n * custom button):\n *\n * ```\n * {\n *     \"config\": {\n *         \"regions\": \"main\",\n *         \"region_overrides\": {\n *             \"right\": [\n *                 {\n *                     \"type\": \"save_button\"\n *                 },\n *                 {\n *                     \"type\": \"fullscreen_button\"\n *                 },\n *                 {\n *                     \"type\": \"reviewscreen_button\"\n *                 },\n *                 {\n *                     \"type\": \"accessibility_button\"\n *                 },\n *                 {\n *                     \"type\": \"flagitem_button\"\n *                 },\n *                 {\n *                     \"type\": \"custom_button\",\n *                     \"options\": {\n *                         \"name\": \"btn-whitenoise\",\n *                         \"label\": \"White noise player\",\n *                         \"icon_class\": \"lt__whitenoise-player-icon\"\n *                     }\n *                 },\n *                 {\n *                     \"type\": \"masking_button\"\n *                 }\n *             ]\n *         }\n *     }\n * }\n * ```\n *\n * This will render a button in the vertical toolbar of the player with a headphones\n * icon. Click this and the player will launch (see below).\n *\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/whitenoise.gif\" alt=\"\" width=\"900\"></p>\n *\n * If you want to render the player inside a custom element, pass an `id` to\n * `launchPlayer(id)` after calling `run()`. This will render the player\n * inside an element of your choice. You will be responsible for showing/hiding\n * the player, or just leave it always visible.\n *\n * ```\n * <div id=\"player-wrapper\"></div>\n * <div id=\"learnosity_assess\"></div>\n *\n * <script>\n *   LT.init(app);\n *   LT.extensions.whiteNoise.run();\n *\n *   // Trigger this on a click event or anything defining when\n *   // you want to load the white noise player\n *   LT.extensions.whiteNoise.launchPlayer('player-wrapper');\n * </script>\n * ```\n * @module Extensions/Assessment/whiteNoise\n */\n\nvar state = {\n  elementId: null,\n  player: {\n    instances: {\n      beach: null,\n      birds: null,\n      wind: null,\n      thunder: null,\n      campfire: null,\n      rain: null\n    },\n    sound: null,\n    volume: null\n  },\n  playlist: {\n    beach: 'https://assets.learnosity.com/learnosity_toolkit/whitenoise/beach.mp3',\n    birds: 'https://assets.learnosity.com/learnosity_toolkit/whitenoise/birds.mp3',\n    wind: 'https://assets.learnosity.com/learnosity_toolkit/whitenoise/wind.mp3',\n    thunder: 'https://assets.learnosity.com/learnosity_toolkit/whitenoise/thunder.mp3',\n    campfire: 'https://assets.learnosity.com/learnosity_toolkit/whitenoise/campfire.mp3',\n    rain: 'https://assets.learnosity.com/learnosity_toolkit/whitenoise/rain.mp3'\n  },\n  queryRoot: document,\n  renderedCss: false\n};\n\n/**\n * Sets up the white noise audio player.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.whiteNoise.run();\n * @since 2.7.0\n * @param {string=} id Optional id of an element, or element, to render the player into\n * @param {object=} shadowRoot Optional A shadow root to render the player into\n */\nfunction run(id, shadowRoot) {\n  state.elementId = id || null;\n  state.queryRoot = shadowRoot || document;\n  state.renderedCss || injectCSS();\n\n  // Listener for an Items API custom button\n  try {\n    _core_app__WEBPACK_IMPORTED_MODULE_0__.assessApp().on('button:btn-whitenoise:clicked', function () {\n      launchPlayer();\n    });\n  } catch (e) {\n    // Not very clean. But we don't want to log this error\n    // which happens when you use the toolbar outside of Items API\n    if (!(e instanceof TypeError)) {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('Error with white noise player:', e);\n    }\n  }\n}\n\n/**\n * Launches the white noise audio player. Defaults to rendering inside an\n * Items API custom dialog, in which case you never need to call this\n * method directly.\n *\n\n * @since 2.7.0\n */\nfunction launchPlayer() {\n  var content = playerTemplate();\n  if (state.elementId && !state.shadowRoot) {\n    var customWrapper = state.queryRoot.querySelector(\"#\".concat(state.elementId));\n    if (customWrapper) {\n      customWrapper.innerHTML = content;\n    } else {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"Element id '\".concat(state.elementId, \"' not found, could not render player.\"));\n      return;\n    }\n  } else if (state.elementId && state.queryRoot !== document) {\n    var el = state.queryRoot.querySelector(\"#\".concat(state.elementId));\n    if (el) {\n      el.innerHTML = content;\n    } else {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"Shadow root element id '\".concat(state.elementId, \"' not found, could not render player.\"));\n      return;\n    }\n  } else {\n    _core_player__WEBPACK_IMPORTED_MODULE_1__.dialog({\n      header: 'White noise player',\n      body: content,\n      buttons: [{\n        button_id: 'dialog_btn_whitenoise_player',\n        label: 'Close',\n        is_primary: false\n      }]\n    });\n  }\n  setTimeout(function () {\n    var elSounds = state.queryRoot.querySelectorAll('.lt__controls-sound');\n    var elVolume = state.queryRoot.querySelector('#ld-volume');\n    elSounds.forEach(function (el) {\n      el.addEventListener('keydown', function (event) {\n        if (event.key === ' ' || event.key === 'Enter') {\n          event.preventDefault();\n          el.click();\n        }\n      });\n      el.addEventListener('click', function (event) {\n        event.preventDefault();\n        actionTriggered(el);\n      });\n    });\n    if (state.player.sound) {\n      setSoundsClass(state.player.sound);\n    }\n    elVolume.value = state.player.volume || 1.0;\n    volume();\n    elVolume.addEventListener('input', function () {\n      volume();\n    });\n  }, 500);\n\n  // Setup logic to close the dialog\n  try {\n    _core_app__WEBPACK_IMPORTED_MODULE_0__.assessApp().on('button:dialog_btn_whitenoise_player:clicked', function () {\n      _core_player__WEBPACK_IMPORTED_MODULE_1__.hideDialog();\n    });\n  } catch (e) {\n    if (!(e instanceof TypeError)) {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('Error with white noise player:', e);\n    }\n  }\n}\n\n/**\n * Detects which sound icon was clicked and whether\n * to play or stop the audio.\n * @param {object} el\n * @since 2.7.0\n * @ignore\n */\nfunction actionTriggered(el) {\n  var sound = el.getAttribute('data-lt-sound');\n  var targetSound = state.queryRoot.querySelector(\"[data-lt-sound=\\\"\".concat(sound, \"\\\"]\"));\n  if (state.player.sound) {\n    stop(state.player.sound);\n  }\n  if (targetSound.classList.contains('lt__sound-active')) {\n    stop(sound);\n  } else {\n    if (!state.player.instances[sound]) {\n      initPlayer(sound);\n    }\n    state.player.sound = sound;\n    play(sound);\n  }\n  setSoundsClass(sound);\n}\n\n/**\n * Initialises a Howl instance with the mp3 URI.\n * @param {string} sound\n * @since 2.7.0\n * @ignore\n */\nfunction initPlayer(sound) {\n  state.player.instances[sound] = new howler__WEBPACK_IMPORTED_MODULE_3__.Howl({\n    src: [state.playlist[sound]],\n    html5: true,\n    loop: true\n  });\n}\n\n/**\n * Starts to play a Howl instance.\n * @param {string} sound\n * @since 2.7.0\n * @ignore\n */\nfunction play(sound) {\n  state.player.instances[sound].play();\n}\n\n/**\n * Stops playing a Howl instance.\n * @param {string} sound\n * @since 2.7.0\n * @ignore\n */\nfunction stop(sound) {\n  state.player.instances[sound].stop();\n}\n\n/**\n * Adjusts the player volume.\n * @since 2.7.0\n * @ignore\n */\nfunction volume() {\n  var elVolume = state.queryRoot.querySelector('#ld-volume');\n  var elVolumeValue = state.queryRoot.querySelector('#ld-volume-value');\n  var currentVolume = elVolume.value;\n  state.player.volume = currentVolume;\n  howler__WEBPACK_IMPORTED_MODULE_3__.Howler.volume(currentVolume);\n  elVolumeValue.innerHTML = currentVolume * 100;\n}\n\n/**\n * Sets the active state on the current sound button.\n * @since 2.7.0\n * @ignore\n */\nfunction setSoundsClass(activeSound) {\n  var elSounds = state.queryRoot.querySelectorAll('.lt__controls-sound');\n  elSounds.forEach(function (el) {\n    if (el.getAttribute('data-lt-sound') === activeSound && !el.classList.contains('lt__sound-active')) {\n      el.classList.add('lt__sound-active');\n      el.focus();\n      el.setAttribute('aria-pressed', 'true');\n    } else {\n      el.classList.remove('lt__sound-active');\n      el.setAttribute('aria-pressed', 'false');\n    }\n  });\n}\n\n/**\n * The HTML used to render the player.\n * @since 2.7.0\n * @ignore\n */\nfunction playerTemplate() {\n  return \"<div class=\\\"lt__player\\\">\\n    <div class=\\\"lt__meta\\\">\\n        <p id=\\\"lt__player-instructions\\\" class=\\\"sr-only\\\">Choose a sound from the list below. Click to play or pause, use the slider at the bottom to control the volume level.</p>\\n        <ul aria-labelledby=\\\"lt__player-instructions\\\">\\n            <li><button class=\\\"lt__controls-sound\\\" data-lt-sound=\\\"beach\\\" aria-pressed=\\\"false\\\" aria-label=\\\"Click to play or pause beach sounds\\\"><svg role=\\\"img\\\" aria-label=\\\"Beach\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 576 512\\\"><path d=\\\"M346.3 271.8l-60.1-21.9L214 448H32c-17.7 0-32 14.3-32 32s14.3 32 32 32H544c17.7 0 32-14.3 32-32s-14.3-32-32-32H282.1l64.1-176.2zm121.1-.2l-3.3 9.1 67.7 24.6c18.1 6.6 38-4.2 39.6-23.4c6.5-78.5-23.9-155.5-80.8-208.5c2 8 3.2 16.3 3.4 24.8l.2 6c1.8 57-7.3 113.8-26.8 167.4zM462 99.1c-1.1-34.4-22.5-64.8-54.4-77.4c-.9-.4-1.9-.7-2.8-1.1c-33-11.7-69.8-2.4-93.1 23.8l-4 4.5C272.4 88.3 245 134.2 226.8 184l-3.3 9.1L434 269.7l3.3-9.1c18.1-49.8 26.6-102.5 24.9-155.5l-.2-6zM107.2 112.9c-11.1 15.7-2.8 36.8 15.3 43.4l71 25.8 3.3-9.1c19.5-53.6 49.1-103 87.1-145.5l4-4.5c6.2-6.9 13.1-13 20.5-18.2c-79.6 2.5-154.7 42.2-201.2 108z\\\" /></svg><span class=\\\"lt__sound-label\\\">Beach</span></button></li>\\n            <li><button class=\\\"lt__controls-sound\\\" data-lt-sound=\\\"birds\\\" aria-pressed=\\\"false\\\" aria-label=\\\"Click to play or pause birds sounds\\\"><svg role=\\\"img\\\" aria-label=\\\"Birds\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M160.8 96.5c14 17 31 30.9 49.5 42.2c25.9 15.8 53.7 25.9 77.7 31.6V138.8C265.8 108.5 250 71.5 248.6 28c-.4-11.3-7.5-21.5-18.4-24.4c-7.6-2-15.8-.2-21 5.8c-13.3 15.4-32.7 44.6-48.4 87.2zM320 144v30.6l0 0v1.3l0 0 0 32.1c-60.8-5.1-185-43.8-219.3-157.2C97.4 40 87.9 32 76.6 32c-7.9 0-15.3 3.9-18.8 11C46.8 65.9 32 112.1 32 176c0 116.9 80.1 180.5 118.4 202.8L11.8 416.6C6.7 418 2.6 421.8 .9 426.8s-.8 10.6 2.3 14.8C21.7 466.2 77.3 512 160 512c3.6 0 7.2-1.2 10-3.5L245.6 448H320c88.4 0 160-71.6 160-160V128l29.9-44.9c1.3-2 2.1-4.4 2.1-6.8c0-6.8-5.5-12.3-12.3-12.3H400c-44.2 0-80 35.8-80 80zm80-16a16 16 0 1 1 0 32 16 16 0 1 1 0-32z\\\" /></svg><span class=\\\"lt__sound-label\\\">Birds</span></button></li>\\n            <li><button class=\\\"lt__controls-sound\\\" data-lt-sound=\\\"campfire\\\" aria-pressed=\\\"false\\\" aria-label=\\\"Click to play or pause campfire sounds\\\"><svg role=\\\"img\\\" aria-label=\\\"Campfire\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 448 512\\\"><path d=\\\"M159.3 5.4c7.8-7.3 19.9-7.2 27.7 .1c27.6 25.9 53.5 53.8 77.7 84c11-14.4 23.5-30.1 37-42.9c7.9-7.4 20.1-7.4 28 .1c34.6 33 63.9 76.6 84.5 118c20.3 40.8 33.8 82.5 33.8 111.9C448 404.2 348.2 512 224 512C98.4 512 0 404.1 0 276.5c0-38.4 17.8-85.3 45.4-131.7C73.3 97.7 112.7 48.6 159.3 5.4zM225.7 416c25.3 0 47.7-7 68.8-21c42.1-29.4 53.4-88.2 28.1-134.4c-4.5-9-16-9.6-22.5-2l-25.2 29.3c-6.6 7.6-18.5 7.4-24.7-.5c-16.5-21-46-58.5-62.8-79.8c-6.3-8-18.3-8.1-24.7-.1c-33.8 42.5-50.8 69.3-50.8 99.4C112 375.4 162.6 416 225.7 416z\\\" /></svg><span class=\\\"lt__sound-label\\\">Campfire</span></button></li>\\n            <li><button class=\\\"lt__controls-sound\\\" data-lt-sound=\\\"rain\\\" aria-pressed=\\\"false\\\" aria-label=\\\"Click to play or pause rain sounds\\\"><svg role=\\\"img\\\" aria-label=\\\"Rain\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M96 320c-53 0-96-43-96-96c0-42.5 27.6-78.6 65.9-91.2C64.7 126.1 64 119.1 64 112C64 50.1 114.1 0 176 0c43.1 0 80.5 24.3 99.2 60c14.7-17.1 36.5-28 60.8-28c44.2 0 80 35.8 80 80c0 5.5-.6 10.8-1.6 16c.5 0 1.1 0 1.6 0c53 0 96 43 96 96s-43 96-96 96H96zm-6.8 52c1.3-2.5 3.9-4 6.8-4s5.4 1.5 6.8 4l35.1 64.6c4.1 7.5 6.2 15.8 6.2 24.3v3c0 26.5-21.5 48-48 48s-48-21.5-48-48v-3c0-8.5 2.1-16.9 6.2-24.3L89.2 372zm160 0c1.3-2.5 3.9-4 6.8-4s5.4 1.5 6.8 4l35.1 64.6c4.1 7.5 6.2 15.8 6.2 24.3v3c0 26.5-21.5 48-48 48s-48-21.5-48-48v-3c0-8.5 2.1-16.9 6.2-24.3L249.2 372zm124.9 64.6L409.2 372c1.3-2.5 3.9-4 6.8-4s5.4 1.5 6.8 4l35.1 64.6c4.1 7.5 6.2 15.8 6.2 24.3v3c0 26.5-21.5 48-48 48s-48-21.5-48-48v-3c0-8.5 2.1-16.9 6.2-24.3z\\\" /></svg><span class=\\\"lt__sound-label\\\">Rain</span></button></li>\\n            <li><button class=\\\"lt__controls-sound\\\" data-lt-sound=\\\"thunder\\\" aria-pressed=\\\"false\\\" aria-label=\\\"Click to play or pause thunder sounds\\\"><svg role=\\\"img\\\" aria-label=\\\"Thunder\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M0 224c0 53 43 96 96 96h47.2L290 202.5c17.6-14.1 42.6-14 60.2 .2s22.8 38.6 12.8 58.8L333.7 320H352h64c53 0 96-43 96-96s-43-96-96-96c-.5 0-1.1 0-1.6 0c1.1-5.2 1.6-10.5 1.6-16c0-44.2-35.8-80-80-80c-24.3 0-46.1 10.9-60.8 28C256.5 24.3 219.1 0 176 0C114.1 0 64 50.1 64 112c0 7.1 .7 14.1 1.9 20.8C27.6 145.4 0 181.5 0 224zm330.1 3.6c-5.8-4.7-14.2-4.7-20.1-.1l-160 128c-5.3 4.2-7.4 11.4-5.1 17.8s8.3 10.7 15.1 10.7h70.1L177.7 488.8c-3.4 6.7-1.6 14.9 4.3 19.6s14.2 4.7 20.1 .1l160-128c5.3-4.2 7.4-11.4 5.1-17.8s-8.3-10.7-15.1-10.7H281.9l52.4-104.8c3.4-6.7 1.6-14.9-4.2-19.6z\\\" /></svg><span class=\\\"lt__sound-label\\\">Thunder</span></button></li>\\n            <li><button class=\\\"lt__controls-sound\\\" data-lt-sound=\\\"wind\\\" aria-pressed=\\\"false\\\" aria-label=\\\"Click to play or pause wind sounds\\\"><svg role=\\\"img\\\" aria-label=\\\"Wind\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M288 32c0 17.7 14.3 32 32 32h32c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32 14.3-32 32s14.3 32 32 32H352c53 0 96-43 96-96s-43-96-96-96H320c-17.7 0-32 14.3-32 32zm64 352c0 17.7 14.3 32 32 32h32c53 0 96-43 96-96s-43-96-96-96H32c-17.7 0-32 14.3-32 32s14.3 32 32 32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H384c-17.7 0-32 14.3-32 32zM128 512h32c53 0 96-43 96-96s-43-96-96-96H32c-17.7 0-32 14.3-32 32s14.3 32 32 32H160c17.7 0 32 14.3 32 32s-14.3 32-32 32H128c-17.7 0-32 14.3-32 32s14.3 32 32 32z\\\"/></svg><span class=\\\"lt__sound-label\\\">Wind</span></button></li>\\n        </ul>\\n    </div>\\n    <div class=\\\"lt__toolbar\\\">\\n        <div class=\\\"lt__control-wrapper\\\">\\n            <label for=\\\"ld-volume\\\">\\n                Volume (<span id=\\\"ld-volume-value\\\">100</span>%)\\n            </label>\\n            <svg role=\\\"img\\\" aria-label=\\\"Move the slider to the left to reduce volume\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><path d=\\\"M320 64c0-12.6-7.4-24-18.9-29.2s-25-3.1-34.4 5.3L131.8 160H64c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64h67.8L266.7 471.9c9.4 8.4 22.9 10.4 34.4 5.3S320 460.6 320 448V64z\\\"/></svg>\\n            <input type=\\\"range\\\" id=\\\"ld-volume\\\" min=\\\"0\\\" max=\\\"1.0\\\" value=\\\"1.0\\\" step=\\\"0.1\\\" class=\\\"lt__controls-volume slider\\\">\\n            <svg role=\\\"img\\\" aria-label=\\\"Move the slider to the right to increase volume\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><path d=\\\"M533.6 32.5C598.5 85.2 640 165.8 640 256s-41.5 170.7-106.4 223.5c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C557.5 398.2 592 331.2 592 256s-34.5-142.2-88.7-186.3c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zM473.1 107c43.2 35.2 70.9 88.9 70.9 149s-27.7 113.8-70.9 149c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C475.3 341.3 496 301.1 496 256s-20.7-85.3-53.2-111.8c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zm-60.5 74.5C434.1 199.1 448 225.9 448 256s-13.9 56.9-35.4 74.5c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C393.1 284.4 400 271 400 256s-6.9-28.4-17.7-37.3c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zM301.1 34.8C312.6 40 320 51.4 320 64V448c0 12.6-7.4 24-18.9 29.2s-25 3.1-34.4-5.3L131.8 352H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h67.8L266.7 40.1c9.4-8.4 22.9-10.4 34.4-5.3z\\\"/></svg>\\n        </div>\\n    </div>\\n</div>\";\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 2.7.0\n * @ignore\n */\nfunction injectCSS() {\n  var root = ':root';\n  if (state.queryRoot !== document) {\n    root = ':host';\n  }\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity white noise player styles */\\n\".concat(root, \" {\\n    --lt-wn-border: #888888;\\n    --lt-wn-border-radius: 10px;\\n    --lt-wn-color: #333333;\\n    --lt-wn-svg-size: 4rem;\\n    --lt-wn-control-svg-size: 1.5rem;\\n    --lt-wn-range-size: 15rem;\\n    --lt-wn-min-height: 19rem;\\n}\\n\\n@container (max-width: 300px) {\\n    .lt__player {\\n        min-height: var(--lt-wn-min-height);\\n        svg {\\n            --lt-wn-svg-size: 3rem;\\n        }\\n        .lt__control-wrapper {\\n            svg {\\n                --lt-wn-control-svg-size: 1rem;\\n            }\\n            input[type=\\\"range\\\"] {\\n                --lt-wn-range-size: 10rem;\\n            }\\n        }\\n    }\\n}\\n\\n.lt__player {\\n    container-type: size;\\n    background-color: #fff;\\n    width: 100%;\\n    max-width: 30rem;\\n    min-height: var(--lt-wn-min-height);\\n    border: 1px solid #dddddd;\\n    border-radius: var(--lt-wn-border-radius);\\n    padding: 1rem;\\n    filter: drop-shadow(4px 5px 7px #8d8d8d);\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    color: var(--lt-wn-color);\\n    margin: 0 auto;\\n}\\n.lt__player svg {\\n    width: var(--lt-wn-svg-size);\\n    height: var(--lt-wn-svg-size);\\n    display: inline;\\n}\\n.lt__meta ul {\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr);\\n    list-style: none;\\n    text-align: center;\\n    margin: 0;\\n    padding: 0;\\n}\\n.lt__meta ul li {\\n    box-sizing: border-box;\\n    border-radius: var(--lt-wn-border-radius);\\n    border: 1px solid var(--lt-wn-border);\\n    margin: 0.3rem;\\n\\n    &:hover {\\n        background-color: #f2f4f5;\\n    }\\n}\\n.lt__meta ul li button {\\n    display: block;\\n    text-decoration: none;\\n    border-radius: inherit;\\n    width: 100%;\\n    border: none;\\n    background: none;\\n\\n    &:hover,\\n    &:focus {\\n        outline: 5px auto -webkit-focus-ring-color;\\n        outline-offset: -2px;\\n        background-color: #f2f4f5;\\n    }\\n\\n    &:active {\\n        box-shadow: 0 0 0 0.25rem rgba(49, 132, 253, 0.5);\\n    }\\n}\\n.lt__meta ul li button.lt__sound-active {\\n    box-shadow: 0 0 0 0.25rem rgba(49, 132, 253, 0.5);\\n    background: #efefef;\\n}\\n.lt__meta ul li svg {\\n    padding: 1rem 1rem 0.3rem 1rem;\\n    vertical-align: middle;\\n}\\n.lt__control-wrapper svg {\\n    width: var(--lt-wn-control-svg-size);\\n}\\n.lt__control-wrapper svg:last-child {\\n    position: relative;\\n    left: 0.6rem;\\n}\\n.lt__sound-label {\\n    display: block;\\n    padding-bottom: 0.7rem;\\n}\\n.lt__toolbar {\\n    margin-top: 0.5rem;\\n    text-align: center;\\n}\\n.lt__control-wrapper label {\\n    text-align: center;\\n    padding-bottom: 0;\\n    margin-bottom: 0;\\n    display: block;\\n    position: relative;\\n    top: 10px;\\n}\\n.lt__control-wrapper button {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n}\\ninput[type=\\\"range\\\"] {\\n   -webkit-appearance: none;\\n    appearance: none;\\n    background: transparent;\\n    cursor: pointer;\\n    width: var(--lt-wn-range-size);\\n}\\n/* Removes default focus */\\ninput[type=\\\"range\\\"]:focus {\\n  outline: none;\\n}\\ninput[type=\\\"range\\\"]::-webkit-slider-runnable-track {\\n   background-color: #01243d;\\n   border-radius: 0.5rem;\\n   height: 0.5rem;\\n}\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n   appearance: none;\\n   margin-top: -12px;\\n   background-color: #fff;\\n   border: 2px solid #01243d;\\n   height: 2rem;\\n   width: 1rem;\\n}\\ninput[type=\\\"range\\\"]:focus::-webkit-slider-thumb {\\n  border: 1px solid #01243d;\\n  outline: 3px solid #01243d;\\n  outline-offset: 0.125rem;\\n}\\ninput[type=\\\"range\\\"]::-moz-range-track {\\n   background-color: #01243d;\\n   border-radius: 0.5rem;\\n   height: 0.5rem;\\n}\\ninput[type=\\\"range\\\"]::-moz-range-thumb {\\n   border: none;\\n   border-radius: 0;\\n   border: 1px solid #01243d;\\n   background-color: #fff;\\n   height: 2rem;\\n   width: 1rem;\\n}\\ninput[type=\\\"range\\\"]:focus::-moz-range-thumb {\\n  border: 1px solid #01243d;\\n  outline: 3px solid #01243d;\\n  outline-offset: 0.125rem;\\n}\\n\\n@media (max-width: 400px) {\\n    .lt__meta ul {\\n        display: grid;\\n        grid-template-columns: repeat(2, 1fr);\\n    }\\n    input[type=\\\"range\\\"] {\\n        width: 10rem;\\n    }\\n}\\n\\n.lt__whitenoise-player-icon::before {\\n    content: url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M256 80C149.9 80 62.4 159.4 49.6 262c9.4-3.8 19.6-6 30.4-6c26.5 0 48 21.5 48 48V432c0 26.5-21.5 48-48 48c-44.2 0-80-35.8-80-80V384 336 288C0 146.6 114.6 32 256 32s256 114.6 256 256v48 48 16c0 44.2-35.8 80-80 80c-26.5 0-48-21.5-48-48V304c0-26.5 21.5-48 48-48c10.8 0 21 2.1 30.4 6C449.6 159.4 362.1 80 256 80z\\\"/></svg>');\\n    width: 16px;\\n    color: var(--lt-wn-color);\\n    margin-top: 0;\\n    font-size: 16px;\\n    -webkit-transition: color .2s;\\n    transition: color .2s;\\n    -webkit-font-smoothing: antialiased;\\n}\\n\");\n  elStyle.textContent = css;\n  if (state.queryRoot === document) {\n    document.head.append(elStyle);\n  } else {\n    state.queryRoot.appendChild(elStyle);\n  }\n  state.renderedCss = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/accessibility/ux/whiteNoise/index.js\n");

/***/ }),

/***/ "./src/assessment/extensions/ui/contentTabs/index.js":
/*!***********************************************************!*\
  !*** ./src/assessment/extensions/ui/contentTabs/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   escapeHTML: () => (/* binding */ escapeHTML),\n/* harmony export */   getTabsTheme: () => (/* binding */ getTabsTheme),\n/* harmony export */   run: () => (/* binding */ run),\n/* harmony export */   validateOptions: () => (/* binding */ validateOptions)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/items */ \"./src/assessment/core/items.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Renders styles and responsive logic for LT content tabs.\n *\n * Pass in a theme option to change the look of the tabs.\n *\n * @module Extensions/Assessment/contentTabs\n */\n\nvar state = {\n  options: {\n    theme: 'api-column-tabs'\n  },\n  renderedCss: false,\n  visitedItems: new Set()\n};\n\n/**\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/core';\n * import * as contentTabs from '@caspingus/lt/src/assessment/extensions/ui/contentTabs/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * contentTabs.run();\n * @param {object=} options - Optional configuration object includes:\n *  - `theme` (string) Which tabs theme to load. Options are `rounded` (default) and `api-column-tabs`.\n * @since 2.19.0\n */\nfunction run(options) {\n  state.options = validateOptions(options);\n  state.renderedCss || injectCSS();\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n    var itemReference = _core_items__WEBPACK_IMPORTED_MODULE_1__.itemReference();\n    if (!state.visitedItems.has(itemReference)) {\n      var elItem = document.querySelector(\"div[data-reference=\\\"\".concat(itemReference, \"\\\"]\"));\n      var tabsContainer = elItem.querySelectorAll('ul.lt__nav-tabs');\n\n      // Were tabs found on the item?\n      if (tabsContainer) {\n        var _iterator = _createForOfIteratorHelper(tabsContainer),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var tabContainer = _step.value;\n            // Make sure the first tab is active (fixing a hole in authoring)\n            tabContainer.querySelectorAll('li[role=tab]').forEach(function (list, index) {\n              if (index === 0) {\n                list.classList.add('active');\n              } else {\n                list.classList.remove('active');\n              }\n            });\n\n            // Add the title value from the text label for responsive tooltips\n            tabContainer.querySelectorAll('a[data-tab-target]').forEach(function (anchor) {\n              if (!anchor.hasAttribute('title') || anchor.getAttribute('title') === '') {\n                var escapedText = escapeHTML(anchor.textContent.trim());\n                anchor.setAttribute('title', escapedText);\n              }\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      state.visitedItems.add(itemReference);\n    }\n  });\n}\n\n/**\n * Replace special characters with HTML entities\n * @param {*} str\n * @returns String\n * @since 2.23.1\n * @ignore\n */\nfunction escapeHTML(str) {\n  return str.replace(/&/g, '&amp;') // Escape `&`\n  .replace(/</g, '&lt;') // Escape `<`\n  .replace(/>/g, '&gt;') // Escape `>`\n  .replace(/\"/g, '&quot;') // Escape `\"`\n  .replace(/'/g, '&#39;'); // Escape `'`\n}\n\n/**\n * Validates user passed options and merges them with the default options.\n * @param {*} options\n * @since 2.19.0\n * @ignore\n */\nfunction validateOptions(options) {\n  var validThemes = ['rounded', 'api-column-tabs'];\n  var opt = options || {};\n  if (options && _typeof(options) === 'object') {\n    opt = _objectSpread(_objectSpread({}, state.options), options);\n    if (!validThemes.includes(opt.theme)) {\n      opt.theme = 'api-column-tabs';\n    }\n  } else {\n    opt = _objectSpread({}, state.options);\n  }\n  return opt;\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 2.19.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = '/* Learnosity content tab styles */';\n  elStyle.textContent = css.concat('\\n', getTabsTheme(state.options.theme));\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}\n\n/**\n * Appends the base CSS styles and the chosen theme for tabs\n * @param {String} theme\n * @returns String\n * @since 2.23.1\n * @ignore\n */\nfunction getTabsTheme(theme) {\n  var base = \"/* Base tabs styles */\\n        .lrn.lrn-assess .lt__tabs,\\n        .lrn-author-item-content-wrapper .lt__tabs {\\n            container-type: inline-size;\\n\\n            .lt__nav-tabs {\\n                display: flex;\\n                box-shadow: none;\\n                flex-wrap: nowrap;\\n                overflow: hidden;\\n                padding-top: 1px;\\n\\n                li {\\n                    flex: 0 1 auto; /* don't grow, but shrink if needed */\\n                    border: 1px solid var(--tab-border);\\n                    border-top-left-radius: 10px;\\n                    border-top-right-radius: 10px;\\n                    margin-right: 6px;\\n                    background-color: var(--bg-grey);\\n                    box-shadow: none;\\n                    min-width: 0;\\n\\n                    a {\\n                        text-decoration: none;\\n                        font-weight: bold;\\n                        color: var(--tab-color);\\n                        text-overflow: ellipsis;\\n                        white-space: nowrap;\\n                        display: block;\\n                        overflow: hidden;\\n                    }\\n                }\\n\\n                li.active {\\n                    border-bottom: none;\\n                    background: var(--tab-bg-active);\\n                    color: var(--color-active);\\n                    border-bottom: none;\\n                }\\n\\n                > li:after,\\n                .nav-tabs:after {\\n                    background: none;\\n                }\\n            }\\n\\n            .lt__tab-content {\\n                border: 1px solid var(--tab-border);\\n                padding: 15px;\\n                margin-top: -1px; /* Fix for the tabs bottom border */\\n\\n                .lt__guard {\\n                    user-select: none;\\n                    width: 0;\\n                    height: 0;\\n                    margin: 0;\\n                }\\n\\n                .lt__tab-pane p:last-child {\\n                    margin-bottom: 0;\\n                }\\n            }\\n\\n            .tab-content>.active {\\n                padding-top: 0;\\n            }\\n        }\\n\\n        .lrn-author-item-content-wrapper .lt__tabs .lt__tab-pane {\\n            padding-top: 10px;\\n        }\\n    \";\n  var themeCss = '';\n  switch (theme || state.options.theme) {\n    case 'default':\n    case 'api-column-tabs':\n      themeCss = \"/* API column tabs theme */\\n            :root {\\n                --tab-border: #d9d9d9;\\n                --tab-color: #333333;\\n            }\\n            .lrn.lrn-assess .lt__tabs {\\n                .lt__nav-tabs {\\n                    overflow: initial;\\n\\n                    li {\\n                        border: none;\\n\\n                        a {\\n                            text-decoration: none;\\n                            font-weight: normal;\\n                        }\\n                    }\\n                }\\n\\n                .nav-tabs {\\n                    -webkit-box-shadow: 0 4px 2px -2px rgba(0, 0, 0, .2);\\n                    box-shadow: 0 4px 2px -2px rgba(0, 0, 0, .2);\\n                    text-align: center;\\n                }\\n\\n                .nav-tabs>li:after, .nav-tabs .nav-tab:after {\\n                    background: #1877b1;\\n                    border: none;\\n                    content: \\\"\\\";\\n                    display: block;\\n                    height: 2px;\\n                    outline: none;\\n                    transition: all .2s ease-in-out;\\n                    width: 100%;\\n                }\\n\\n                .nav-tabs>li:focus-within {\\n                    outline: none;\\n                }\\n\\n                .lt__tab-content {\\n                    border: none;\\n                    padding: 15px;\\n                    margin-top: -1px;\\n                }\\n            }\\n            \";\n      break;\n    case 'rounded':\n      themeCss = \"/* Rounded tabs theme */\\n            :root {\\n                --color-active: #333333;\\n                --customer-bg-blue: #e6f1ff;\\n                --bg-grey: #f0f0f0;\\n                --tab-bg-active: #ffffff;\\n                --tab-border: #d9d9d9;\\n                --tab-border-bottom: #eeeeee;\\n                --tab-color: inherit;\\n                --input-border: #898989;\\n            }\";\n      break;\n    default:\n      break;\n  }\n\n  // return themeCss.concat('\\n', base);\n  return base.concat('\\n', themeCss);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/ui/contentTabs/index.js\n");

/***/ }),

/***/ "./src/assessment/extensions/ui/networkStatus/index.js":
/*!*************************************************************!*\
  !*** ./src/assessment/extensions/ui/networkStatus/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Checks for an active network connection. If none found, adds\n * an icon to the UI to indicate the status to the end user.\n *\n * @module Extensions/Assessment/networkStatus\n */\n\nvar state = {\n  options: {\n    iconWrapper: 'top-right-wrapper',\n    interval: 30000,\n    message: 'Internet connection is currently down.',\n    render: true,\n    uri: 'https://questions.learnosity.com?latest-lts'\n  },\n  renderedCss: false\n};\n\n/**\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/core';\n * import * as networkStatus from '@caspingus/lt/src/assessment/extensions/ui/networkStatus/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * networkStatus.run();\n * @param {object=} options - Optional configuration object includes:\n *  - `iconWrapper` (string) classname of element to inject the broken connection icon. You\n * should never need this if using any of the Learnosity regions.\n *  - `interval` (numeric) millisecond interval to check connection. Defaults to 30000 (30 seconds).\n *  - `message` (string) message for tooltip and screen reader users.\n *  - `render` (boolean) whether to render the icon or not. Defaults to `true`.\n *  - `uri` (string) URI to check for network connectivity. Defaults to a Learnosity API endpoint which\n * is already whitelisted.\n * @since 2.12.0\n */\nfunction run(options) {\n  state.renderedCss || injectCSS();\n  validateOptions(options);\n  setInterval(checkOnlineStatus, state.options.interval);\n}\n\n/**\n * Sets UI message if network is down.\n * @since 2.12.0\n * @ignore\n */\nfunction checkOnlineStatus() {\n  return _checkOnlineStatus.apply(this, arguments);\n}\n/**\n * Makes a HEAD request to the specified URI to check for network connectivity.\n * @since 2.12.0\n * @ignore\n * @returns {promise}\n */\nfunction _checkOnlineStatus() {\n  _checkOnlineStatus = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var status, elIndicator, elWrapper, template;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return checkInternetConnectivity();\n        case 2:\n          status = _context.sent;\n          elIndicator = document.querySelector('.lt__networkStatus-indicator');\n          dispatchNetworkEvent(status);\n          if (state.options.render) {\n            if (!status) {\n              elWrapper = document.querySelector(\".\".concat(state.options.iconWrapper));\n              template = \"<div class=\\\"lt__networkStatus-indicator pos-left\\\" role=\\\"status\\\" aria-live=\\\"polite\\\" aria-atomic=\\\"true\\\" aria-relevant=\\\"all\\\">\\n                <span title=\\\"\".concat(state.options.message, \"\\\" aria-hidden=\\\"true\\\">\\n                    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"16px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"16px\\\" fill=\\\"#333333\\\">\\n                        <path d=\\\"M790-56 414-434q-47 11-87.5 33T254-346l-84-86q32-32 69-56t79-42l-90-90q-41 21-76.5 46.5T84-516L0-602q32-32 66.5-57.5T140-708l-84-84 56-56 736 736-58 56Zm-310-64q-42 0-71-29.5T380-220q0-42 29-71t71-29q42 0 71 29t29 71q0 41-29 70.5T480-120Zm236-238-29-29-29-29-144-144q81 8 151.5 41T790-432l-74 74Zm160-158q-77-77-178.5-120.5T480-680q-21 0-40.5 1.5T400-674L298-776q44-12 89.5-18t92.5-6q142 0 265 53t215 145l-84 86Z\\\"/>\\n                    </svg>\\n                </span>\\n                <span class=\\\"sr-only\\\">\").concat(state.options.message, \"</span>\\n            </div>\");\n              if (elWrapper && !elIndicator) {\n                elWrapper.insertAdjacentHTML('afterbegin', template);\n              }\n            } else if (elIndicator) {\n              elIndicator.remove();\n            }\n          }\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _checkOnlineStatus.apply(this, arguments);\n}\nfunction checkInternetConnectivity() {\n  return _checkInternetConnectivity.apply(this, arguments);\n}\n/**\n * Dispatches an event to indicate the network status.\n * Fires at the interval defined by configuration options.\n * @since 2.12.0\n * @ignore\n * @param {boolean} status\n */\nfunction _checkInternetConnectivity() {\n  _checkInternetConnectivity = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return fetch(state.options.uri, {\n            method: 'HEAD',\n            mode: 'no-cors',\n            cache: 'no-store'\n          });\n        case 3:\n          return _context2.abrupt(\"return\", true);\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", false);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n  return _checkInternetConnectivity.apply(this, arguments);\n}\nfunction dispatchNetworkEvent(status) {\n  var eventStatus = status ? 'LTNetworkOnline' : 'LTNetworkOffline';\n  var event = new CustomEvent(eventStatus);\n  document.dispatchEvent(event);\n}\n\n/**\n * Validates user passed options and merges them with the default options.\n * @param {*} options\n * @since 2.12.0\n * @ignore\n */\nfunction validateOptions(options) {\n  if (options && _typeof(options) === 'object') {\n    state.options = _objectSpread(_objectSpread({}, state.options), options);\n  }\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 2.12.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity render network status */\\n.lt__networkStatus-indicator {\\n    width: 24px;\\n    text-align: center;\\n    position: relative;\\n    top: 9px;\\n}\\n\";\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/ui/networkStatus/index.js\n");

/***/ }),

/***/ "./src/assessment/extensions/ui/renderPDF/index.js":
/*!*********************************************************!*\
  !*** ./src/assessment/extensions/ui/renderPDF/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/items */ \"./src/assessment/core/items.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * Renders any PDF uploaded as a <a href=\"https://authorguide.learnosity.com/hc/en-us/articles/360000759117-Adding-Resources-to-Questions-and-Features\" target=\"_blank\">resource</a>\n * to any item in the activity. Uses the pdf.js webviewer that has a\n * toolbar to zoom, view thumbnails, and download etc.\n *\n * By enabling this extension, all PDFs will be rendered in the viewer.\n *\n * <p><img src=\"https://raw.githubusercontent.com/michaelsharman/LT/main/src/assets/images/renderpdf.png\" alt=\"\" width=\"700\"></p>\n * @module Extensions/Assessment/renderPDF\n */\n\nvar state = {\n  renderedCss: false\n};\n\n/**\n * Sets up an item load listener to the current item for any resources that\n * have been uploaded during authoring. We parse the DOM for resources because\n * they aren't available in the item or question JSON.\n *\n * If the resource is a PDF, render using the pdf.js viewer.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.renderPDF.run();\n * @since 2.2.0\n */\nfunction run() {\n  state.renderedCss || injectCSS();\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', renderPDF);\n}\n\n/**\n * Uses pdf.js webviewer to render any resource PDFs in iframes.\n * @since 2.2.0\n * @ignore\n */\nfunction renderPDF() {\n  var currentItemRef = _core_items__WEBPACK_IMPORTED_MODULE_1__.itemReference();\n  var elItem = document.querySelector(\".learnosity-item[data-reference=\\\"\".concat(currentItemRef, \"\\\"]\"));\n  var resources = elItem.querySelectorAll('.lrn_widget .resource');\n  if (resources.length) {\n    resources.forEach(function (resource) {\n      var url = resource.querySelector('a').getAttribute('href');\n\n      // Only operate on PDFs\n      if (url.substring(url.length - 3) === 'pdf') {\n        var render = function render(pdfId) {\n          if (!document.getElementById(pdfId)) {\n            var elCanvasContainer = document.createElement('div');\n            var elPDFFrame = document.createElement('iframe');\n            elCanvasContainer.setAttribute('id', pdfId);\n            elCanvasContainer.setAttribute('class', 'lt__renderPDF_pdf');\n            resource.before(elCanvasContainer);\n            elPDFFrame.setAttribute('class', 'pdf-viewer');\n            elPDFFrame.setAttribute('src', \"\".concat(url, \"#sidebarViewOnLoad=0&_pagemode=none&_toolbar=0&view=FitH\"));\n            elCanvasContainer.appendChild(elPDFFrame);\n          }\n        };\n        // Hide the <a>. We might want to leave it there for an option to download\n        resource.classList.add('sr-only');\n        createHash(url).then(function (hash) {\n          render(hash);\n        });\n      }\n    });\n  }\n}\n\n/**\n * Hashes an input string.\n * @param {string} input\n * @returns {string}\n * @since 2.2.0\n * @ignore\n */\nfunction createHash(_x) {\n  return _createHash.apply(this, arguments);\n}\n/**\n * Injects the necessary CSS to the header\n * @since 2.2.0\n * @ignore\n */\nfunction _createHash() {\n  _createHash = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(input) {\n    var encoder, data, hashBuffer, hashArray, hashHex;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          encoder = new TextEncoder();\n          data = encoder.encode(input);\n          _context.next = 4;\n          return crypto.subtle.digest('SHA-256', data);\n        case 4:\n          hashBuffer = _context.sent;\n          hashArray = Array.from(new Uint8Array(hashBuffer));\n          hashHex = hashArray.map(function (_byte) {\n            return _byte.toString(16).padStart(2, '0');\n          }).join('');\n          return _context.abrupt(\"return\", hashHex);\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _createHash.apply(this, arguments);\n}\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity render PDF styles */\\n.lt__renderPDF_pdf .pdf-viewer {\\n    border: none;\\n    width: 100%;\\n    height: 650px;\\n}\\n\";\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/ui/renderPDF/index.js\n");

/***/ }),

/***/ "./src/assessment/extensions/validation/blockGrammarChecks.js":
/*!********************************************************************!*\
  !*** ./src/assessment/extensions/validation/blockGrammarChecks.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_activity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/activity */ \"./src/assessment/core/activity.js\");\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * This script blocks the Grammarly plugin and\n * browser spellcheck, autocorrect, autocapitalize\n * and autocomplete for:\n *  - Plain text and Essay question types\n *  - Annotations API notepad and sticky notes\n * @module Extensions/Assessment/blockGrammarChecks\n */\n\n/**\n * Looks for relevent question types and annotations\n * to add grammar blocking attributes to.\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.blockGrammarChecks.run();\n * @since 0.3.0\n */\nfunction run() {\n  var appInstance = _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance();\n  var annotationsApp = _core_app__WEBPACK_IMPORTED_MODULE_0__.annotationsApp();\n\n  // Set up a listener on item load for any Plain Text or Essay question types\n  appInstance.on('item:load', setupGrammarBlocker);\n  if (_core_activity__WEBPACK_IMPORTED_MODULE_1__.hasAnnotations()) {\n    // Define annotation-related events\n    var annotationEvents = ['notepad:toggleVisibility', 'stickynote:add'];\n\n    // Attach listeners for annotation events\n    annotationEvents.forEach(function (event) {\n      return annotationsApp.on(event, setupGrammarBlocker);\n    });\n  }\n}\n\n/**\n * Add HTML element attributes (to certain editable fields)\n * that will block the Grammarly extension and prevent browser\n * spellchecking/autocorrect/autocapitalize/autocomplete\n * from working.\n * @since 0.3.0\n * @ignore\n */\nfunction setupGrammarBlocker() {\n  var $els = [];\n  var $elTextareas = [];\n  // CSS classname added to Learnosity plain text and essay question types\n  var elementClassnames = ['lrn_texteditor_editable'];\n  // Parent Items API element\n  var $elLearnosityNode = document.getElementById('learnosity_assess');\n\n  // Look for found plain text or essay question types\n  for (var i = 0; i < elementClassnames.length; i++) {\n    $els = $elLearnosityNode.getElementsByClassName(elementClassnames[i]);\n    if ($els.length) {\n      for (var j = 0; j < $els.length; j++) {\n        addBlockingAttributes($els[j]);\n      }\n    }\n  }\n\n  // Look for any textareas inside the Learnosity Items API\n  $elTextareas = $elLearnosityNode.getElementsByTagName('textarea');\n  for (var l = 0; l < $elTextareas.length; l++) {\n    addBlockingAttributes($elTextareas[l]);\n  }\n}\n\n/**\n * Add custom (grammar blocking) attributes to the passed\n * HTML DOM element.\n * @param {object} $el HTML element to add attributes to.\n * @since 0.3.0\n * @ignore\n */\nfunction addBlockingAttributes($el) {\n  $el.setAttribute('data-gramm', 'false');\n  $el.setAttribute('data-gramm_editor', 'false');\n  $el.setAttribute('data-enable-grammarly', 'false');\n  $el.setAttribute('spellcheck', 'false');\n  $el.setAttribute('autocorrect', 'false');\n  $el.setAttribute('autocomplete', 'false');\n  $el.setAttribute('autocapitalize', 'false');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9leHRlbnNpb25zL3ZhbGlkYXRpb24vYmxvY2tHcmFtbWFyQ2hlY2tzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUNVOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNFLEdBQUdBLENBQUEsRUFBRztFQUNsQixJQUFNQyxXQUFXLEdBQUdILGtEQUFlLENBQUMsQ0FBQztFQUNyQyxJQUFNSSxjQUFjLEdBQUdKLHFEQUFrQixDQUFDLENBQUM7O0VBRTNDO0VBQ0FHLFdBQVcsQ0FBQ0UsRUFBRSxDQUFDLFdBQVcsRUFBRUMsbUJBQW1CLENBQUM7RUFFaEQsSUFBSUwsMERBQXVCLENBQUMsQ0FBQyxFQUFFO0lBQzNCO0lBQ0EsSUFBTU8sZ0JBQWdCLEdBQUcsQ0FBQywwQkFBMEIsRUFBRSxnQkFBZ0IsQ0FBQzs7SUFFdkU7SUFDQUEsZ0JBQWdCLENBQUNDLE9BQU8sQ0FBQyxVQUFBQyxLQUFLO01BQUEsT0FBSU4sY0FBYyxDQUFDQyxFQUFFLENBQUNLLEtBQUssRUFBRUosbUJBQW1CLENBQUM7SUFBQSxFQUFDO0VBQ3BGO0FBQ0o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNBLG1CQUFtQkEsQ0FBQSxFQUFHO0VBQzNCLElBQUlLLElBQUksR0FBRyxFQUFFO0VBQ2IsSUFBSUMsWUFBWSxHQUFHLEVBQUU7RUFDckI7RUFDQSxJQUFNQyxpQkFBaUIsR0FBRyxDQUFDLHlCQUF5QixDQUFDO0VBQ3JEO0VBQ0EsSUFBTUMsaUJBQWlCLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLG1CQUFtQixDQUFDOztFQUV0RTtFQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSixpQkFBaUIsQ0FBQ0ssTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtJQUMvQ04sSUFBSSxHQUFHRyxpQkFBaUIsQ0FBQ0ssc0JBQXNCLENBQUNOLGlCQUFpQixDQUFDSSxDQUFDLENBQUMsQ0FBQztJQUNyRSxJQUFJTixJQUFJLENBQUNPLE1BQU0sRUFBRTtNQUNiLEtBQUssSUFBSUUsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHVCxJQUFJLENBQUNPLE1BQU0sRUFBRUUsQ0FBQyxFQUFFLEVBQUU7UUFDbENDLHFCQUFxQixDQUFDVixJQUFJLENBQUNTLENBQUMsQ0FBQyxDQUFDO01BQ2xDO0lBQ0o7RUFDSjs7RUFFQTtFQUNBUixZQUFZLEdBQUdFLGlCQUFpQixDQUFDUSxvQkFBb0IsQ0FBQyxVQUFVLENBQUM7RUFDakUsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdYLFlBQVksQ0FBQ00sTUFBTSxFQUFFSyxDQUFDLEVBQUUsRUFBRTtJQUMxQ0YscUJBQXFCLENBQUNULFlBQVksQ0FBQ1csQ0FBQyxDQUFDLENBQUM7RUFDMUM7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNGLHFCQUFxQkEsQ0FBQ0csR0FBRyxFQUFFO0VBQ2hDQSxHQUFHLENBQUNDLFlBQVksQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDO0VBQ3ZDRCxHQUFHLENBQUNDLFlBQVksQ0FBQyxtQkFBbUIsRUFBRSxPQUFPLENBQUM7RUFDOUNELEdBQUcsQ0FBQ0MsWUFBWSxDQUFDLHVCQUF1QixFQUFFLE9BQU8sQ0FBQztFQUNsREQsR0FBRyxDQUFDQyxZQUFZLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQztFQUN2Q0QsR0FBRyxDQUFDQyxZQUFZLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQztFQUN4Q0QsR0FBRyxDQUFDQyxZQUFZLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQztFQUN6Q0QsR0FBRyxDQUFDQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL3NyYy9hc3Nlc3NtZW50L2V4dGVuc2lvbnMvdmFsaWRhdGlvbi9ibG9ja0dyYW1tYXJDaGVja3MuanM/YjMyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhcHAgZnJvbSAnLi4vLi4vY29yZS9hcHAnO1xuaW1wb3J0ICogYXMgYWN0aXZpdHkgZnJvbSAnLi4vLi4vY29yZS9hY3Rpdml0eSc7XG5cbi8qKlxuICogRXh0ZW5zaW9ucyBhZGQgc3BlY2lmaWMgZnVuY3Rpb25hbGl0eSB0byBJdGVtcyBBUEkuXG4gKiBUaGV5IHJlbHkgb24gbW9kdWxlcyB3aXRoaW4gTFQgYmVpbmcgYXZhaWxhYmxlLlxuICpcbiAqIC0tXG4gKlxuICogVGhpcyBzY3JpcHQgYmxvY2tzIHRoZSBHcmFtbWFybHkgcGx1Z2luIGFuZFxuICogYnJvd3NlciBzcGVsbGNoZWNrLCBhdXRvY29ycmVjdCwgYXV0b2NhcGl0YWxpemVcbiAqIGFuZCBhdXRvY29tcGxldGUgZm9yOlxuICogIC0gUGxhaW4gdGV4dCBhbmQgRXNzYXkgcXVlc3Rpb24gdHlwZXNcbiAqICAtIEFubm90YXRpb25zIEFQSSBub3RlcGFkIGFuZCBzdGlja3kgbm90ZXNcbiAqIEBtb2R1bGUgRXh0ZW5zaW9ucy9Bc3Nlc3NtZW50L2Jsb2NrR3JhbW1hckNoZWNrc1xuICovXG5cbi8qKlxuICogTG9va3MgZm9yIHJlbGV2ZW50IHF1ZXN0aW9uIHR5cGVzIGFuZCBhbm5vdGF0aW9uc1xuICogdG8gYWRkIGdyYW1tYXIgYmxvY2tpbmcgYXR0cmlidXRlcyB0by5cbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBMVCB9IGZyb20gJ0BjYXNwaW5ndXMvbHQvc3JjL2Fzc2Vzc21lbnQvaW5kZXgnO1xuICpcbiAqIExULmluaXQoaXRlbXNBcHApOyAvLyBTZXQgdXAgTFQgd2l0aCB0aGUgSXRlbXMgQVBJIGFwcGxpY2F0aW9uIGluc3RhbmNlIHZhcmlhYmxlXG4gKiBMVC5leHRlbnNpb25zLmJsb2NrR3JhbW1hckNoZWNrcy5ydW4oKTtcbiAqIEBzaW5jZSAwLjMuMFxuICovXG5leHBvcnQgZnVuY3Rpb24gcnVuKCkge1xuICAgIGNvbnN0IGFwcEluc3RhbmNlID0gYXBwLmFwcEluc3RhbmNlKCk7XG4gICAgY29uc3QgYW5ub3RhdGlvbnNBcHAgPSBhcHAuYW5ub3RhdGlvbnNBcHAoKTtcblxuICAgIC8vIFNldCB1cCBhIGxpc3RlbmVyIG9uIGl0ZW0gbG9hZCBmb3IgYW55IFBsYWluIFRleHQgb3IgRXNzYXkgcXVlc3Rpb24gdHlwZXNcbiAgICBhcHBJbnN0YW5jZS5vbignaXRlbTpsb2FkJywgc2V0dXBHcmFtbWFyQmxvY2tlcik7XG5cbiAgICBpZiAoYWN0aXZpdHkuaGFzQW5ub3RhdGlvbnMoKSkge1xuICAgICAgICAvLyBEZWZpbmUgYW5ub3RhdGlvbi1yZWxhdGVkIGV2ZW50c1xuICAgICAgICBjb25zdCBhbm5vdGF0aW9uRXZlbnRzID0gWydub3RlcGFkOnRvZ2dsZVZpc2liaWxpdHknLCAnc3RpY2t5bm90ZTphZGQnXTtcblxuICAgICAgICAvLyBBdHRhY2ggbGlzdGVuZXJzIGZvciBhbm5vdGF0aW9uIGV2ZW50c1xuICAgICAgICBhbm5vdGF0aW9uRXZlbnRzLmZvckVhY2goZXZlbnQgPT4gYW5ub3RhdGlvbnNBcHAub24oZXZlbnQsIHNldHVwR3JhbW1hckJsb2NrZXIpKTtcbiAgICB9XG59XG5cbi8qKlxuICogQWRkIEhUTUwgZWxlbWVudCBhdHRyaWJ1dGVzICh0byBjZXJ0YWluIGVkaXRhYmxlIGZpZWxkcylcbiAqIHRoYXQgd2lsbCBibG9jayB0aGUgR3JhbW1hcmx5IGV4dGVuc2lvbiBhbmQgcHJldmVudCBicm93c2VyXG4gKiBzcGVsbGNoZWNraW5nL2F1dG9jb3JyZWN0L2F1dG9jYXBpdGFsaXplL2F1dG9jb21wbGV0ZVxuICogZnJvbSB3b3JraW5nLlxuICogQHNpbmNlIDAuMy4wXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIHNldHVwR3JhbW1hckJsb2NrZXIoKSB7XG4gICAgbGV0ICRlbHMgPSBbXTtcbiAgICBsZXQgJGVsVGV4dGFyZWFzID0gW107XG4gICAgLy8gQ1NTIGNsYXNzbmFtZSBhZGRlZCB0byBMZWFybm9zaXR5IHBsYWluIHRleHQgYW5kIGVzc2F5IHF1ZXN0aW9uIHR5cGVzXG4gICAgY29uc3QgZWxlbWVudENsYXNzbmFtZXMgPSBbJ2xybl90ZXh0ZWRpdG9yX2VkaXRhYmxlJ107XG4gICAgLy8gUGFyZW50IEl0ZW1zIEFQSSBlbGVtZW50XG4gICAgY29uc3QgJGVsTGVhcm5vc2l0eU5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGVhcm5vc2l0eV9hc3Nlc3MnKTtcblxuICAgIC8vIExvb2sgZm9yIGZvdW5kIHBsYWluIHRleHQgb3IgZXNzYXkgcXVlc3Rpb24gdHlwZXNcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVsZW1lbnRDbGFzc25hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICRlbHMgPSAkZWxMZWFybm9zaXR5Tm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGVsZW1lbnRDbGFzc25hbWVzW2ldKTtcbiAgICAgICAgaWYgKCRlbHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8ICRlbHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICBhZGRCbG9ja2luZ0F0dHJpYnV0ZXMoJGVsc1tqXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBMb29rIGZvciBhbnkgdGV4dGFyZWFzIGluc2lkZSB0aGUgTGVhcm5vc2l0eSBJdGVtcyBBUElcbiAgICAkZWxUZXh0YXJlYXMgPSAkZWxMZWFybm9zaXR5Tm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGV4dGFyZWEnKTtcbiAgICBmb3IgKGxldCBsID0gMDsgbCA8ICRlbFRleHRhcmVhcy5sZW5ndGg7IGwrKykge1xuICAgICAgICBhZGRCbG9ja2luZ0F0dHJpYnV0ZXMoJGVsVGV4dGFyZWFzW2xdKTtcbiAgICB9XG59XG5cbi8qKlxuICogQWRkIGN1c3RvbSAoZ3JhbW1hciBibG9ja2luZykgYXR0cmlidXRlcyB0byB0aGUgcGFzc2VkXG4gKiBIVE1MIERPTSBlbGVtZW50LlxuICogQHBhcmFtIHtvYmplY3R9ICRlbCBIVE1MIGVsZW1lbnQgdG8gYWRkIGF0dHJpYnV0ZXMgdG8uXG4gKiBAc2luY2UgMC4zLjBcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gYWRkQmxvY2tpbmdBdHRyaWJ1dGVzKCRlbCkge1xuICAgICRlbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtZ3JhbW0nLCAnZmFsc2UnKTtcbiAgICAkZWwuc2V0QXR0cmlidXRlKCdkYXRhLWdyYW1tX2VkaXRvcicsICdmYWxzZScpO1xuICAgICRlbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtZW5hYmxlLWdyYW1tYXJseScsICdmYWxzZScpO1xuICAgICRlbC5zZXRBdHRyaWJ1dGUoJ3NwZWxsY2hlY2snLCAnZmFsc2UnKTtcbiAgICAkZWwuc2V0QXR0cmlidXRlKCdhdXRvY29ycmVjdCcsICdmYWxzZScpO1xuICAgICRlbC5zZXRBdHRyaWJ1dGUoJ2F1dG9jb21wbGV0ZScsICdmYWxzZScpO1xuICAgICRlbC5zZXRBdHRyaWJ1dGUoJ2F1dG9jYXBpdGFsaXplJywgJ2ZhbHNlJyk7XG59XG4iXSwibmFtZXMiOlsiYXBwIiwiYWN0aXZpdHkiLCJydW4iLCJhcHBJbnN0YW5jZSIsImFubm90YXRpb25zQXBwIiwib24iLCJzZXR1cEdyYW1tYXJCbG9ja2VyIiwiaGFzQW5ub3RhdGlvbnMiLCJhbm5vdGF0aW9uRXZlbnRzIiwiZm9yRWFjaCIsImV2ZW50IiwiJGVscyIsIiRlbFRleHRhcmVhcyIsImVsZW1lbnRDbGFzc25hbWVzIiwiJGVsTGVhcm5vc2l0eU5vZGUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaSIsImxlbmd0aCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJqIiwiYWRkQmxvY2tpbmdBdHRyaWJ1dGVzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJsIiwiJGVsIiwic2V0QXR0cmlidXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assessment/extensions/validation/blockGrammarChecks.js\n");

/***/ }),

/***/ "./src/assessment/extensions/validation/checkAnswerValidation.js":
/*!***********************************************************************!*\
  !*** ./src/assessment/extensions/validation/checkAnswerValidation.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/questions */ \"./src/assessment/core/questions.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/logger */ \"./src/utils/logger.js\");\n/* harmony import */ var _core_player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/player */ \"./src/assessment/core/player.js\");\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * This extension is used in scenarios where you want the\n * user to attempt all questions, and check the answer,\n * prior to navigating to the next question.\n *\n * Autoscorable questions that have disabled auto scoring\n * will be ignored.\n *\n * Items API configuration overrides take precedence:\n * ```\n * {\n *     \"config\": {\n *         \"questions_api_init_options\": {\n *             \"attribute_overrides\": {\n *                 \"instant_feedback\": false\n *             }\n *         }\n *     }\n * }\n * ```\n * @module Extensions/Assessment/checkAnswerValidation\n */\n\nvar state = {\n  message: {\n    header: 'Please check your answers',\n    body: \"<p>Before moving on, attempt all questions and click the \\\"Check Answer\\\" button.</p>\\n            <p>Note: the \\\"Check Answer\\\" button may not appear on every question.</p>\"\n  }\n};\n\n/**\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/core';\n * import * as checkAnswerValidation from '@caspingus/lt/src/assessment/extensions/validation/checkAnswerValidation\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n *\n * // These are the default values. Override as needed.\n * const config = {\n *     message: {\n *         header: 'Please check your answers',\n *         body: '<p>Before moving on, attempt all questions and click the \"Check Answer\" button.</p><p>Note: the \"Check Answer\" button may not appear on every question.</p>'\n *     }\n * }\n * checkAnswerValidation.run(config);\n * @param {object=} config Object of configuration options. Currently only supports a message object with\n *  2 keys, `header` and `body`.\n * @since 2.11.0\n */\nfunction run(config) {\n  if (config && config !== null && config !== void 0 && config.message) {\n    var _state$message, _state$message2;\n    if ((_state$message = state.message) !== null && _state$message !== void 0 && _state$message.header.length) {\n      state.message.header = config.message.header;\n    }\n    if ((_state$message2 = state.message) !== null && _state$message2 !== void 0 && _state$message2.body.length) {\n      state.message.body = config.message.body;\n    }\n  }\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:beforeunload', function (e) {\n    setup(e);\n  });\n}\n\n/**\n * Runs the setup logic for the check answer extension every time\n * a user tries to navigate away from the current item.\n * @param {object} e Item event object\n * @since 2.11.0\n * @ignore\n */\nfunction setup(e) {\n  var itemHasCheckAnswer = hasCheckAnswer();\n  if (itemHasCheckAnswer) {\n    if (!hasUsedCheckAnswer()) {\n      _utils_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Disabling navigation.');\n      e.preventDefault();\n      launchMessage();\n    }\n  }\n}\n\n/**\n * Sets up the logic for whether to disable navigation and wait\n * for the user to check the answer.\n *\n * If we don't find a check answer button, do nothing (check on question JSON and activity override)\n * If we don't find a scorable question, do nothing\n * We don't consider fully attempted. Simply checking answer is sufficient\n * @since 2.11.0\n * @ignore\n * @returns {boolean}\n */\nfunction hasCheckAnswer() {\n  var itemQuestions = _core_questions__WEBPACK_IMPORTED_MODULE_1__.questions();\n  var hasCheckAnswer = false;\n  var _iterator = _createForOfIteratorHelper(itemQuestions),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var q = _step.value;\n      var response_id = q.response_id;\n      if (_core_questions__WEBPACK_IMPORTED_MODULE_1__.hasCheckAnswer(response_id)) {\n        hasCheckAnswer = true;\n        break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return hasCheckAnswer;\n}\n\n/**\n * Determines whether the user has used the \"Check Answer\" button\n * on all valid questions on the current item. If there is no\n * check answer button (or we're on a feature-only item), we\n * return true.\n * @since 2.11.0\n * @ignore\n * @returns {boolean}\n */\nfunction hasUsedCheckAnswer() {\n  var itemQuestions = _core_questions__WEBPACK_IMPORTED_MODULE_1__.questions();\n  var _iterator2 = _createForOfIteratorHelper(itemQuestions),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var q = _step2.value;\n      var response_id = q.response_id;\n      if (_core_questions__WEBPACK_IMPORTED_MODULE_1__.hasCheckAnswer(response_id) && (!_core_questions__WEBPACK_IMPORTED_MODULE_1__.questionResponse(response_id) || !_core_questions__WEBPACK_IMPORTED_MODULE_1__.questionResponse(response_id).hasOwnProperty('feedbackAttemptsCount'))) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return true;\n}\n\n/**\n * Launches a message to the user to check their answer before\n * navigating to the next question.\n * @since 2.11.0\n * @ignore\n */\nfunction launchMessage() {\n  (0,_core_player__WEBPACK_IMPORTED_MODULE_3__.dialog)({\n    header: state.message.header,\n    body: state.message.body,\n    buttons: [{\n      button_id: 'lt__check_answer_validation',\n      label: 'Close',\n      is_primary: false\n    }]\n  });\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.assessApp().on('button:lt__check_answer_validation:clicked', function () {\n    (0,_core_player__WEBPACK_IMPORTED_MODULE_3__.hideDialog)();\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/validation/checkAnswerValidation.js\n");

/***/ }),

/***/ "./src/assessment/extensions/validation/disableOnValidate.js":
/*!*******************************************************************!*\
  !*** ./src/assessment/extensions/validation/disableOnValidate.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/questions */ \"./src/assessment/core/questions.js\");\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * This extension is used to disable the question after it has been validated\n * using the \"Check Answer\" button.\n *\n * @module Extensions/Assessment/disableOnValidate\n */\n\n/**\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/core';\n * import * as disableOnValidate from '@caspingus/lt/src/assessment/extensions/validation/disableOnValidate\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n *\n * disableOnValidate.run();\n * @since 2.17.0\n */\nfunction run() {\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', setup);\n}\n\n/**\n * Determines if the \"Check Answer\" button is enabled for the current question.\n * If so, the question is disabled after validation (click of the button).\n * @since 2.17.0\n * @ignore\n */\nfunction setup() {\n  var responses = (0,_core_questions__WEBPACK_IMPORTED_MODULE_1__.questionResponseIds)();\n  var _iterator = _createForOfIteratorHelper(responses),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var response_id = _step.value;\n      if ((0,_core_questions__WEBPACK_IMPORTED_MODULE_1__.hasCheckAnswer)(response_id)) {\n        _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().question(response_id).on('validated', function () {\n          (0,_core_questions__WEBPACK_IMPORTED_MODULE_1__.questionInstance)(response_id).disable();\n        });\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9leHRlbnNpb25zL3ZhbGlkYXRpb24vZGlzYWJsZU9uVmFsaWRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNDO0FBQ3VEOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0ksR0FBR0EsQ0FBQSxFQUFHO0VBQ2xCSixrREFBZSxDQUFDLENBQUMsQ0FBQ00sRUFBRSxDQUFDLFdBQVcsRUFBRUMsS0FBSyxDQUFDO0FBQzVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNBLEtBQUtBLENBQUEsRUFBRztFQUNiLElBQU1DLFNBQVMsR0FBR0wsb0VBQW1CLENBQUMsQ0FBQztFQUFDLElBQUFNLFNBQUEsR0FBQUMsMEJBQUEsQ0FFZEYsU0FBUztJQUFBRyxLQUFBO0VBQUE7SUFBQSxJQUFBQyxLQUFBLFlBQUFBLE1BQUEsRUFBRTtNQUFBLElBQTFCQyxXQUFXLEdBQUFGLEtBQUEsQ0FBQUcsS0FBQTtNQUNsQixJQUFJYiwrREFBYyxDQUFDWSxXQUFXLENBQUMsRUFBRTtRQUM3QmIsa0RBQWUsQ0FBQyxDQUFDLENBQ1plLFFBQVEsQ0FBQ0YsV0FBVyxDQUFDLENBQ3JCUCxFQUFFLENBQUMsV0FBVyxFQUFFLFlBQU07VUFDbkJKLGlFQUFnQixDQUFDVyxXQUFXLENBQUMsQ0FBQ0csT0FBTyxDQUFDLENBQUM7UUFDM0MsQ0FBQyxDQUFDO01BQ1Y7SUFDSixDQUFDO0lBUkQsS0FBQVAsU0FBQSxDQUFBUSxDQUFBLE1BQUFOLEtBQUEsR0FBQUYsU0FBQSxDQUFBUyxDQUFBLElBQUFDLElBQUE7TUFBQVAsS0FBQTtJQUFBO0VBUUMsU0FBQVEsR0FBQTtJQUFBWCxTQUFBLENBQUFZLENBQUEsQ0FBQUQsR0FBQTtFQUFBO0lBQUFYLFNBQUEsQ0FBQWEsQ0FBQTtFQUFBO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2FzcGluZ3VzL2x0Ly4vc3JjL2Fzc2Vzc21lbnQvZXh0ZW5zaW9ucy92YWxpZGF0aW9uL2Rpc2FibGVPblZhbGlkYXRlLmpzPzk4YzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXBwIGZyb20gJy4uLy4uL2NvcmUvYXBwJztcbmltcG9ydCB7IGhhc0NoZWNrQW5zd2VyLCBxdWVzdGlvbkluc3RhbmNlLCBxdWVzdGlvblJlc3BvbnNlSWRzIH0gZnJvbSAnLi4vLi4vY29yZS9xdWVzdGlvbnMnO1xuXG4vKipcbiAqIEV4dGVuc2lvbnMgYWRkIHNwZWNpZmljIGZ1bmN0aW9uYWxpdHkgdG8gSXRlbXMgQVBJLlxuICogVGhleSByZWx5IG9uIG1vZHVsZXMgd2l0aGluIExUIGJlaW5nIGF2YWlsYWJsZS5cbiAqXG4gKiAtLVxuICpcbiAqIFRoaXMgZXh0ZW5zaW9uIGlzIHVzZWQgdG8gZGlzYWJsZSB0aGUgcXVlc3Rpb24gYWZ0ZXIgaXQgaGFzIGJlZW4gdmFsaWRhdGVkXG4gKiB1c2luZyB0aGUgXCJDaGVjayBBbnN3ZXJcIiBidXR0b24uXG4gKlxuICogQG1vZHVsZSBFeHRlbnNpb25zL0Fzc2Vzc21lbnQvZGlzYWJsZU9uVmFsaWRhdGVcbiAqL1xuXG4vKipcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBMVCB9IGZyb20gJ0BjYXNwaW5ndXMvbHQvc3JjL2Fzc2Vzc21lbnQvY29yZSc7XG4gKiBpbXBvcnQgKiBhcyBkaXNhYmxlT25WYWxpZGF0ZSBmcm9tICdAY2FzcGluZ3VzL2x0L3NyYy9hc3Nlc3NtZW50L2V4dGVuc2lvbnMvdmFsaWRhdGlvbi9kaXNhYmxlT25WYWxpZGF0ZVxuICpcbiAqIExULmluaXQoaXRlbXNBcHApOyAvLyBTZXQgdXAgTFQgd2l0aCB0aGUgSXRlbXMgQVBJIGFwcGxpY2F0aW9uIGluc3RhbmNlIHZhcmlhYmxlXG4gKlxuICogZGlzYWJsZU9uVmFsaWRhdGUucnVuKCk7XG4gKiBAc2luY2UgMi4xNy4wXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBydW4oKSB7XG4gICAgYXBwLmFwcEluc3RhbmNlKCkub24oJ2l0ZW06bG9hZCcsIHNldHVwKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIHRoZSBcIkNoZWNrIEFuc3dlclwiIGJ1dHRvbiBpcyBlbmFibGVkIGZvciB0aGUgY3VycmVudCBxdWVzdGlvbi5cbiAqIElmIHNvLCB0aGUgcXVlc3Rpb24gaXMgZGlzYWJsZWQgYWZ0ZXIgdmFsaWRhdGlvbiAoY2xpY2sgb2YgdGhlIGJ1dHRvbikuXG4gKiBAc2luY2UgMi4xNy4wXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIHNldHVwKCkge1xuICAgIGNvbnN0IHJlc3BvbnNlcyA9IHF1ZXN0aW9uUmVzcG9uc2VJZHMoKTtcblxuICAgIGZvciAoY29uc3QgcmVzcG9uc2VfaWQgb2YgcmVzcG9uc2VzKSB7XG4gICAgICAgIGlmIChoYXNDaGVja0Fuc3dlcihyZXNwb25zZV9pZCkpIHtcbiAgICAgICAgICAgIGFwcC5hcHBJbnN0YW5jZSgpXG4gICAgICAgICAgICAgICAgLnF1ZXN0aW9uKHJlc3BvbnNlX2lkKVxuICAgICAgICAgICAgICAgIC5vbigndmFsaWRhdGVkJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBxdWVzdGlvbkluc3RhbmNlKHJlc3BvbnNlX2lkKS5kaXNhYmxlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOlsiYXBwIiwiaGFzQ2hlY2tBbnN3ZXIiLCJxdWVzdGlvbkluc3RhbmNlIiwicXVlc3Rpb25SZXNwb25zZUlkcyIsInJ1biIsImFwcEluc3RhbmNlIiwib24iLCJzZXR1cCIsInJlc3BvbnNlcyIsIl9pdGVyYXRvciIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiX3N0ZXAiLCJfbG9vcCIsInJlc3BvbnNlX2lkIiwidmFsdWUiLCJxdWVzdGlvbiIsImRpc2FibGUiLCJzIiwibiIsImRvbmUiLCJlcnIiLCJlIiwiZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/assessment/extensions/validation/disableOnValidate.js\n");

/***/ }),

/***/ "./src/assessment/extensions/validation/essayLimitByCharacter.js":
/*!***********************************************************************!*\
  !*** ./src/assessment/extensions/validation/essayLimitByCharacter.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _core_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/app */ \"./src/assessment/core/app.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/logger */ \"./src/utils/logger.js\");\n/* harmony import */ var _core_activity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/activity */ \"./src/assessment/core/activity.js\");\n/* harmony import */ var _core_player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/player */ \"./src/assessment/core/player.js\");\n/* harmony import */ var _core_items__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/items */ \"./src/assessment/core/items.js\");\n/* harmony import */ var _core_questions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/questions */ \"./src/assessment/core/questions.js\");\n/* harmony import */ var entities__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! entities */ \"./node_modules/entities/dist/esm/index.js\");\n\n\n\n\n\n\n\n\n/**\n * Extensions add specific functionality to Items API.\n * They rely on modules within LT being available.\n *\n * --\n *\n * This script changes the essay validation check on\n * string length to be character based, instead of\n * the default word based.\n *\n * It ignores spaces by default, so they are not\n * treated as characters to validate length.\n *\n * Works with `longtextV2` and `plaintext` question types.\n * @module Extensions/Assessment/essayLimitByCharacter\n */\n\nvar state = {\n  includeSpaces: false,\n  renderedCss: false,\n  validTypes: ['longtextV2', 'plaintext']\n};\n\n/**\n * Looks for relevent question types and overrides validation\n * to be on character length. Uses the `max_length` (Word limit)\n * that was set up in authoring, treating the value as a character\n * length instead of word length.\n *\n * **Known limitations**\n *\n * If the assessment player is in responsive mode (< 800px) and\n * you *don't* have the review screen enabled (which it is by default)\n * then we can't inject a custom button. This means we render the\n * default Finish button, and no prevent submission will occur.\n * The solution is to use any of the valid regions (`main`,\n * `horizontal`, or `horizontal-fixed`) and don't decouple the\n * submit button from the review button in Items API configuration.\n *\n * Essentially, if you're using default options, you'll be fine.\n *\n * If submitting via the JavaScript `submit()` method, this will\n * skip the validation check.\n *\n * **Preventing submission**\n *\n * By default, questions are authored to prevent the user from\n * submitting their session in the event of word limit violations.\n * The same behaviour is inherited in this extension. If you don't\n * want to prevent submission, you can check the `Submit over limit`\n * option in the question authoring area.\n *\n * To prevent submission, we need to add a custom button to Items\n * API becuase we can't easily inject a validation check when the\n * default submit button is clicked, so we need to replace it with\n * a custom one.\n *\n * Adding a custom button is a capability in Items API. Below is a code\n * snippet of an Items API configuration object. Note the custom button\n * is added in `region_overrides`.\n *\n * You MUST use the `icon_class` and `name` as defined in the custom\n * button `options` object below.\n *\n * **`main` region**\n * ```\n * {\n *     \"config\": {\n *         \"regions\": \"main\",\n *         \"region_overrides\": {\n *             \"bottom-right\": [\n *                 {\n *                     \"type\": \"custom_button\",\n *                     \"options\": {\n *                         \"name\": \"btn-essay-character-limit-submit\",\n *                         \"label\": \"Finish\",\n *                         \"icon_class\": \"item-next hidden\"\n *                     },\n *                     \"position\": \"right\"\n *                 },\n *                 {\n *                     \"type\": \"next_button\",\n *                     \"position\": \"right\"\n *                 },\n *                 {\n *                     \"type\": \"previous_button\",\n *                     \"position\": \"right\"\n *                 }\n *             ]\n *         }\n *     }\n * }\n * ```\n *\n * **`horizontal` or `horizontal-fixed` regions**\n * ```\n * {\n *     \"config\": {\n *         \"regions\": \"horizontal\",\n *         \"region_overrides\": {\n *             \"bottom\": [\n *                 {\n *                     \"type\": \"custom_button\",\n *                     \"options\": {\n *                         \"name\": \"btn-essay-character-limit-submit\",\n *                         \"label\": \"Finish\",\n *                         \"icon_class\": \"item-next hidden\"\n *                     },\n *                     \"position\": \"right\"\n *                 },\n *                 {\n *                     \"type\": \"next_button\",\n *                     \"position\": \"right\"\n *                 },\n *                 {\n *                     \"type\": \"horizontaltoc_element\",\n *                     \"position\": \"right\"\n *                 },\n *                 {\n *                     \"type\": \"previous_button\",\n *                     \"position\": \"right\"\n *                 }\n *             ]\n *         }\n *     }\n * }\n * ```\n *\n * **Changing labels**\n *\n * This extension will automatically change `Word Limit` to `Character Limit` in the\n * footer of the essay question types. However, for full coverage in review mode, or\n * in authoring and reporting, you should use label bundles. Eg:\n *\n * **Assessment label bundle**\n *\n * Use this in Items and Reports APIs.\n *\n * Caveat: this will update Math Essay and Chemistry Essay footers as well.\n * ```\n * {\n *     \"config\": {\n *         \"questions_api_init_options\": {\n *             \"labelBundle\": {\n *                 \"wordLength\": \"Character Limit\"\n *             }\n *         }\n *     }\n * }\n * ```\n *\n * **Authoring label bundle**\n *\n * Use this in Author API.\n * ```\n * {\n *     \"config\": {\n *         \"dependencies\": {\n *             \"question_editor_api\": {\n *                 \"init_options\": {\n *                     \"label_bundle\": {\n *                         \"help.longtextV2.name:max_length\": \"Character limit\",\n *                         \"help.longtextV2.name:show_word_limit\": \"Character limit\",\n *                         \"help.longtextV2.description:max_length\": \"Maximum number of characters that can be entered in the text entry area (max 10,000 characters).\",\n *                         \"help.longtextV2.description:show_word_limit\": \"Defines whether the character limit should be displayed in the toolbar or not. The options are: <ul><li><strong>Always On</strong> - Character Limit is always displayed.</li><li><strong>On Limit</strong> - Character Limit will only be displayed when the limit is reached.</li><li><strong>Off</strong> - Character Limit will not be displayed.</li></ul>\",\n *                         \"help.longtextV2.description:submit_over_limit\": \"Determines if the user can save/submit text when the character limit has been exceeded.\",\n *                         \"longtextV2:max_length\": \"Character limit\",\n *                         \"longtextV2:show_word_count\": \"Show character count\",\n *                         \"longtextV2:show_word_limit\": \"Character limit\",\n *                         \"help.plaintext.name:max_length\": \"Character limit\",\n *                         \"help.plaintext.name:show_word_limit\": \"Character limit\",\n *                         \"help.plaintext.description:max_length\": \"Maximum number of characters that can be entered in the text entry area (max 10,000 characters).\",\n *                         \"help.plaintext.description:show_word_limit\": \"Defines whether the character limit should be displayed in the toolbar or not. The options are: <ul><li><strong>Always On</strong> - Character Limit is always displayed.</li><li><strong>On Limit</strong> - Character Limit will only be displayed when the limit is reached.</li><li><strong>Off</strong> - Character Limit will not be displayed.</li></ul>\",\n * \t                    \"plaintext:max_length\": \"Character limit\",\n *                         \"plaintext:show_word_limit\": \"Character limit\"\n *                     }\n *                 }\n *             },\n *             \"questions_api\": {\n *                 \"init_options\": {\n *                     \"labelBundle\": {\n *                         \"wordLength\": \"Character Limit\"\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * }\n * ```\n *\n * @example\n * import { LT } from '@caspingus/lt/src/assessment/index';\n *\n * LT.init(itemsApp); // Set up LT with the Items API application instance variable\n * LT.extensions.essayLimitByCharacter.run();\n * @param {boolean} includeSpaces Whether to include spaces in the character count\n * Default is `false`.\n * @since 0.10.0\n */\nfunction run() {\n  var includeSpaces = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  state.includeSpaces = Boolean(includeSpaces);\n  state.renderedCss || injectCSS();\n  setQuestionListeners();\n\n  // Set up a listener on item load to check Finish button state\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('item:load', function () {\n    setSubmitButtonState();\n  });\n  var elCustomSubmit = document.querySelector('.custom_btn.item-next');\n  if (elCustomSubmit) {\n    elCustomSubmit.classList.add('lrn_btn_blue');\n    setupSubmitPrevention();\n  } else {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error('No custom submit button found. Character length validation will occur, but no submission prevention.');\n  }\n}\n\n/**\n * Checks resume mode, on load of the API to see whether we have\n * existing responses to load an accurate character count for.\n * Also sets a change listener on all valid types to check limit.\n * @since 1.3.0\n * @ignore\n */\nfunction setQuestionListeners() {\n  var appInstance = _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance();\n  var questions = Object.values(appInstance.getQuestions());\n  questions.filter(function (question) {\n    return state.validTypes.includes(question.type);\n  }).forEach(function (question) {\n    var questionInstance = appInstance.question(question.response_id);\n    questionInstance.on('rendered', function () {\n      setupEssayValidationUI(questionInstance);\n\n      // Check on load for existing responses\n      if (_core_activity__WEBPACK_IMPORTED_MODULE_2__.isResuming()) {\n        checkLimit(questionInstance);\n      }\n    });\n    questionInstance.on('changed', function () {\n      return checkLimit(questionInstance);\n    });\n  });\n}\n\n/**\n * Checks the user response to see if they are\n * over the validation limit.\n * @param {object} questionInstance\n * @param {boolean} setUI Whether to add UI validation.\n * @returns {boolean}\n * @since 0.10.0\n * @ignore\n */\nfunction checkLimit(questionInstance) {\n  var _questionInstance$get, _questionInstance$get2;\n  var setUI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var type = questionInstance.getQuestion().type;\n  var maxLength = questionInstance.getQuestion().max_length;\n  var rawResponse = (_questionInstance$get = questionInstance.getResponse()) !== null && _questionInstance$get !== void 0 && _questionInstance$get.value ? (_questionInstance$get2 = questionInstance.getResponse()) === null || _questionInstance$get2 === void 0 ? void 0 : _questionInstance$get2.value : '';\n  var validLength = true;\n  var response;\n  var strLength;\n  if (type === 'plaintext') {\n    response = state.includeSpaces ? rawResponse : stripSpaces(rawResponse);\n    strLength = response.length;\n  } else {\n    response = state.includeSpaces ? stripHtml(rawResponse) : stripSpaces(stripHtml(rawResponse));\n    strLength = entities__WEBPACK_IMPORTED_MODULE_6__.decodeHTML(response).length;\n  }\n  if (maxLength) {\n    if (strLength > maxLength) {\n      validLength = false;\n    }\n  }\n  if (setUI) {\n    setValidationUI(questionInstance, validLength, strLength);\n  }\n  return validLength;\n}\n\n/**\n * Updates the character count in the UI and, if\n * necessary, sets validation classes.\n * @param {object} questionInstance\n * @param {boolean} isValid\n * @param {number} strLength\n * @since 0.10.0\n * @ignore\n */\nfunction setValidationUI(questionInstance, isValid, strLength) {\n  var id = questionInstance.getQuestion().response_id;\n  var elContainer = document.getElementById(id);\n  var elEditor = elContainer.querySelector('.lrn_texteditor_editable');\n  var elWordCount = elContainer.querySelector('.lrn_word_count');\n  var elLengthIndicator = elContainer.querySelector('.lrn_length_indicator');\n  var warningClassIndicator = 'lrn_wordcount_warning_label';\n  var warningClassEditor = 'lrn_wordcount_warning';\n  var characterCount = strLength;\n  if (questionInstance.getQuestion().type === 'plaintext') {\n    characterCount = strLength + ' /';\n    setTimeout(function () {\n      setUI();\n    }, 10);\n  } else {\n    setUI();\n  }\n  function setUI() {\n    elWordCount.textContent = characterCount;\n    if (!isValid) {\n      elEditor.classList.add(warningClassEditor);\n      elLengthIndicator.classList.add(warningClassIndicator);\n    } else {\n      elEditor.classList.remove(warningClassEditor);\n      elLengthIndicator.classList.remove(warningClassIndicator);\n    }\n  }\n}\n\n/**\n * Replaces `Word` with `Character` in the default UI if a\n * label bundle hasn't been set in Items API config.\n * @param {object} questionInstance\n * @since 0.10.0\n * @ignore\n */\nfunction setupEssayValidationUI(questionInstance) {\n  var _activity$activity;\n  var hasLabelBundle = (_activity$activity = _core_activity__WEBPACK_IMPORTED_MODULE_2__.activity()) === null || _activity$activity === void 0 || (_activity$activity = _activity$activity.config) === null || _activity$activity === void 0 || (_activity$activity = _activity$activity.questions_api_init_options) === null || _activity$activity === void 0 || (_activity$activity = _activity$activity.labelBundle) === null || _activity$activity === void 0 ? void 0 : _activity$activity.wordLength;\n  if (!hasLabelBundle) {\n    var id = questionInstance.getQuestion().response_id;\n    var elContainer = document.getElementById(id);\n    var elWordLimit = elContainer.querySelector('.lrn_word_limit');\n    var wordLimitText = elWordLimit.textContent;\n    var newWordLimitText = wordLimitText.replace('Word', 'Character');\n    elWordLimit.textContent = newWordLimitText;\n  }\n}\n\n/**\n * Sets up click events on the possible submit buttons, then\n * calls checkValidResponses() when clicked.\n * Possible submit buttons are \"Finish\" inside the review screen,\n * or the custom button declared in Items API configuration.\n * @since 1.1.0\n * @ignore\n */\nfunction setupSubmitPrevention() {\n  var elCustomSubmit = document.querySelector('.custom_btn.item-next');\n  if (elCustomSubmit) {\n    elCustomSubmit.addEventListener('click', checkValidResponses);\n    _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('test:panel:shown', function () {\n      var elReviewSubmit = document.querySelector('.panel-footer .test-submit');\n      if (elReviewSubmit) {\n        elReviewSubmit.addEventListener('click', checkValidResponses);\n      }\n    });\n  }\n}\n\n/**\n * Checks any essays on the session and their character length.\n * If the length on any is invalid, and the `submit_over_limit`\n * flag isn't set, we prevent submission.\n * Works when the custom submit button is clicked, or when we\n * override the \"Finish\" button in the review screen. We only\n * do the latter when a custom submit button also exists.\n * @param {object} e Click event object.\n * @since 1.1.0\n * @ignore\n */\nfunction checkValidResponses(e) {\n  var sessionQuestions = _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().getQuestions();\n  var invalidResponseIds = [];\n  for (var q in sessionQuestions) {\n    if (state.validTypes.includes(sessionQuestions[q].type)) {\n      var _sessionQuestions$q;\n      if (!((_sessionQuestions$q = sessionQuestions[q]) !== null && _sessionQuestions$q !== void 0 && _sessionQuestions$q.submit_over_limit) && !checkLimit(_core_questions__WEBPACK_IMPORTED_MODULE_5__.questionInstance(q), false)) {\n        invalidResponseIds.push(q);\n      }\n    }\n  }\n  if (invalidResponseIds.length) {\n    _utils_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].warn('Invalid essay response length found.');\n    e.preventDefault();\n    e.stopPropagation();\n    var itemReferences = [];\n    for (var i = 0; i < invalidResponseIds.length; i++) {\n      var temp = _core_items__WEBPACK_IMPORTED_MODULE_4__.itemByResponseId(invalidResponseIds[i]);\n      if (temp) {\n        itemReferences.push(temp.source.reference);\n      }\n    }\n    loadErrorDialog(itemReferences);\n  } else {\n    submit();\n  }\n}\n\n/**\n * Handles showing/hiding the default \"Finish\" button with a\n * custom button as declared in Items API configuration. We\n * need to do this because we can't preventDefault on the default\n * submit (Finish) button.\n * Executes on every item:load event.\n * @since 1.1.0\n * @ignore\n */\nfunction setSubmitButtonState() {\n  var elDefaultSubmit = document.querySelector('.test-submit.item-next');\n  var elCustomSubmit = document.querySelector('.custom_btn.item-next');\n  if (elCustomSubmit && !_core_player__WEBPACK_IMPORTED_MODULE_3__.isResponsiveMode()) {\n    if (!_core_items__WEBPACK_IMPORTED_MODULE_4__.isLastItem()) {\n      elCustomSubmit.classList.add('hidden');\n    } else {\n      if (hasReviewScreenOnFinish() && _core_activity__WEBPACK_IMPORTED_MODULE_2__.region()) {\n        elCustomSubmit.classList.add('hidden');\n      } else {\n        elDefaultSubmit.classList.add('hidden');\n        elCustomSubmit.classList.remove('hidden');\n      }\n    }\n  }\n}\n\n/**\n * Checks to see if the session was set up with a review\n * screen as the last step prior to submission. We need\n * to know this because in that scenario, there is a \"Review\"\n * button ono the last item instead of \"Finish\".\n * @returns {boolean}\n * @since 1.1.0\n * @ignore\n */\nfunction hasReviewScreenOnFinish() {\n  var _activity$activity2;\n  var hasReviewElement = document.querySelector('.review-screen');\n  var isDecoupled = (_activity$activity2 = _core_activity__WEBPACK_IMPORTED_MODULE_2__.activity()) === null || _activity$activity2 === void 0 || (_activity$activity2 = _activity$activity2.config) === null || _activity$activity2 === void 0 || (_activity$activity2 = _activity$activity2.configuration) === null || _activity$activity2 === void 0 ? void 0 : _activity$activity2.decouple_submit_from_review;\n  if (!hasReviewElement || isDecoupled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Loads a custom Items API dialog to alert the user they\n * have invalid response. This is the same as the default\n * modal we have for word count violations.\n * We check for labels from the Items API config object\n * first, otherwise we use the default (english) labels.\n * @param {array} itemReferences\n * @since 1.1.0\n * @ignore\n */\nfunction loadErrorDialog(itemReferences) {\n  var _activity$activity3, _activity$activity4, _activity$activity5, _activity$activity6;\n  var labels = {\n    question: ((_activity$activity3 = _core_activity__WEBPACK_IMPORTED_MODULE_2__.activity()) === null || _activity$activity3 === void 0 || (_activity$activity3 = _activity$activity3.config) === null || _activity$activity3 === void 0 || (_activity$activity3 = _activity$activity3.labelBundle) === null || _activity$activity3 === void 0 ? void 0 : _activity$activity3.question) || 'Question',\n    submitTest: ((_activity$activity4 = _core_activity__WEBPACK_IMPORTED_MODULE_2__.activity()) === null || _activity$activity4 === void 0 || (_activity$activity4 = _activity$activity4.config) === null || _activity$activity4 === void 0 || (_activity$activity4 = _activity$activity4.labelBundle) === null || _activity$activity4 === void 0 ? void 0 : _activity$activity4.submitTest) || 'Submit activity',\n    decline: ((_activity$activity5 = _core_activity__WEBPACK_IMPORTED_MODULE_2__.activity()) === null || _activity$activity5 === void 0 || (_activity$activity5 = _activity$activity5.config) === null || _activity$activity5 === void 0 || (_activity$activity5 = _activity$activity5.labelBundle) === null || _activity$activity5 === void 0 ? void 0 : _activity$activity5.decline) || 'Cancel',\n    invalidQuestionsMessage: ((_activity$activity6 = _core_activity__WEBPACK_IMPORTED_MODULE_2__.activity()) === null || _activity$activity6 === void 0 || (_activity$activity6 = _activity$activity6.config) === null || _activity$activity6 === void 0 || (_activity$activity6 = _activity$activity6.labelBundle) === null || _activity$activity6 === void 0 ? void 0 : _activity$activity6.invalidQuestionsMessage) || 'The following questions are not currently valid. Please follow the links to review'\n  };\n  var template = \"\\n        <p>\".concat(labels.invalidQuestionsMessage, \"</p>\\n        <ul>\\n    \");\n  for (var i = 0; i < itemReferences.length; i++) {\n    template += \"<li class=\\\"link essay-limit-character-item\\\" data-item-reference=\\\"\".concat(itemReferences[i], \"\\\">\").concat(labels.question, \"</li>\");\n  }\n  template += '</ul>';\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.assessApp().on('button:btn_essay_character_limit_cancel:clicked', function () {\n    _core_player__WEBPACK_IMPORTED_MODULE_3__.hideDialog();\n  });\n  _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().on('test:panel:show', function () {\n    setTimeout(function () {\n      var elLinks = document.querySelectorAll('.essay-limit-character-item');\n      if (elLinks) {\n        elLinks.forEach(function (el) {\n          var itemReference = el.getAttribute('data-item-reference');\n          el.addEventListener('click', function () {\n            _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().items()[\"goto\"](itemReference);\n            _core_player__WEBPACK_IMPORTED_MODULE_3__.hideDialog();\n          });\n        });\n      }\n    }, 500);\n  });\n  _core_player__WEBPACK_IMPORTED_MODULE_3__.dialog({\n    header: labels.submitTest,\n    body: template,\n    buttons: [{\n      button_id: 'btn_essay_character_limit_cancel',\n      label: labels.decline,\n      is_primary: true\n    }]\n  });\n}\n\n/**\n * Because we are using a custom submit button, we need\n * to submit manually when the button is clicked. However,\n * we do this by sending a click through the (hidden)\n * default submit button. This way we get the player behaviour\n * for submission that isn't available using the submit() method.\n * If for some reason there is no default submit button, we\n * submit using the method, with no default checks.\n * @since 1.1.0\n * @ignore\n */\nfunction submit() {\n  var elDefaultSubmit = document.getElementById('lrn_assess_next_btn');\n  if (elDefaultSubmit) {\n    elDefaultSubmit.click();\n  } else {\n    var settings = {\n      show_submit_confirmation: true,\n      show_submit_ui: true,\n      success: function success(response_ids) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].info('Submit was successful', response_ids);\n      },\n      error: function error(event) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error('Submit has failed', event);\n      }\n    };\n    _core_app__WEBPACK_IMPORTED_MODULE_0__.appInstance().submit(settings);\n  }\n}\n\n/**\n * Strips HTML from a string.\n * @param {string} s\n * @returns {string}\n * @since 0.10.0\n * @ignore\n */\nfunction stripHtml(s) {\n  return s.replace(/<[^>]*>/g, '').trim();\n}\n\n/**\n * Strips spaces from a string.\n * @param {string} s\n * @returns {string}\n * @since 0.10.0\n * @ignore\n */\nfunction stripSpaces(s) {\n  return s.replace(/\\s+/g, '');\n}\n\n/**\n * Injects the necessary CSS to the header\n * @since 0.10.0\n * @ignore\n */\nfunction injectCSS() {\n  var elStyle = document.createElement('style');\n  var css = \"\\n/* Learnosity essay limit by character styles */\\n.lrn_widget .lrn_word_count,\\n.lrn_widget .lrn_character_count {\\n    margin-right: 0px;\\n}\\n\";\n  elStyle.textContent = css;\n  document.head.append(elStyle);\n  state.renderedCss = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assessment/extensions/validation/essayLimitByCharacter.js\n");

/***/ }),

/***/ "./src/assessment/index.js":
/*!*********************************!*\
  !*** ./src/assessment/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LT: () => (/* binding */ LT)\n/* harmony export */ });\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ \"./src/assessment/core.js\");\n/* harmony import */ var _extensions_accessibility_aria_ariaCountOnNav__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extensions/accessibility/aria/ariaCountOnNav */ \"./src/assessment/extensions/accessibility/aria/ariaCountOnNav.js\");\n/* harmony import */ var _extensions_validation_blockGrammarChecks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extensions/validation/blockGrammarChecks */ \"./src/assessment/extensions/validation/blockGrammarChecks.js\");\n/* harmony import */ var _extensions_validation_checkAnswerValidation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extensions/validation/checkAnswerValidation */ \"./src/assessment/extensions/validation/checkAnswerValidation.js\");\n/* harmony import */ var _extensions_accessibility_ux_columnResizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./extensions/accessibility/ux/columnResizer */ \"./src/assessment/extensions/accessibility/ux/columnResizer.js\");\n/* harmony import */ var _extensions_ui_contentTabs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./extensions/ui/contentTabs */ \"./src/assessment/extensions/ui/contentTabs/index.js\");\n/* harmony import */ var _extensions_validation_disableOnValidate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extensions/validation/disableOnValidate */ \"./src/assessment/extensions/validation/disableOnValidate.js\");\n/* harmony import */ var _extensions_validation_essayLimitByCharacter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./extensions/validation/essayLimitByCharacter */ \"./src/assessment/extensions/validation/essayLimitByCharacter.js\");\n/* harmony import */ var _extensions_accessibility_ux_hideAlternatives__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./extensions/accessibility/ux/hideAlternatives */ \"./src/assessment/extensions/accessibility/ux/hideAlternatives.js\");\n/* harmony import */ var _extensions_accessibility_ux_keyboardShortcuts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./extensions/accessibility/ux/keyboardShortcuts */ \"./src/assessment/extensions/accessibility/ux/keyboardShortcuts.js\");\n/* harmony import */ var _extensions_accessibility_ux_magnifier__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./extensions/accessibility/ux/magnifier */ \"./src/assessment/extensions/accessibility/ux/magnifier.js\");\n/* harmony import */ var _extensions_accessibility_ux_mcqLabelPrefix__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./extensions/accessibility/ux/mcqLabelPrefix */ \"./src/assessment/extensions/accessibility/ux/mcqLabelPrefix.js\");\n/* harmony import */ var _extensions_ui_networkStatus_index__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./extensions/ui/networkStatus/index */ \"./src/assessment/extensions/ui/networkStatus/index.js\");\n/* harmony import */ var _extensions_accessibility_ux_pageOverlay__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./extensions/accessibility/ux/pageOverlay */ \"./src/assessment/extensions/accessibility/ux/pageOverlay.js\");\n/* harmony import */ var _extensions_ui_renderPDF_index__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./extensions/ui/renderPDF/index */ \"./src/assessment/extensions/ui/renderPDF/index.js\");\n/* harmony import */ var _extensions_accessibility_ux_resetResponse__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./extensions/accessibility/ux/resetResponse */ \"./src/assessment/extensions/accessibility/ux/resetResponse.js\");\n/* harmony import */ var _extensions_accessibility_ux_toggleTimer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./extensions/accessibility/ux/toggleTimer */ \"./src/assessment/extensions/accessibility/ux/toggleTimer.js\");\n/* harmony import */ var _extensions_accessibility_ux_whiteNoise_index__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./extensions/accessibility/ux/whiteNoise/index */ \"./src/assessment/extensions/accessibility/ux/whiteNoise/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * index.js is a \"kitchen sink\" file that will load everything when imported. The\n * core LT library, plus all extensions (excluding themes). Probably only use this\n * for development because of the size. In production, try importing core.js and\n * any extensions you might want separately.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar extensions = {\n  extensions: {\n    ariaCountOnNav: _objectSpread({}, _extensions_accessibility_aria_ariaCountOnNav__WEBPACK_IMPORTED_MODULE_1__),\n    blockGrammarChecks: _objectSpread({}, _extensions_validation_blockGrammarChecks__WEBPACK_IMPORTED_MODULE_2__),\n    checkAnswerValidation: _objectSpread({}, _extensions_validation_checkAnswerValidation__WEBPACK_IMPORTED_MODULE_3__),\n    columnResizer: _objectSpread({}, _extensions_accessibility_ux_columnResizer__WEBPACK_IMPORTED_MODULE_4__),\n    contentTabs: _objectSpread({}, _extensions_ui_contentTabs__WEBPACK_IMPORTED_MODULE_5__),\n    disableOnValidate: _objectSpread({}, _extensions_validation_disableOnValidate__WEBPACK_IMPORTED_MODULE_6__),\n    essayLimitByCharacter: _objectSpread({}, _extensions_validation_essayLimitByCharacter__WEBPACK_IMPORTED_MODULE_7__),\n    hideAlternatives: _objectSpread({}, _extensions_accessibility_ux_hideAlternatives__WEBPACK_IMPORTED_MODULE_8__),\n    keyboardShortcuts: _objectSpread({}, _extensions_accessibility_ux_keyboardShortcuts__WEBPACK_IMPORTED_MODULE_9__),\n    magnifier: _objectSpread({}, _extensions_accessibility_ux_magnifier__WEBPACK_IMPORTED_MODULE_10__),\n    mcqLabelPrefix: _objectSpread({}, _extensions_accessibility_ux_mcqLabelPrefix__WEBPACK_IMPORTED_MODULE_11__),\n    networkStatus: _objectSpread({}, _extensions_ui_networkStatus_index__WEBPACK_IMPORTED_MODULE_12__),\n    pageOverlay: _objectSpread({}, _extensions_accessibility_ux_pageOverlay__WEBPACK_IMPORTED_MODULE_13__),\n    renderPDF: _objectSpread({}, _extensions_ui_renderPDF_index__WEBPACK_IMPORTED_MODULE_14__),\n    resetResponse: _objectSpread({}, _extensions_accessibility_ux_resetResponse__WEBPACK_IMPORTED_MODULE_15__),\n    toggleTimer: _objectSpread({}, _extensions_accessibility_ux_toggleTimer__WEBPACK_IMPORTED_MODULE_16__),\n    whiteNoise: _objectSpread({}, _extensions_accessibility_ux_whiteNoise_index__WEBPACK_IMPORTED_MODULE_17__)\n  }\n};\nvar LT = _objectSpread(_objectSpread({}, _core__WEBPACK_IMPORTED_MODULE_0__.LT), extensions);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXNzbWVudC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQztBQUU2QztBQUNBO0FBQ007QUFDVjtBQUNsQjtBQUNvQjtBQUNRO0FBQ0o7QUFDRTtBQUNoQjtBQUNVO0FBQ1Y7QUFDSTtBQUNaO0FBQ2dCO0FBQ0o7QUFDSTtBQUU3RSxJQUFNbUIsVUFBVSxHQUFHO0VBQ2ZBLFVBQVUsRUFBRTtJQUNSakIsY0FBYyxFQUFBa0IsYUFBQSxLQUFPbEIsMEVBQWMsQ0FBRTtJQUNyQ0Msa0JBQWtCLEVBQUFpQixhQUFBLEtBQU9qQixzRUFBa0IsQ0FBRTtJQUM3Q0MscUJBQXFCLEVBQUFnQixhQUFBLEtBQU9oQix5RUFBcUIsQ0FBRTtJQUNuREMsYUFBYSxFQUFBZSxhQUFBLEtBQU9mLHVFQUFhLENBQUU7SUFDbkNDLFdBQVcsRUFBQWMsYUFBQSxLQUFPZCx1REFBVyxDQUFFO0lBQy9CQyxpQkFBaUIsRUFBQWEsYUFBQSxLQUFPYixxRUFBaUIsQ0FBRTtJQUMzQ0MscUJBQXFCLEVBQUFZLGFBQUEsS0FBT1oseUVBQXFCLENBQUU7SUFDbkRDLGdCQUFnQixFQUFBVyxhQUFBLEtBQU9YLDBFQUFnQixDQUFFO0lBQ3pDQyxpQkFBaUIsRUFBQVUsYUFBQSxLQUFPViwyRUFBaUIsQ0FBRTtJQUMzQ0MsU0FBUyxFQUFBUyxhQUFBLEtBQU9ULG9FQUFTLENBQUU7SUFDM0JDLGNBQWMsRUFBQVEsYUFBQSxLQUFPUix5RUFBYyxDQUFFO0lBQ3JDQyxhQUFhLEVBQUFPLGFBQUEsS0FBT1AsZ0VBQWEsQ0FBRTtJQUNuQ0MsV0FBVyxFQUFBTSxhQUFBLEtBQU9OLHNFQUFXLENBQUU7SUFDL0JDLFNBQVMsRUFBQUssYUFBQSxLQUFPTCw0REFBUyxDQUFFO0lBQzNCQyxhQUFhLEVBQUFJLGFBQUEsS0FBT0osd0VBQWEsQ0FBRTtJQUNuQ0MsV0FBVyxFQUFBRyxhQUFBLEtBQU9ILHNFQUFXLENBQUU7SUFDL0JDLFVBQVUsRUFBQUUsYUFBQSxLQUFPRiwyRUFBVTtFQUMvQjtBQUNKLENBQUM7QUFFTSxJQUFNbEIsRUFBRSxHQUFBb0IsYUFBQSxDQUFBQSxhQUFBLEtBQVFuQixxQ0FBSSxHQUFLa0IsVUFBVSxDQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL3NyYy9hc3Nlc3NtZW50L2luZGV4LmpzPzA3MmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBpbmRleC5qcyBpcyBhIFwia2l0Y2hlbiBzaW5rXCIgZmlsZSB0aGF0IHdpbGwgbG9hZCBldmVyeXRoaW5nIHdoZW4gaW1wb3J0ZWQuIFRoZVxuICogY29yZSBMVCBsaWJyYXJ5LCBwbHVzIGFsbCBleHRlbnNpb25zIChleGNsdWRpbmcgdGhlbWVzKS4gUHJvYmFibHkgb25seSB1c2UgdGhpc1xuICogZm9yIGRldmVsb3BtZW50IGJlY2F1c2Ugb2YgdGhlIHNpemUuIEluIHByb2R1Y3Rpb24sIHRyeSBpbXBvcnRpbmcgY29yZS5qcyBhbmRcbiAqIGFueSBleHRlbnNpb25zIHlvdSBtaWdodCB3YW50IHNlcGFyYXRlbHkuXG4gKi9cblxuaW1wb3J0IHsgTFQgYXMgY29yZSB9IGZyb20gJy4vY29yZSc7XG5cbmltcG9ydCAqIGFzIGFyaWFDb3VudE9uTmF2IGZyb20gJy4vZXh0ZW5zaW9ucy9hY2Nlc3NpYmlsaXR5L2FyaWEvYXJpYUNvdW50T25OYXYnO1xuaW1wb3J0ICogYXMgYmxvY2tHcmFtbWFyQ2hlY2tzIGZyb20gJy4vZXh0ZW5zaW9ucy92YWxpZGF0aW9uL2Jsb2NrR3JhbW1hckNoZWNrcyc7XG5pbXBvcnQgKiBhcyBjaGVja0Fuc3dlclZhbGlkYXRpb24gZnJvbSAnLi9leHRlbnNpb25zL3ZhbGlkYXRpb24vY2hlY2tBbnN3ZXJWYWxpZGF0aW9uJztcbmltcG9ydCAqIGFzIGNvbHVtblJlc2l6ZXIgZnJvbSAnLi9leHRlbnNpb25zL2FjY2Vzc2liaWxpdHkvdXgvY29sdW1uUmVzaXplcic7XG5pbXBvcnQgKiBhcyBjb250ZW50VGFicyBmcm9tICcuL2V4dGVuc2lvbnMvdWkvY29udGVudFRhYnMnO1xuaW1wb3J0ICogYXMgZGlzYWJsZU9uVmFsaWRhdGUgZnJvbSAnLi9leHRlbnNpb25zL3ZhbGlkYXRpb24vZGlzYWJsZU9uVmFsaWRhdGUnO1xuaW1wb3J0ICogYXMgZXNzYXlMaW1pdEJ5Q2hhcmFjdGVyIGZyb20gJy4vZXh0ZW5zaW9ucy92YWxpZGF0aW9uL2Vzc2F5TGltaXRCeUNoYXJhY3Rlcic7XG5pbXBvcnQgKiBhcyBoaWRlQWx0ZXJuYXRpdmVzIGZyb20gJy4vZXh0ZW5zaW9ucy9hY2Nlc3NpYmlsaXR5L3V4L2hpZGVBbHRlcm5hdGl2ZXMnO1xuaW1wb3J0ICogYXMga2V5Ym9hcmRTaG9ydGN1dHMgZnJvbSAnLi9leHRlbnNpb25zL2FjY2Vzc2liaWxpdHkvdXgva2V5Ym9hcmRTaG9ydGN1dHMnO1xuaW1wb3J0ICogYXMgbWFnbmlmaWVyIGZyb20gJy4vZXh0ZW5zaW9ucy9hY2Nlc3NpYmlsaXR5L3V4L21hZ25pZmllcic7XG5pbXBvcnQgKiBhcyBtY3FMYWJlbFByZWZpeCBmcm9tICcuL2V4dGVuc2lvbnMvYWNjZXNzaWJpbGl0eS91eC9tY3FMYWJlbFByZWZpeCc7XG5pbXBvcnQgKiBhcyBuZXR3b3JrU3RhdHVzIGZyb20gJy4vZXh0ZW5zaW9ucy91aS9uZXR3b3JrU3RhdHVzL2luZGV4JztcbmltcG9ydCAqIGFzIHBhZ2VPdmVybGF5IGZyb20gJy4vZXh0ZW5zaW9ucy9hY2Nlc3NpYmlsaXR5L3V4L3BhZ2VPdmVybGF5JztcbmltcG9ydCAqIGFzIHJlbmRlclBERiBmcm9tICcuL2V4dGVuc2lvbnMvdWkvcmVuZGVyUERGL2luZGV4JztcbmltcG9ydCAqIGFzIHJlc2V0UmVzcG9uc2UgZnJvbSAnLi9leHRlbnNpb25zL2FjY2Vzc2liaWxpdHkvdXgvcmVzZXRSZXNwb25zZSc7XG5pbXBvcnQgKiBhcyB0b2dnbGVUaW1lciBmcm9tICcuL2V4dGVuc2lvbnMvYWNjZXNzaWJpbGl0eS91eC90b2dnbGVUaW1lcic7XG5pbXBvcnQgKiBhcyB3aGl0ZU5vaXNlIGZyb20gJy4vZXh0ZW5zaW9ucy9hY2Nlc3NpYmlsaXR5L3V4L3doaXRlTm9pc2UvaW5kZXgnO1xuXG5jb25zdCBleHRlbnNpb25zID0ge1xuICAgIGV4dGVuc2lvbnM6IHtcbiAgICAgICAgYXJpYUNvdW50T25OYXY6IHsgLi4uYXJpYUNvdW50T25OYXYgfSxcbiAgICAgICAgYmxvY2tHcmFtbWFyQ2hlY2tzOiB7IC4uLmJsb2NrR3JhbW1hckNoZWNrcyB9LFxuICAgICAgICBjaGVja0Fuc3dlclZhbGlkYXRpb246IHsgLi4uY2hlY2tBbnN3ZXJWYWxpZGF0aW9uIH0sXG4gICAgICAgIGNvbHVtblJlc2l6ZXI6IHsgLi4uY29sdW1uUmVzaXplciB9LFxuICAgICAgICBjb250ZW50VGFiczogeyAuLi5jb250ZW50VGFicyB9LFxuICAgICAgICBkaXNhYmxlT25WYWxpZGF0ZTogeyAuLi5kaXNhYmxlT25WYWxpZGF0ZSB9LFxuICAgICAgICBlc3NheUxpbWl0QnlDaGFyYWN0ZXI6IHsgLi4uZXNzYXlMaW1pdEJ5Q2hhcmFjdGVyIH0sXG4gICAgICAgIGhpZGVBbHRlcm5hdGl2ZXM6IHsgLi4uaGlkZUFsdGVybmF0aXZlcyB9LFxuICAgICAgICBrZXlib2FyZFNob3J0Y3V0czogeyAuLi5rZXlib2FyZFNob3J0Y3V0cyB9LFxuICAgICAgICBtYWduaWZpZXI6IHsgLi4ubWFnbmlmaWVyIH0sXG4gICAgICAgIG1jcUxhYmVsUHJlZml4OiB7IC4uLm1jcUxhYmVsUHJlZml4IH0sXG4gICAgICAgIG5ldHdvcmtTdGF0dXM6IHsgLi4ubmV0d29ya1N0YXR1cyB9LFxuICAgICAgICBwYWdlT3ZlcmxheTogeyAuLi5wYWdlT3ZlcmxheSB9LFxuICAgICAgICByZW5kZXJQREY6IHsgLi4ucmVuZGVyUERGIH0sXG4gICAgICAgIHJlc2V0UmVzcG9uc2U6IHsgLi4ucmVzZXRSZXNwb25zZSB9LFxuICAgICAgICB0b2dnbGVUaW1lcjogeyAuLi50b2dnbGVUaW1lciB9LFxuICAgICAgICB3aGl0ZU5vaXNlOiB7IC4uLndoaXRlTm9pc2UgfSxcbiAgICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IExUID0geyAuLi5jb3JlLCAuLi5leHRlbnNpb25zIH07XG4iXSwibmFtZXMiOlsiTFQiLCJjb3JlIiwiYXJpYUNvdW50T25OYXYiLCJibG9ja0dyYW1tYXJDaGVja3MiLCJjaGVja0Fuc3dlclZhbGlkYXRpb24iLCJjb2x1bW5SZXNpemVyIiwiY29udGVudFRhYnMiLCJkaXNhYmxlT25WYWxpZGF0ZSIsImVzc2F5TGltaXRCeUNoYXJhY3RlciIsImhpZGVBbHRlcm5hdGl2ZXMiLCJrZXlib2FyZFNob3J0Y3V0cyIsIm1hZ25pZmllciIsIm1jcUxhYmVsUHJlZml4IiwibmV0d29ya1N0YXR1cyIsInBhZ2VPdmVybGF5IiwicmVuZGVyUERGIiwicmVzZXRSZXNwb25zZSIsInRvZ2dsZVRpbWVyIiwid2hpdGVOb2lzZSIsImV4dGVuc2lvbnMiLCJfb2JqZWN0U3ByZWFkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assessment/index.js\n");

/***/ }),

/***/ "./src/utils/dom.js":
/*!**************************!*\
  !*** ./src/utils/dom.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setObserver: () => (/* binding */ setObserver),\n/* harmony export */   waitForElement: () => (/* binding */ waitForElement)\n/* harmony export */ });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"./src/utils/logger.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n/**\n * A utility DOM object.\n * @module Utils/Dom\n */\n\n/**\n * Checks DOM element for existence. If not found we retry\n * n number of times with a delay.\n * @since 2.22.2\n * @param {string} id\n * @param {*} callback\n * @param {number} retries\n */\nfunction waitForElement(id, callback) {\n  var retries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  var element = document.getElementById(id);\n  if (element) {\n    callback(element);\n  } else if (retries > 0) {\n    setTimeout(function () {\n      return waitForElement(id, callback, retries - 1);\n    }, 10);\n  } else {\n    console.warn(\"Element with ID \\\"\".concat(id, \"\\\" not found after \").concat(retries, \" attempts.\"));\n  }\n}\n\n/**\n * Observe the DOM for the first appearance of an element matching the selector.\n * Prevents multiple observers from being created for the same selector.\n *\n * @param {string} selector - CSS selector to watch for.\n * @param {function} callback - Function to call when element is found.\n * @param {object} [options] - The root element to observe (options.root).\n * @param {object} [activeObservers] - Cache of any current active observers.\n * @returns {function} disconnect - Call to stop observing manually.\n * @since 2.24.0\n * @ignore\n */\nfunction setObserver(selector, callback, options, state) {\n  var root = options.root || document.body;\n  var observeConfig = _objectSpread({\n    childList: true,\n    subtree: true\n  }, options.observeConfig);\n\n  // Prevent duplicate observers for the same selector\n  if (state.activeObservers.has(selector)) {\n    _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(\"\".concat(state.logPrefix, \"Already observing\"), selector);\n    return function () {};\n  }\n\n  // Check immediately for element already in the DOM\n  var existing = root.querySelector(selector);\n  if (existing) {\n    _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(\"\".concat(state.logPrefix, \"Element already in DOM\"), selector);\n    callback(existing);\n    return function () {};\n  }\n\n  // Register selector to prevent duplicate observers\n  state.activeObservers.add(selector);\n  var observer = new MutationObserver(function (mutations, observerInstance) {\n    var _iterator = _createForOfIteratorHelper(mutations),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var mutation = _step.value;\n        if (mutation.type !== 'childList') {\n          continue;\n        }\n        var _iterator2 = _createForOfIteratorHelper(mutation.addedNodes),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var node = _step2.value;\n            if (node.nodeType !== 1) {\n              continue;\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(\"\".concat(state.logPrefix, \"Observing changes: \"), root, node);\n            if (node.matches && node.matches(selector)) {\n              observerInstance.disconnect();\n              _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(\"\".concat(state.logPrefix, \"Disconnecting \").concat(selector));\n              state.activeObservers[\"delete\"](selector);\n              callback(node);\n              return;\n            }\n            if (node.querySelector) {\n              var match = node.querySelector(selector);\n              if (match) {\n                observerInstance.disconnect();\n                _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(\"\".concat(state.logPrefix, \"Disconnecting \").concat(selector));\n                state.activeObservers[\"delete\"](selector);\n                callback(match);\n                return;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  });\n  _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(\"\".concat(state.logPrefix, \"Observing for \").concat(selector));\n  observer.observe(root, observeConfig);\n  return function disconnect() {\n    observer.disconnect();\n    state.activeObservers[\"delete\"](selector);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/dom.js\n");

/***/ }),

/***/ "./src/utils/logger.js":
/*!*****************************!*\
  !*** ./src/utils/logger.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * A utility logger that generates styled log outputs.\n * @module Utils/Logger\n */\n\n/* eslint-disable no-console */\n\n/**\n * Debug only logs to the console when verbose (or debug) mode is enabled.\n * @static\n * @since 2.10.0\n * @param {*} msg\n */\nfunction debug() {\n  var _console;\n  var style = 'display:inline-block;background-color:purple;color:#fff;font-weight:bold;padding:3px 7px;border-radius:3px';\n  for (var _len = arguments.length, msg = new Array(_len), _key = 0; _key < _len; _key++) {\n    msg[_key] = arguments[_key];\n  }\n  (_console = console).debug.apply(_console, ['%cDebug:', style, ''].concat(msg));\n}\n\n/**\n * Formatted error logger to the console\n * @static\n * @since 0.1.0\n * @param {*} msg\n */\nfunction error() {\n  var _console2;\n  var style = 'display:inline-block;background-color:#e0005a;color:#fff;font-weight:bold;padding:3px 7px;border-radius:3px';\n  for (var _len2 = arguments.length, msg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    msg[_key2] = arguments[_key2];\n  }\n  (_console2 = console).error.apply(_console2, ['%cError:', style, ''].concat(msg));\n}\n\n/**\n * Formatted info logger to the console\n * @static\n * @since 0.1.0\n * @param {*} msg\n */\nfunction info() {\n  var _console3;\n  var style = 'display:inline-block;background-color:#46C0FF;color:#000;font-weight:bold;padding:3px 7px;border-radius:3px';\n  for (var _len3 = arguments.length, msg = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    msg[_key3] = arguments[_key3];\n  }\n  (_console3 = console).info.apply(_console3, ['%cInfo:', style, ''].concat(msg));\n}\n\n/**\n * Generic logger to the console\n * @static\n * @since 0.1.0\n * @param {*} msg\n */\nfunction log() {\n  var _console4;\n  (_console4 = console).log.apply(_console4, arguments);\n}\n\n/**\n * Formatted warning logger to the console\n * @static\n * @since 0.1.0\n * @param {*} msg\n */\nfunction warn() {\n  var _console5;\n  var style = 'display:inline-block;background-color:gold;color:#000;font-weight:bold;padding:3px 7px;border-radius:3px';\n  for (var _len4 = arguments.length, msg = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    msg[_key4] = arguments[_key4];\n  }\n  (_console5 = console).warn.apply(_console5, ['%cWarning:', style, ''].concat(msg));\n}\nvar logger = {\n  debug: debug,\n  error: error,\n  info: info,\n  log: log,\n  warn: warn\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logger);\n\n/* eslint-enable no-console *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTQSxLQUFLQSxDQUFBLEVBQVM7RUFBQSxJQUFBQyxRQUFBO0VBQ25CLElBQU1DLEtBQUssR0FBRyw0R0FBNEc7RUFBQyxTQUFBQyxJQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUQ3R0MsR0FBRyxPQUFBQyxLQUFBLENBQUFKLElBQUEsR0FBQUssSUFBQSxNQUFBQSxJQUFBLEdBQUFMLElBQUEsRUFBQUssSUFBQTtJQUFIRixHQUFHLENBQUFFLElBQUEsSUFBQUosU0FBQSxDQUFBSSxJQUFBO0VBQUE7RUFFakIsQ0FBQVAsUUFBQSxHQUFBUSxPQUFPLEVBQUNULEtBQUssQ0FBQVUsS0FBQSxDQUFBVCxRQUFBLEdBQUMsVUFBVSxFQUFFQyxLQUFLLEVBQUUsRUFBRSxFQUFBUyxNQUFBLENBQUtMLEdBQUcsRUFBQztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTTSxLQUFLQSxDQUFBLEVBQVM7RUFBQSxJQUFBQyxTQUFBO0VBQ25CLElBQU1YLEtBQUssR0FBRyw2R0FBNkc7RUFBQyxTQUFBWSxLQUFBLEdBQUFWLFNBQUEsQ0FBQUMsTUFBQSxFQUQ5R0MsR0FBRyxPQUFBQyxLQUFBLENBQUFPLEtBQUEsR0FBQUMsS0FBQSxNQUFBQSxLQUFBLEdBQUFELEtBQUEsRUFBQUMsS0FBQTtJQUFIVCxHQUFHLENBQUFTLEtBQUEsSUFBQVgsU0FBQSxDQUFBVyxLQUFBO0VBQUE7RUFFakIsQ0FBQUYsU0FBQSxHQUFBSixPQUFPLEVBQUNHLEtBQUssQ0FBQUYsS0FBQSxDQUFBRyxTQUFBLEdBQUMsVUFBVSxFQUFFWCxLQUFLLEVBQUUsRUFBRSxFQUFBUyxNQUFBLENBQUtMLEdBQUcsRUFBQztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTVSxJQUFJQSxDQUFBLEVBQVM7RUFBQSxJQUFBQyxTQUFBO0VBQ2xCLElBQU1mLEtBQUssR0FBRyw2R0FBNkc7RUFBQyxTQUFBZ0IsS0FBQSxHQUFBZCxTQUFBLENBQUFDLE1BQUEsRUFEL0dDLEdBQUcsT0FBQUMsS0FBQSxDQUFBVyxLQUFBLEdBQUFDLEtBQUEsTUFBQUEsS0FBQSxHQUFBRCxLQUFBLEVBQUFDLEtBQUE7SUFBSGIsR0FBRyxDQUFBYSxLQUFBLElBQUFmLFNBQUEsQ0FBQWUsS0FBQTtFQUFBO0VBRWhCLENBQUFGLFNBQUEsR0FBQVIsT0FBTyxFQUFDTyxJQUFJLENBQUFOLEtBQUEsQ0FBQU8sU0FBQSxHQUFDLFNBQVMsRUFBRWYsS0FBSyxFQUFFLEVBQUUsRUFBQVMsTUFBQSxDQUFLTCxHQUFHLEVBQUM7QUFDOUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU2MsR0FBR0EsQ0FBQSxFQUFTO0VBQUEsSUFBQUMsU0FBQTtFQUNqQixDQUFBQSxTQUFBLEdBQUFaLE9BQU8sRUFBQ1csR0FBRyxDQUFBVixLQUFBLENBQUFXLFNBQUEsRUFBQWpCLFNBQU8sQ0FBQztBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTa0IsSUFBSUEsQ0FBQSxFQUFTO0VBQUEsSUFBQUMsU0FBQTtFQUNsQixJQUFNckIsS0FBSyxHQUFHLDBHQUEwRztFQUFDLFNBQUFzQixLQUFBLEdBQUFwQixTQUFBLENBQUFDLE1BQUEsRUFENUdDLEdBQUcsT0FBQUMsS0FBQSxDQUFBaUIsS0FBQSxHQUFBQyxLQUFBLE1BQUFBLEtBQUEsR0FBQUQsS0FBQSxFQUFBQyxLQUFBO0lBQUhuQixHQUFHLENBQUFtQixLQUFBLElBQUFyQixTQUFBLENBQUFxQixLQUFBO0VBQUE7RUFFaEIsQ0FBQUYsU0FBQSxHQUFBZCxPQUFPLEVBQUNhLElBQUksQ0FBQVosS0FBQSxDQUFBYSxTQUFBLEdBQUMsWUFBWSxFQUFFckIsS0FBSyxFQUFFLEVBQUUsRUFBQVMsTUFBQSxDQUFLTCxHQUFHLEVBQUM7QUFDakQ7QUFFQSxJQUFNb0IsTUFBTSxHQUFHO0VBQ1gxQixLQUFLLEVBQUxBLEtBQUs7RUFDTFksS0FBSyxFQUFMQSxLQUFLO0VBQ0xJLElBQUksRUFBSkEsSUFBSTtFQUNKSSxHQUFHLEVBQUhBLEdBQUc7RUFDSEUsSUFBSSxFQUFKQTtBQUNKLENBQUM7QUFFRCxpRUFBZUksTUFBTSxFQUFDOztBQUV0QiIsInNvdXJjZXMiOlsid2VicGFjazovL0BjYXNwaW5ndXMvbHQvLi9zcmMvdXRpbHMvbG9nZ2VyLmpzPzgyM2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHV0aWxpdHkgbG9nZ2VyIHRoYXQgZ2VuZXJhdGVzIHN0eWxlZCBsb2cgb3V0cHV0cy5cbiAqIEBtb2R1bGUgVXRpbHMvTG9nZ2VyXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuXG4vKipcbiAqIERlYnVnIG9ubHkgbG9ncyB0byB0aGUgY29uc29sZSB3aGVuIHZlcmJvc2UgKG9yIGRlYnVnKSBtb2RlIGlzIGVuYWJsZWQuXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMi4xMC4wXG4gKiBAcGFyYW0geyp9IG1zZ1xuICovXG5mdW5jdGlvbiBkZWJ1ZyguLi5tc2cpIHtcbiAgICBjb25zdCBzdHlsZSA9ICdkaXNwbGF5OmlubGluZS1ibG9jaztiYWNrZ3JvdW5kLWNvbG9yOnB1cnBsZTtjb2xvcjojZmZmO2ZvbnQtd2VpZ2h0OmJvbGQ7cGFkZGluZzozcHggN3B4O2JvcmRlci1yYWRpdXM6M3B4JztcbiAgICBjb25zb2xlLmRlYnVnKCclY0RlYnVnOicsIHN0eWxlLCAnJywgLi4ubXNnKTtcbn1cblxuLyoqXG4gKiBGb3JtYXR0ZWQgZXJyb3IgbG9nZ2VyIHRvIHRoZSBjb25zb2xlXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBwYXJhbSB7Kn0gbXNnXG4gKi9cbmZ1bmN0aW9uIGVycm9yKC4uLm1zZykge1xuICAgIGNvbnN0IHN0eWxlID0gJ2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JhY2tncm91bmQtY29sb3I6I2UwMDA1YTtjb2xvcjojZmZmO2ZvbnQtd2VpZ2h0OmJvbGQ7cGFkZGluZzozcHggN3B4O2JvcmRlci1yYWRpdXM6M3B4JztcbiAgICBjb25zb2xlLmVycm9yKCclY0Vycm9yOicsIHN0eWxlLCAnJywgLi4ubXNnKTtcbn1cblxuLyoqXG4gKiBGb3JtYXR0ZWQgaW5mbyBsb2dnZXIgdG8gdGhlIGNvbnNvbGVcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQHBhcmFtIHsqfSBtc2dcbiAqL1xuZnVuY3Rpb24gaW5mbyguLi5tc2cpIHtcbiAgICBjb25zdCBzdHlsZSA9ICdkaXNwbGF5OmlubGluZS1ibG9jaztiYWNrZ3JvdW5kLWNvbG9yOiM0NkMwRkY7Y29sb3I6IzAwMDtmb250LXdlaWdodDpib2xkO3BhZGRpbmc6M3B4IDdweDtib3JkZXItcmFkaXVzOjNweCc7XG4gICAgY29uc29sZS5pbmZvKCclY0luZm86Jywgc3R5bGUsICcnLCAuLi5tc2cpO1xufVxuXG4vKipcbiAqIEdlbmVyaWMgbG9nZ2VyIHRvIHRoZSBjb25zb2xlXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBwYXJhbSB7Kn0gbXNnXG4gKi9cbmZ1bmN0aW9uIGxvZyguLi5tc2cpIHtcbiAgICBjb25zb2xlLmxvZyguLi5tc2cpO1xufVxuXG4vKipcbiAqIEZvcm1hdHRlZCB3YXJuaW5nIGxvZ2dlciB0byB0aGUgY29uc29sZVxuICogQHN0YXRpY1xuICogQHNpbmNlIDAuMS4wXG4gKiBAcGFyYW0geyp9IG1zZ1xuICovXG5mdW5jdGlvbiB3YXJuKC4uLm1zZykge1xuICAgIGNvbnN0IHN0eWxlID0gJ2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JhY2tncm91bmQtY29sb3I6Z29sZDtjb2xvcjojMDAwO2ZvbnQtd2VpZ2h0OmJvbGQ7cGFkZGluZzozcHggN3B4O2JvcmRlci1yYWRpdXM6M3B4JztcbiAgICBjb25zb2xlLndhcm4oJyVjV2FybmluZzonLCBzdHlsZSwgJycsIC4uLm1zZyk7XG59XG5cbmNvbnN0IGxvZ2dlciA9IHtcbiAgICBkZWJ1ZyxcbiAgICBlcnJvcixcbiAgICBpbmZvLFxuICAgIGxvZyxcbiAgICB3YXJuLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyO1xuXG4vKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiJdLCJuYW1lcyI6WyJkZWJ1ZyIsIl9jb25zb2xlIiwic3R5bGUiLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwibXNnIiwiQXJyYXkiLCJfa2V5IiwiY29uc29sZSIsImFwcGx5IiwiY29uY2F0IiwiZXJyb3IiLCJfY29uc29sZTIiLCJfbGVuMiIsIl9rZXkyIiwiaW5mbyIsIl9jb25zb2xlMyIsIl9sZW4zIiwiX2tleTMiLCJsb2ciLCJfY29uc29sZTQiLCJ3YXJuIiwiX2NvbnNvbGU1IiwiX2xlbjQiLCJfa2V5NCIsImxvZ2dlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/logger.js\n");

/***/ }),

/***/ "./src/utils/validation.js":
/*!*********************************!*\
  !*** ./src/utils/validation.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasValue: () => (/* binding */ hasValue),\n/* harmony export */   isEmptyObject: () => (/* binding */ isEmptyObject)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * A utility validation object.\n * @module Utils/Validation\n */\n\n/**\n * Checks value for existence. The following are\n * falsy:\n * - null\n * - undefined\n * - ''\n * - []\n * - {}\n * @since 2.11.0\n * @param {any} value\n * @returns {boolean}\n */\nfunction hasValue(value) {\n  if (value === null || value === undefined) {\n    return false;\n  }\n  var type = _typeof(value);\n  switch (type) {\n    case 'string':\n      return value.trim() !== '';\n    case 'object':\n      if (Array.isArray(value)) {\n        return value.length > 0;\n      } else {\n        return Object.keys(value).length > 0;\n      }\n    default:\n      return true;\n  }\n}\n\n/**\n * Checks whether an object is empty\n * @since 2.23.1\n * @param {Object} obj\n * @returns {boolean}\n */\nfunction isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdmFsaWRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSxRQUFRQSxDQUFDQyxLQUFLLEVBQUU7RUFDNUIsSUFBSUEsS0FBSyxLQUFLLElBQUksSUFBSUEsS0FBSyxLQUFLQyxTQUFTLEVBQUU7SUFDdkMsT0FBTyxLQUFLO0VBQ2hCO0VBRUEsSUFBTUMsSUFBSSxHQUFBQyxPQUFBLENBQVVILEtBQUs7RUFDekIsUUFBUUUsSUFBSTtJQUNSLEtBQUssUUFBUTtNQUNULE9BQU9GLEtBQUssQ0FBQ0ksSUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFO0lBQzlCLEtBQUssUUFBUTtNQUNULElBQUlDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDTixLQUFLLENBQUMsRUFBRTtRQUN0QixPQUFPQSxLQUFLLENBQUNPLE1BQU0sR0FBRyxDQUFDO01BQzNCLENBQUMsTUFBTTtRQUNILE9BQU9DLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDVCxLQUFLLENBQUMsQ0FBQ08sTUFBTSxHQUFHLENBQUM7TUFDeEM7SUFDSjtNQUNJLE9BQU8sSUFBSTtFQUNuQjtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNHLGFBQWFBLENBQUNDLEdBQUcsRUFBRTtFQUMvQixPQUFPSCxNQUFNLENBQUNDLElBQUksQ0FBQ0UsR0FBRyxDQUFDLENBQUNKLE1BQU0sS0FBSyxDQUFDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNhc3Bpbmd1cy9sdC8uL3NyYy91dGlscy92YWxpZGF0aW9uLmpzPzU0NjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHV0aWxpdHkgdmFsaWRhdGlvbiBvYmplY3QuXG4gKiBAbW9kdWxlIFV0aWxzL1ZhbGlkYXRpb25cbiAqL1xuXG4vKipcbiAqIENoZWNrcyB2YWx1ZSBmb3IgZXhpc3RlbmNlLiBUaGUgZm9sbG93aW5nIGFyZVxuICogZmFsc3k6XG4gKiAtIG51bGxcbiAqIC0gdW5kZWZpbmVkXG4gKiAtICcnXG4gKiAtIFtdXG4gKiAtIHt9XG4gKiBAc2luY2UgMi4xMS4wXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzVmFsdWUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY29uc3QgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS50cmltKCkgIT09ICcnO1xuICAgICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmxlbmd0aCA+IDA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh2YWx1ZSkubGVuZ3RoID4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBhbiBvYmplY3QgaXMgZW1wdHlcbiAqIEBzaW5jZSAyLjIzLjFcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNFbXB0eU9iamVjdChvYmopIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7XG59XG4iXSwibmFtZXMiOlsiaGFzVmFsdWUiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsInR5cGUiLCJfdHlwZW9mIiwidHJpbSIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsIk9iamVjdCIsImtleXMiLCJpc0VtcHR5T2JqZWN0Iiwib2JqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/validation.js\n");

/***/ }),

/***/ "?d4c0":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		id: moduleId,
/******/ 		loaded: false,
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Flag the module as loaded
/******/ 	module.loaded = true;
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/amd define */
/******/ (() => {
/******/ 	__webpack_require__.amdD = function () {
/******/ 		throw new Error('define cannot be used indirect');
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/amd options */
/******/ (() => {
/******/ 	__webpack_require__.amdO = {};
/******/ })();
/******/ 
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/global */
/******/ (() => {
/******/ 	__webpack_require__.g = (function() {
/******/ 		if (typeof globalThis === 'object') return globalThis;
/******/ 		try {
/******/ 			return this || new Function('return this')();
/******/ 		} catch (e) {
/******/ 			if (typeof window === 'object') return window;
/******/ 		}
/******/ 	})();
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/node module decorator */
/******/ (() => {
/******/ 	__webpack_require__.nmd = (module) => {
/******/ 		module.paths = [];
/******/ 		if (!module.children) module.children = [];
/******/ 		return module;
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval-source-map devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./src/assessment/index.js");
/******/ var __webpack_exports__LT = __webpack_exports__.LT;
/******/ export { __webpack_exports__LT as LT };
/******/ 
